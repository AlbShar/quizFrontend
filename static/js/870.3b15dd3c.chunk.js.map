{"version":3,"file":"static/js/870.3b15dd3c.chunk.js","mappings":"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","sources":["UI/LinkBtn/LinkBtn.Styled.ts","UI/LinkBtn/LinkBtn.tsx","api/getTotalQuestionsNumb.ts","components/InfoBlock/InfoBlock.styled.ts","components/InfoBlock/InfoBlock.tsx","config/firebase/firebaseConfig.js","helpers/convertJSONToText.ts","modules/Footer/Footer/Footer.Styled.ts","modules/Footer/Footer/Footer.tsx","modules/Footer/index.ts","modules/CallToAction/components/InfoTest/InfoTest.styled.ts","modules/CallToAction/components/InfoTest/InfoTest.tsx","modules/CallToAction/helpers/createIdUser.ts","modules/CallToAction/CallToAction/CallToAction.styled.ts","modules/CallToAction/CallToAction/CallToAction.tsx","components/GeneralInfoTest/GeneralInfoTest.tsx","pages/Homepage/Homepage.tsx","styles/FlexWrapper.Styled.ts","styles/Main.Styled.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 8px 33px;\r\n  background-color: var(--color-button);\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  &:disabled {\r\n    filter: grayscale(0.7);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 80px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonQuiz = styled(StyledButton)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nconst StyledButtonBack = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 5px;\r\n  border: none;\r\n  background-color: transparent;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-top: 32px;\r\n  max-width: 540px;\r\n  padding: 5px;\r\n\r\n  @media screen and (min-width: 768.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-button);\r\n  color: var(--color-back-btn);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport {\r\n  StyledButton,\r\n  StyledArticle,\r\n  StyledButtonBack,\r\n  StyledImg,\r\n  StyledSpan,\r\n  StyledButtonQuiz,\r\n};\r\n","import { FC } from 'react';\r\nimport './link.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { MouseEvent } from 'react';\r\n\r\nimport { StyledButton } from './LinkBtn.Styled';\r\n\r\ninterface LinkInt {\r\n  text: string;\r\n  id?: string;\r\n  pageTo: string;\r\n  onClick?: (e: MouseEvent) => void;\r\n  isDisabledBtn?: boolean;\r\n}\r\nconst LinkBtn: FC<LinkInt> = ({\r\n  text,\r\n  pageTo,\r\n  onClick,\r\n  id,\r\n  isDisabledBtn = false,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Link className='btn__link' to={pageTo} onClick={onClick} id={id}>\r\n      <StyledButton disabled={isDisabledBtn}>{t(text)}</StyledButton>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkBtn;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../config/firebase/firebaseConfig';\r\n\r\n// Fix: 11 строку вынести в отдельную строку\r\nconst getTotalQuestionsNumb = async () => {\r\n  try {\r\n    return await new Promise<number>(function (resolve, reject) {\r\n      onValue(ref(db, 'questions'), (snapshot) => {\r\n        const totalQuestionsNumb: number = Object.entries(\r\n          snapshot.val(),\r\n        ).length;\r\n        resolve(totalQuestionsNumb);\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { getTotalQuestionsNumb };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFeatureArticle = styled.article`\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledSummary = styled.summary`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  background-color: var(--color-title-background);\r\n  font: var(--font-little-text-regular);\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  margin: 0 0 10px 0;\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title4);\r\n    justify-content: flex-start;\r\n    padding: 10px 0 10px 40px;\r\n  }\r\n`;\r\nconst StyledP = styled.p`\r\n  font: var(--font-little-text-regular);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 0;\r\n  text-align: justify;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 1129px;\r\n  margin: 13px 0 5px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 13px 0 10px 0;\r\n  }\r\n`;\r\n\r\nconst StyledDivWrapper = styled.div`\r\n  padding: 5px 10px;\r\n  @media screen and (min-width: 459.8px) {\r\n    padding: 10px 20px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledFeatureArticle,\r\n  StyledDivWrapper,\r\n  StyledSummary,\r\n  StyledP,\r\n  StyledImg,\r\n};\r\n","import { FC, ReactNode } from 'react';\r\n\r\nimport {\r\n  StyledFeatureArticle,\r\n  StyledSummary,\r\n  StyledP,\r\n  StyledImg,\r\n  StyledDivWrapper,\r\n} from './InfoBlock.styled';\r\n\r\ninterface Info {\r\n  title: string;\r\n  text: string;\r\n  imgSrc: string;\r\n  imgAlt: string;\r\n  idForText?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InfoBlock: FC<Info> = ({ title, text, imgSrc, imgAlt, idForText }) => {\r\n  return (\r\n    <StyledFeatureArticle>\r\n      <details>\r\n        <StyledSummary>{title}</StyledSummary>\r\n        <StyledDivWrapper>\r\n          {!!imgSrc && <StyledImg src={imgSrc} alt={imgAlt} />}\r\n          <StyledP id={idForText}>{text}</StyledP>\r\n        </StyledDivWrapper>\r\n      </details>\r\n    </StyledFeatureArticle>\r\n  );\r\n};\r\n\r\nexport default InfoBlock;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","// We use the function, when there is html tags in JSON.\r\ninterface IJSONText {\r\n  selector: string;\r\n  json: string;\r\n}\r\n\r\nconst convertJSONToText = (dataArray: IJSONText[]): void => {\r\n  dataArray.forEach((data) => {\r\n    if (document.querySelector(data.selector)) {\r\n      (document.querySelector(data.selector) as HTMLHtmlElement).innerHTML =\r\n        JSON.parse(JSON.stringify(data.json));\r\n    }\r\n  });\r\n};\r\n\r\nexport { convertJSONToText };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFooter = styled.footer`\r\n  box-sizing: border-box;\r\n  background-color: var(--color-footer);\r\n  padding: 16px;\r\n  margin: 10px 0 0 0;\r\n\r\n  @media screen and (min-width: 1023.8px) {\r\n    margin: 30px 0 0 0;\r\n  }\r\n`;\r\n\r\n//#region StyledSections\r\n\r\nconst StyledSection = styled.section`\r\n  @media screen and (min-width: 767.8px) margin-right: 10px;\r\n`;\r\n\r\n//#endregion\r\n\r\n//#region StyledUl\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    order: 2;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    gap: 10px;\r\n  }\r\n\r\n  @media screen and (min-width: 1023.8px) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\n//#endregion\r\n\r\n//#region StyledLi\r\n\r\nconst StyledLi = styled.li`\r\n  text-align: left;\r\n\r\n  &:not(:last-child) {\r\n    margin: 0 0 12px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    padding: 0px;\r\n\r\n    &:not(:last-child) {\r\n      margin: 0;\r\n    }\r\n\r\n    @media screen and (min-width: 1023.8px) {\r\n      &:not(:last-child) {\r\n        margin: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n//#endregion\r\n\r\nexport { StyledFooter, StyledSection, StyledLi, StyledUl };\r\n","import './footer.css';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Container from '../../../components/Container/Container';\r\nimport Logo from '../../../components/Logo/Logo';\r\nimport { StyledFlexWrapper } from '../../../styles/FlexWrapper.Styled';\r\n\r\nimport {\r\n  StyledFooter,\r\n  StyledSection,\r\n  StyledLi,\r\n  StyledUl,\r\n} from './Footer.Styled';\r\n\r\nconst Footer = () => {\r\n  interface InfoFooter {\r\n    text: string;\r\n    link: '/reportbug' | '/reestablish' | '/politics';\r\n  }\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const infoMiddleFooter: InfoFooter[] = [\r\n    { text: t('Сообщить'), link: '/reportbug' },\r\n    { text: t('Восстановить'), link: '/reestablish' },\r\n    { text: t('Политика'), link: '/politics' },\r\n  ];\r\n\r\n  const elementsInfoMiddleFooter = infoMiddleFooter.map((item, index) => {\r\n    return (\r\n      <StyledLi key={index + 1}>\r\n        <Link className='footer__list-link' to={item.link}>\r\n          {item.text}\r\n        </Link>\r\n      </StyledLi>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <Container>\r\n        <StyledFlexWrapper widthFlexStart={767.8} gap={15} jc={'flex-start'}>\r\n          <Logo location='footer' />\r\n          <StyledSection>\r\n            <nav>\r\n              <StyledUl>{elementsInfoMiddleFooter}</StyledUl>\r\n            </nav>\r\n          </StyledSection>\r\n        </StyledFlexWrapper>\r\n      </Container>\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Footer from './Footer/Footer';\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  box-sizing: border-box;\r\n  list-style-type: none;\r\n  margin: 26px 0 0 0;\r\n  padding: 8px 12px;\r\n  background-color: var(--color-call-action-info);\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    max-width: 685px;\r\n    padding: 24px;\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 18px;\r\n  height: 18px;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  color: white;\r\n  font: var(--font-little-text-bold);\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-text-bold);\r\n\r\n    &:not(:last-child) {\r\n      margin: 0 30px 0 0;\r\n    }\r\n\r\n    &:not(:last-child):after {\r\n      position: relative;\r\n      content: '/';\r\n      left: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledUl, StyledImg, StyledLi };\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { getTotalQuestionsNumb } from '../../../../api/getTotalQuestionsNumb';\r\nimport Spinner from '../../../../UI/Spinner/Spinner';\r\n\r\n\r\nimport { StyledUl, StyledImg, StyledLi } from './InfoTest.styled';\r\n\r\nexport interface IInfoTestBlock {\r\n  alt: string;\r\n  text: string;\r\n  srcIcon: string;\r\n}\r\n\r\nconst InfoTest: FC = () => {\r\n  const { t } = useTranslation();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [quantityQuestions, setQuantityQuestions] = useState<number>(0);\r\n\r\n  const dataHasLoaded = (numbQuestions) => {\r\n    setIsLoading(false);\r\n    setQuantityQuestions(numbQuestions);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTotalQuestionsNumb().then(dataHasLoaded);\r\n  }, []);\r\n\r\n  const infoTestBlock: IInfoTestBlock[] = [\r\n    {\r\n      text: `~ ${quantityQuestions} ${t('Время')}`,\r\n      srcIcon: require('../../icons/clock.png'),\r\n      alt: 'icon of clock',\r\n    },\r\n    {\r\n      text: t('Возрастающая_сложность'),\r\n      srcIcon: require('../../icons/helpcircle.png'),\r\n      alt: 'icon of question in circle',\r\n    },\r\n    {\r\n      text: `${quantityQuestions} ${t('Вопросов')}`,\r\n      srcIcon: require('../../icons/barchart.png'),\r\n      alt: 'icon of bar chart',\r\n    },\r\n  ];\r\n  const elementsInfoTestBlock = infoTestBlock.map((item, index) => {\r\n    return (\r\n      <StyledLi key={index + 1}>\r\n        <StyledImg src={item.srcIcon} alt={item.alt} />\r\n        <span>{item.text}</span>\r\n      </StyledLi>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <nav>\r\n      <StyledUl>\r\n        {isLoading ? (\r\n          <Spinner width={50} height={50} color='#fcfdff' margin='auto' />\r\n        ) : (\r\n          elementsInfoTestBlock\r\n        )}\r\n      </StyledUl>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default InfoTest;\r\n","import { push } from 'firebase/database';\r\nimport { ref } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nexport const createIdUser = () => {\r\n  const pushedRef = push(ref(db, 'users/user'));\r\n  if (pushedRef && pushedRef.key) {\r\n    const idUser = pushedRef.key;\r\n    localStorage.setItem('idUser', idUser);\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst StyledCallToAction = styled.section`\r\n  max-width: 100%;\r\n  background-color: var(--color-call-action);\r\n  padding: 16px;\r\n  margin: 0 0 13px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 0 0 32px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 16px 16px 16px 40px;\r\n  }\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n    font: var(--font-title4);\r\n    color: white;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    @media screen and (min-width: 459.8px) {\r\n        font: var(--font-title2);\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  font: var(--font-little-text-regular);\r\n  color: white;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nexport { StyledCallToAction, StyledH1, StyledP };\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport InfoTest from '../components/InfoTest/InfoTest';\r\nimport LinkBtn from '../../../UI/LinkBtn/LinkBtn';\r\nimport { createIdUser } from '../helpers/createIdUser';\r\n\r\nimport { StyledCallToAction, StyledH1, StyledP } from './CallToAction.styled';\r\n\r\n// eslint-disable-next-line\r\nexport const CallToAction = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <StyledCallToAction id='CallToAction'>\r\n      <StyledH1>{t('Тест_для_Frontend_разработчиков')}</StyledH1>\r\n      <InfoTest />\r\n      <StyledP>{t('Добро_пожаловать')}</StyledP>\r\n      <StyledP>{t('Тест_будет')}</StyledP>\r\n      <LinkBtn\r\n        pageTo='quiz'\r\n        onClick={createIdUser}\r\n        text='Начать тест'\r\n      ></LinkBtn>\r\n    </StyledCallToAction>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport InfoBlock from '../InfoBlock/InfoBlock';\r\nimport { convertJSONToText } from '../../helpers/convertJSONToText';\r\n\r\nexport interface IInfoBlocks {\r\n  title: string;\r\n  img?: string;\r\n  id?: string;\r\n  alt?: string;\r\n  text: string;\r\n}\r\nexport interface IJSONText {\r\n  selector: string;\r\n  json: string;\r\n}\r\n\r\nconst GeneralInfoTest = () => {\r\n  const { t } = useTranslation();\r\n  const generalInfo: IInfoBlocks[] = [\r\n    {\r\n      title: t('Особенности_теста'),\r\n      img: require('./images/variants.png'),\r\n      id: 'generalInfoTestText',\r\n      alt: 'Парень ищет верный ответ',\r\n      text: t('Данный_тест'),\r\n    },\r\n    {\r\n      title: t('Как_проходить'),\r\n      text: t('Пройти_тест'),\r\n    },\r\n    {\r\n      title: t('Результаты_теста'),\r\n      img: require('./images/chooseVariant.png'),\r\n      alt: 'Тест с выбранными вариантами ответа',\r\n      text: t('После_прохождения'),\r\n    },\r\n  ];\r\n  const blocksHomepage = generalInfo.map((block, index) => (\r\n    <InfoBlock\r\n      key={index + 1}\r\n      title={block.title}\r\n      text={block.text}\r\n      imgSrc={block.img || ''}\r\n      imgAlt={block.alt || 'Картинка'}\r\n      idForText={block.id}\r\n    />\r\n  ));\r\n\r\n  const JSONText: [IJSONText] = [\r\n    { selector: '#generalInfoTestText', json: t('Данный_тест') },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    convertJSONToText(JSONText);\r\n  });\r\n\r\n  return <section>{blocksHomepage}</section>;\r\n};\r\n\r\nexport default GeneralInfoTest;\r\n","import React from 'react';\r\n\r\nimport Container from '../../components/Container/Container';\r\nimport { CallToAction } from '../../modules/CallToAction/index';\r\nimport Footer from '../../modules/Footer/index';\r\nimport { StyledMain } from '../../styles/Main.Styled';\r\nimport GeneralInfoTest from '../../components/GeneralInfoTest/GeneralInfoTest';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <StyledMain>\r\n        <Container>\r\n          <CallToAction />\r\n          <GeneralInfoTest />\r\n        </Container>\r\n      </StyledMain>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import styled from 'styled-components';\r\n\r\ninterface IFlexWrapper {\r\n  gap?: number;\r\n  widthFlexStart?: number;\r\n  jc?:\r\n    | 'start'\r\n    | 'center'\r\n    | 'space-between'\r\n    | 'space-around'\r\n    | 'space-evenly'\r\n    | 'flex-start'\r\n    | 'flex-end';\r\n}\r\n\r\nconst StyledFlexWrapper = styled.div<IFlexWrapper>`\r\n  gap: ${({ gap }) => (gap ? gap + 'px' : '')};\r\n  ${function ({ widthFlexStart, jc = 'space-between' }) {\r\n    if (!widthFlexStart) {\r\n      return `\r\n            display: flex;\r\n            justify-content: ${jc};\r\n            align-items: center;\r\n            `;\r\n    } else {\r\n      return `\r\n      position: relative;\r\n      @media screen and (min-width: ${widthFlexStart}px) {\r\n        display: flex;\r\n        justify-content: ${jc};\r\n        align-items: center;\r\n        width: 100%;\r\n      }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport { StyledFlexWrapper };\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n`;\r\n"],"names":["StyledButton","styled","text","pageTo","onClick","id","isDisabledBtn","t","useTranslation","className","to","disabled","getTotalQuestionsNumb","async","Promise","resolve","reject","onValue","ref","db","snapshot","totalQuestionsNumb","Object","entries","val","length","error","console","StyledFeatureArticle","StyledSummary","StyledP","StyledImg","StyledDivWrapper","title","imgSrc","imgAlt","idForText","src","alt","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","convertJSONToText","dataArray","forEach","data","document","querySelector","selector","innerHTML","JSON","parse","stringify","json","StyledFooter","StyledSection","StyledUl","StyledLi","elementsInfoMiddleFooter","link","map","item","index","Container","widthFlexStart","gap","jc","Logo","location","isLoading","setIsLoading","useState","quantityQuestions","setQuantityQuestions","dataHasLoaded","numbQuestions","useEffect","then","elementsInfoTestBlock","srcIcon","require","Spinner","width","height","color","margin","createIdUser","pushedRef","push","key","idUser","localStorage","setItem","StyledCallToAction","StyledH1","CallToAction","LinkBtn","blocksHomepage","img","block","InfoBlock","JSONText","Footer","StyledFlexWrapper","StyledMain"],"sourceRoot":""}