{"version":3,"file":"static/js/979.76024b1b.chunk.js","mappings":"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","sources":["api/getTotalQuestionsNumb.ts","components/Header/Header.Styled.ts","components/Header/Header.tsx","config/firebase/firebaseConfig.js","helpers/getIdUser.ts","modules/HeaderResult/styles/Common.Styled.ts","modules/HeaderResult/components/UserInfo/UserInfo.Styled.ts","modules/HeaderResult/components/UserInfo/UserInfo.tsx","modules/HeaderResult/api/getUserInfo.ts","modules/HeaderResult/components/GetCertificate/GetCertificate.Styled.ts","modules/HeaderResult/components/GetCertificate/GetCertificate.tsx","components/FlexWrapper/FlexWrapper.Styled.ts","components/FlexWrapper/FlexWrapper.tsx","modules/HeaderResult/HeaderResult/HeaderResult.Styled.ts","modules/HeaderResult/index.ts","modules/HeaderResult/HeaderResult/HeaderResult.tsx","modules/UserAnswers/UI/Dropdown/Dropdown.Styled.ts","modules/UserAnswers/UI/Dropdown/Dropdown.tsx","modules/UserAnswers/components/FilterByRight/FilterByRight.tsx","modules/UserAnswers/components/FilterByThemes/FilterByThemes.tsx","modules/UserAnswers/api/getAnswerOptions.ts","modules/UserAnswers/api/getInfoQuestions.ts","modules/UserAnswers/helpers/getNumberFromKey.ts","modules/UserAnswers/helpers/filterByRightAnswer.ts","modules/UserAnswers/helpers/getThemes.ts","modules/UserAnswers/helpers/getThemesNames.ts","modules/UserAnswers/helpers/filterByThemes.ts","modules/UserAnswers/helpers/getPointsByThemes.ts","modules/UserAnswers/UserAnswers/UserAnswers.Styled.ts","modules/UserAnswers/index.ts","modules/UserAnswers/UserAnswers/UserAnswers.tsx","modules/UserAnswers/api/getUserAnswers.ts","modules/Doughunt/Doughunt.Styled.ts","components/ChartDoughnut/ChartDoughnut.tsx","modules/Doughunt/index.ts","modules/Doughunt/Doughunt.tsx","modules/FinalResult/FinalResult.Styled.ts","modules/FinalResult/index.ts","modules/FinalResult/FinalResult.tsx","modules/FinalResult/api/getUserAnswers.ts","modules/SpentTime/SpentTime.Styled.ts","modules/SpentTime/helpers/transformSecondsToMinutes.ts","modules/SpentTime/index.ts","modules/SpentTime/SpentTime.tsx","modules/SpentTime/api/getUserInfo.ts","components/BarChart/BarChart.tsx","modules/ChartBar/BarChart.Styled.ts","modules/ChartBar/index.ts","modules/ChartBar/BarChart.tsx","pages/Results/Results.Styled.ts","pages/Results/Results.tsx","styles/Main.Styled.ts"],"sourcesContent":["import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../config/firebase/firebaseConfig';\r\n\r\n// Fix: 11 строку вынести в отдельную строку\r\nconst getTotalQuestionsNumb = async () => {\r\n  try {\r\n    return await new Promise<number>(function (resolve, reject) {\r\n      onValue(ref(db, 'questions'), (snapshot) => {\r\n        const totalQuestionsNumb: number = Object.entries(\r\n          snapshot.val(),\r\n        ).length;\r\n        resolve(totalQuestionsNumb);\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { getTotalQuestionsNumb };\r\n","import styled from 'styled-components';\r\n\r\ninterface IHeader {\r\n  height?: number;\r\n}\r\nexport const HeaderStyled = styled.header<IHeader>`\r\n  background-color: #252b58;\r\n  width: 100%;\r\n  margin: 0 0 34px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 0 0 40px 0;\r\n  }\r\n\r\n  ${function ({ height }) {\r\n    if (height) {\r\n      return `\r\n      @media screen and (min-width: ${1023.8}px) {\r\n        height: ${height}px;\r\n      }\r\n            `;\r\n    }\r\n  }}}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { HeaderStyled } from './Header.Styled';\r\n\r\ninterface IHeader {\r\n  children: React.ReactNode;\r\n  height?: number;\r\n}\r\nconst Header: FC<IHeader> = ({ children, height }) => {\r\n  return <HeaderStyled height={height}>{children}</HeaderStyled>;\r\n};\r\n\r\nexport default Header;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","const getIdUser = <T extends string>(key: T): string => {\r\n  const value = localStorage.getItem(key);\r\n  if (value === null || value === undefined) {\r\n    throw new Error(`Value not found for key '${key}'`);\r\n  }\r\n  try {\r\n    return `${value}`;\r\n  } catch (e: unknown) {\r\n    if (e instanceof Error) {\r\n      throw new Error(`Invalid JSON data for key '${key}': ${e.message}`);\r\n    } else {\r\n      throw new Error(`Unknown error caught: ${e}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport { getIdUser };\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSect = styled.section`\r\n  background-color: #3b4069;\r\n  box-sizing: border-box;\r\n  padding: 16px 8px 13px 16px;\r\n  margin: 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nimport { StyledSect } from '../../styles/Common.Styled';\r\n\r\nconst StyledSection = styled(StyledSect)`\r\n  width: 100%;\r\n  max-width: 288px;\r\n  height: auto;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    max-width: 235px;\r\n  }\r\n\r\n  @media screen and (min-width: 1023.8px) {\r\n    max-width: 383px;\r\n  }\r\n`;\r\n\r\nconst StyledArticleName = styled.article`\r\n  padding: 0 0 12px 0;\r\n  border-width: 0 0 1px 0;\r\n  border-color: rgba(255, 255, 255, 0.1);\r\n  border-style: solid;\r\n`;\r\n\r\nconst StyledArticleEmail = styled.article`\r\n  padding: 9px 0 0 0;\r\n\r\n  @media screen and (min-width: 1023.8px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.h3`\r\n  color: #dfe4e9;\r\n  font: var(--font-little-text-regular);\r\n  margin: 0 8px 0 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledUserData = styled.h3`\r\n  color: #ffffff;\r\n  font: var(--font-little-text-bold);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport {\r\n  StyledLabel,\r\n  StyledUserData,\r\n  StyledArticleName,\r\n  StyledSection,\r\n  StyledArticleEmail,\r\n};\r\n","import { FC, useState, useEffect } from 'react';\r\n\r\nimport Spinner from '../../../../UI/Spinner/Spinner';\r\nimport { getUserInfo } from '../../api/getUserInfo';\r\n\r\nimport {\r\n  StyledLabel,\r\n  StyledUserData,\r\n  StyledArticleName,\r\n  StyledArticleEmail,\r\n} from './UserInfo.Styled';\r\nimport { StyledSection } from './UserInfo.Styled';\r\n\r\ntype TUserInfoDB = {\r\n  name: string;\r\n  email: string;\r\n  quiantityPause: number;\r\n  time: number;\r\n};\r\n\r\nconst UserInfo: FC = () => {\r\n  type TUserInfo = {\r\n    name: string;\r\n    email: string;\r\n    loading: boolean;\r\n    error: boolean;\r\n  };\r\n\r\n  const [userInfo, setUserInfo] = useState<TUserInfo>({\r\n    name: 'Alex',\r\n    email: 'Anton@gmail.com',\r\n    loading: true,\r\n    error: false,\r\n  });\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledSection>\r\n        <StyledArticleName>\r\n          <StyledLabel>Имя</StyledLabel>\r\n          <StyledUserData>{userInfo.name}</StyledUserData>\r\n        </StyledArticleName>\r\n        <StyledArticleEmail>\r\n          <div>\r\n            <StyledLabel as='span'>Email</StyledLabel>\r\n            <StyledUserData as='span'>{userInfo.email}</StyledUserData>\r\n          </div>\r\n        </StyledArticleEmail>\r\n      </StyledSection>\r\n    );\r\n  };\r\n  const errorMessage = 'ERROR!!!';\r\n\r\n  const spinner = userInfo.loading ? (\r\n    <Spinner width={60} height={60} color='#fcfdff' margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const content = !(userInfo.loading || userInfo.error) ? view() : false;\r\n  const error = userInfo.error ? errorMessage : false;\r\n\r\n  const userInfoHasLoaded = (userInfo: TUserInfoDB) => {\r\n    const { name, email } = userInfo;\r\n    setUserInfo((state) => ({ ...state, name, email, loading: false }));\r\n  };\r\n\r\n  const onError = (error: any): never => {\r\n    setUserInfo((state) => ({ ...state, loading: false, error: true }));\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserInfo().then(userInfoHasLoaded).catch(onError);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {spinner}\r\n      {content} {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport { getIdUser } from '../../../helpers/getIdUser';\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getUserInfo = () => {\r\n  return new Promise<any>(function (resolve, reject) {\r\n    onValue(\r\n      ref(db, `users/user${getIdUser('idUser')}/userInfo`),\r\n      (snapshot) => {\r\n        resolve(snapshot.val());\r\n      },\r\n    );\r\n  });\r\n};\r\n\r\nexport { getUserInfo };\r\n","import styled from 'styled-components';\r\n\r\nimport { StyledSect } from '../../styles/Common.Styled';\r\n\r\nconst StyledSection = styled(StyledSect)`\r\n  position: relative;\r\n  width: 288px;\r\n  @media screen and (min-width: 767.8px) {\r\n    max-width: 235px;\r\n    min-height: 118px;\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  font: var(--font-title4);\r\n  color: #ffffff;\r\n  margin: 0;\r\n  padding: 0;\r\n  max-width: 205px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 56px;\r\n  height: 56px;\r\n  position: absolute;\r\n  top: 30%;\r\n  right: 10px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    margin: 0 0 0 15px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  font: var(--font-little-text-regular);\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #ffffff;\r\n  margin: 0;\r\n  padding: 0;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport { StyledH2, StyledButton, StyledImg, StyledSection };\r\n","import { useEffect, useState, FC } from 'react';\r\n\r\nimport { StyledSection } from './GetCertificate.Styled';\r\nimport { StyledH2, StyledButton, StyledImg } from './GetCertificate.Styled';\r\n\r\nconst GetCertificate: FC = () => {\r\n  const [viewportWidth, setViewportWidth] = useState<number>(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setViewportWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledSection>\r\n      {viewportWidth < 767 ? <StyledH2>Получить сертификат</StyledH2> : false}\r\n      <StyledButton>Загрузить файл</StyledButton>\r\n      <StyledImg src={require('../../images/icon_pdf.png')} alt='icon pdf' />\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default GetCertificate;\r\n","import styled from 'styled-components';\r\n\r\ninterface IFlexWrapper {\r\n  gap?: number;\r\n  widthFlexStart?: number;\r\n  widthColumnStart?: number;\r\n  widthColumnEnd?: number;\r\n}\r\n\r\nexport const StyledFlexWrapper = styled.div<IFlexWrapper>`\r\n  gap: ${({ gap }) => (gap ? gap + 'px' : '')};\r\n\r\n  ${function ({ widthColumnStart }) {\r\n    if (widthColumnStart) {\r\n      return `\r\n      display: flex;\r\n      flex-direction: column;\r\n      justigy-content: center;\r\n            `;\r\n    }\r\n  }}}\r\n\r\n  ${function ({ widthColumnEnd }) {\r\n    if (widthColumnEnd) {\r\n      return `\r\n      @media screen and (min-width: ${widthColumnEnd}px) {\r\n        flex-direction: row;\r\n      }\r\n            `;\r\n    }\r\n  }}}\r\n\r\n  ${function ({ widthFlexStart }) {\r\n    if (!widthFlexStart) {\r\n      return `\r\n            display: flex;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            `;\r\n    } else {\r\n      return `\r\n      position: relative;\r\n      @media screen and (min-width: ${widthFlexStart}px) {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        width: 100%;\r\n      }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n","import { FC, CSSProperties } from 'react';\r\n\r\nimport { StyledFlexWrapper } from './FlexWrapper.Styled';\r\n\r\ninterface IFlexWrapper {\r\n  children: React.ReactNode;\r\n  widthFlexStart?: number;\r\n  widthColumnStart?: number;\r\n  widthColumnEnd?: number;\r\n  gap?: number;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst FlexWrapper: FC<IFlexWrapper> = ({\r\n  style,\r\n  children,\r\n  widthFlexStart,\r\n  widthColumnEnd,\r\n  widthColumnStart,\r\n  gap,\r\n}) => {\r\n  return (\r\n    <StyledFlexWrapper\r\n      style={style}\r\n      widthFlexStart={widthFlexStart}\r\n      widthColumnStart={widthColumnStart}\r\n      gap={gap}\r\n      widthColumnEnd={widthColumnEnd}\r\n    >\r\n      {children}\r\n    </StyledFlexWrapper>\r\n  );\r\n};\r\n\r\nexport default FlexWrapper;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledH1 = styled.h1`\r\n  font: var(--font-title5);\r\n  margin: 0;\r\n  padding: 0;\r\n  color: white;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  font: var(--font-little-text-bold);\r\n  margin: 0;\r\n  padding: 0;\r\n  color: white;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    text-align: left;\r\n    margin: 0 15px 0 0;\r\n  }\r\n`;\r\n\r\nexport { StyledH1, StyledH2, StyledArticle };\r\n","import HeaderResult from './HeaderResult/HeaderResult';\r\n\r\nexport default HeaderResult;\r\n","import { FC } from 'react';\r\n\r\nimport Header from '../../../components/Header/Header';\r\nimport Logo from '../../../components/Logo/Logo';\r\nimport UserInfo from '../components/UserInfo/UserInfo';\r\nimport GetCertificate from '../components/GetCertificate/GetCertificate';\r\nimport FlexWrapper from '../../../components/FlexWrapper/FlexWrapper';\r\nimport Container from '../../../components/Container/Container';\r\n\r\nimport { StyledH1, StyledH2, StyledArticle } from './HeaderResult.Styled';\r\n\r\nconst HeaderResult: FC = () => {\r\n  return (\r\n    <Header height={235}>\r\n      <Container>\r\n        <FlexWrapper widthColumnStart={320} widthColumnEnd={767.8}>\r\n          <StyledArticle>\r\n            <Logo location='header' style={{ margin: '0 auto' }} />\r\n            <StyledH1>Поздравляю!</StyledH1>\r\n            <StyledH2>Вы прошли тест &#58;&#41;</StyledH2>\r\n          </StyledArticle>\r\n          <FlexWrapper\r\n            style={{\r\n              margin: '16px 0 19px 0',\r\n              maxWidth: 642,\r\n              width: '100%',\r\n              boxSizing: 'border-box',\r\n            }}\r\n            widthColumnStart={320}\r\n            widthColumnEnd={767.8}\r\n            gap={24}\r\n          >\r\n            <UserInfo />\r\n            <GetCertificate />\r\n          </FlexWrapper>\r\n        </FlexWrapper>\r\n      </Container>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderResult;\r\n","import styled from 'styled-components';\r\n\r\nconst StyleArticleDropdown = styled.article`\r\n  cursor: pointer;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  color: black;\r\n  font: var(--font-little-text-regular);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  z-index: 2;\r\n  left: 0px;\r\n  top: 30px;\r\n  background-color: white;\r\n  position: absolute;\r\n  list-style-type: none;\r\n  font: var(--font-text-bold);\r\n  margin: 0;\r\n  padding: 5px 10px;\r\n  border-radius: 10px 0 0 10px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  // filter: invert(100);\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  font: var(--font-text-regular);\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledImg,\r\n  StyledSpan,\r\n};\r\n","import { FC, CSSProperties, useEffect } from 'react';\r\n\r\nimport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledImg,\r\n  StyledSpan,\r\n} from './Dropdown.Styled';\r\n\r\ntype DropdownProps = {\r\n  style?: CSSProperties;\r\n  selected: string;\r\n  isActive: boolean;\r\n  data: string[];\r\n  toggleListThemes?: () => void;\r\n  themeHasChoosen?: (item: string) => void;\r\n  hideListFilters: () => void;\r\n  idWrapper: string;\r\n};\r\n\r\nconst Dropdown = ({\r\n  hideListFilters,\r\n  data,\r\n  selected,\r\n  isActive,\r\n  style,\r\n  themeHasChoosen,\r\n  toggleListThemes,\r\n  idWrapper,\r\n}: DropdownProps) => {\r\n  const elementLanguages = data.map((item: string, index: number) => {\r\n    return (\r\n      <StyledLi\r\n        key={index + 1}\r\n        tabIndex={0}\r\n        onClick={() => themeHasChoosen && themeHasChoosen(item)}\r\n      >\r\n        {item}\r\n      </StyledLi>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      const target = e.target as HTMLElement;\r\n      if (target.tagName !== 'LI') {\r\n        hideListFilters();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyleArticleDropdown style={style} id={idWrapper}>\r\n      <StyledButton onClick={toggleListThemes}>\r\n        <StyledSpan className='dropdown-btn-text'>\r\n          {selected || data[0]}\r\n        </StyledSpan>\r\n        <StyledImg\r\n          src={require('../../../../assets/images/chevrondown.png')}\r\n          alt='Кнопка вниз'\r\n        />\r\n      </StyledButton>\r\n      {isActive && <StyledUl>{elementLanguages}</StyledUl>}\r\n    </StyleArticleDropdown>\r\n  );\r\n};\r\n\r\nDropdown.displayName = 'Dropdown';\r\n\r\nexport default Dropdown;\r\n","import { FC, useState } from 'react';\r\n\r\nimport Dropdown from '../../UI/Dropdown/Dropdown';\r\n\r\ntype FilterByRightProps = {\r\n  setFilterByRightAnswer: (newFilter: string) => void;\r\n};\r\n\r\nconst FilterByRight: FC<FilterByRightProps> = ({ setFilterByRightAnswer }) => {\r\n  const data: string[] = ['Все вопросы', 'Верно', 'Неверно'];\r\n\r\n  const [typeAnswer, setTypeAnswer] = useState<string>(data[0]);\r\n  const [isShowList, setIsShowList] = useState<boolean>(false);\r\n\r\n  const toggleListThemes = () => {\r\n    setIsShowList((isShowList) => !isShowList);\r\n  };\r\n\r\n  const themeHasChoosen = (item: string) => {\r\n    toggleListThemes();\r\n    setTypeAnswer(item);\r\n    setFilterByRightAnswer(item);\r\n  };\r\n\r\n  const hideListFilters = () => {\r\n    setIsShowList(false);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      toggleListThemes={toggleListThemes}\r\n      data={data}\r\n      selected={typeAnswer}\r\n      isActive={isShowList}\r\n      themeHasChoosen={(item: string) => themeHasChoosen(item)}\r\n      hideListFilters={hideListFilters}\r\n      idWrapper='wrapperTypeAnswer'\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterByRight;\r\n","import { useState, FC } from 'react';\r\n\r\nimport Dropdown from '../../UI/Dropdown/Dropdown';\r\n\r\ntype TFilterByThemesProps = {\r\n  themesNames: string[];\r\n  setFilterByTheme: (item: string) => void;\r\n};\r\n\r\nconst FilterByThemes: FC<TFilterByThemesProps> = ({\r\n  themesNames,\r\n  setFilterByTheme,\r\n}) => {\r\n  const [selectedTheme, setSelectedTheme] = useState<string>(themesNames[0]);\r\n  const [isShowList, setIsShowList] = useState<boolean>(false);\r\n\r\n  const toggleListThemes = () => {\r\n    setIsShowList((isShowList) => !isShowList);\r\n  };\r\n\r\n  const themeHasChoosen = (item: string) => {\r\n    toggleListThemes();\r\n    setSelectedTheme(item);\r\n    setFilterByTheme(item);\r\n  };\r\n\r\n  const hideListFilters = () => {\r\n    setIsShowList(false);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      toggleListThemes={toggleListThemes}\r\n      data={themesNames}\r\n      selected={selectedTheme}\r\n      isActive={isShowList}\r\n      themeHasChoosen={(item: string) => themeHasChoosen(item)}\r\n      style={{ margin: '0 25px 0 0' }}\r\n      hideListFilters={hideListFilters}\r\n      idWrapper='wrapperThemes'\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterByThemes;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getAnswerOptions = async () => {\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(ref(db, 'answers'), (snapshot) => {\r\n      if (snapshot.val()) {\r\n        resolve(snapshot.val());\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getAnswerOptions };\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getInfoQuestions = async () => {\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(ref(db, 'questions'), (snapshot) => {\r\n      if (snapshot.val()) {\r\n        resolve(snapshot.val());\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getInfoQuestions };\r\n","const getNumberFromKey = (key: string): number | undefined => {\r\n  const matches = key.match(/\\d+/);\r\n  if (matches !== null) {\r\n    return parseInt(matches[0]);\r\n  }\r\n};\r\n\r\nexport { getNumberFromKey };\r\n","import type { TInfoQuestionsAndAnswers } from '../types/types';\r\n\r\nconst filterByRightAnswer = (\r\n  data: TInfoQuestionsAndAnswers,\r\n  typeAnswer: string,\r\n) => {\r\n  const transformData = Object.values(data);\r\n\r\n  switch (typeAnswer) {\r\n    case 'Верно':\r\n      return transformData.filter(\r\n        (question) => question?.userAnswer?.point === 1,\r\n      );\r\n    case 'Неверно':\r\n      return transformData.filter(\r\n        (question) => question?.userAnswer?.point === 0,\r\n      );\r\n    default:\r\n      return transformData;\r\n  }\r\n};\r\n\r\nexport default filterByRightAnswer;\r\n","import { getThemesNames } from './getThemesNames';\r\n\r\nimport type { TInfoQuestionsAndAnswers } from '../types/types';\r\n\r\nconst getThemes = (\r\n  infoQuestionsAndAnswers: TInfoQuestionsAndAnswers,\r\n): [string, ...string[]] => {\r\n  if (infoQuestionsAndAnswers) {\r\n    return getThemesNames(infoQuestionsAndAnswers);\r\n  } else {\r\n    return ['Все тематики'];\r\n  }\r\n};\r\n\r\nexport default getThemes;\r\n","type TUserAnswer = {\r\n  point: number;\r\n  userAnswer: string;\r\n};\r\n\r\ntype TAnswerOption = {\r\n  [key: string]: string;\r\n};\r\n\r\ntype TQuestionAndAnswer = {\r\n  descr: string;\r\n  name: string;\r\n  rightAnswer: string;\r\n  theme: string;\r\n  img: string;\r\n  answerOptions: TAnswerOption;\r\n  userAnswer: TUserAnswer;\r\n};\r\n\r\ntype TInfoQuestionsAndAnswers = {\r\n  [key: number]: TQuestionAndAnswer;\r\n};\r\n\r\nconst getThemesNames = (\r\n  infoQuestionsAndAnswers: TInfoQuestionsAndAnswers,\r\n): [string, ...string[]] => {\r\n  const themesNames = new Set(['Все тематики']);\r\n  const allThemes = Object.values(infoQuestionsAndAnswers).map(\r\n    (infoQuestion) => infoQuestion.theme,\r\n  );\r\n  allThemes.forEach((theme) => themesNames.add(theme));\r\n\r\n  return Array.from(themesNames) as [string, ...string[]];\r\n};\r\n\r\nexport { getThemesNames };\r\n","import getThemes from './getThemes';\r\n\r\nimport type { TInfoQuestionsAndAnswers } from '../types/types';\r\n\r\nconst filterByThemes = (\r\n  data: TInfoQuestionsAndAnswers,\r\n  filter: string,\r\n): TInfoQuestionsAndAnswers => {\r\n  const transformData = Object.values(data);\r\n  const themes = getThemes(data).filter((item, index) => index > 0);\r\n\r\n  for (let i = 0; i < themes.length; i++) {\r\n    if (filter === themes[i]) {\r\n      return transformData.filter((question) => question.theme === themes[i]);\r\n    }\r\n  }\r\n\r\n  return transformData;\r\n};\r\n\r\nexport default filterByThemes;\r\n","import getThemes from './getThemes';\r\n\r\nimport type { TInfoQuestionsAndAnswers } from '../types/types';\r\nimport type { TPointsByThemes } from '../../../types/types';\r\n\r\nconst getPointsByThemes = (data: TInfoQuestionsAndAnswers): TPointsByThemes => {\r\n  const themes = getThemes(data).filter((item, i) => i > 0);\r\n  const updateData = Object.values(data).map((item) => ({\r\n    theme: item.theme,\r\n    point: item.userAnswer.point,\r\n  }));\r\n  const pointsByThemes = {};\r\n\r\n  for (const theme of themes) {\r\n    for (const key in updateData) {\r\n      if (theme === updateData[key].theme) {\r\n        if (!pointsByThemes[theme]) {\r\n          pointsByThemes[theme] = { totalPoints: 0, totalQuantityQuestions: 0 };\r\n        }\r\n        pointsByThemes[theme].totalPoints += updateData[key].point;\r\n        pointsByThemes[theme].totalQuantityQuestions += 1;\r\n      }\r\n    }\r\n  }\r\n  return pointsByThemes;\r\n};\r\n\r\nexport default getPointsByThemes;\r\n","import styled from 'styled-components';\r\n\r\ninterface ISpan {\r\n  isRight: boolean;\r\n}\r\n\r\nconst StyledLi = styled.li`\r\n  box-sizing: border-box;\r\n  list-style-type: none;\r\n  font: var(--font-little-text-regular);\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\nconst StyledListAnswers = styled.li`\r\n  box-sizing: border-box;\r\n  word-wrap: break-word;\r\n  list-style-type: none;\r\n  font: var(--font-little-text-regular);\r\n  padding: 0 10px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 8px 0 17px 0;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledSum = styled.summary`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  background-color: var(--color-title-background);\r\n  font: var(--font-little-text-regular);\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  margin: 0 0 10px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title4);\r\n    justify-content: flex-start;\r\n    padding: 10px 0 10px 40px;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-little-text-bold);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-bold);\r\n  }\r\n`;\r\n\r\nconst StyledSection = styled.section`\r\n  margin: 24px 0 18px 0;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: start;\r\n`;\r\n\r\nconst StyledSpanResult = styled.span<ISpan>`\r\n  position: absolute;\r\n  color: ${({ isRight }) => (isRight ? 'green' : 'red')};\r\n  top: 5px;\r\n  right: 0;\r\n\r\n  font: var(--font-little-text-bold);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-bold);\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledLi,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledListAnswers,\r\n  StyledSpanResult,\r\n  StyledSum,\r\n  StyledSection,\r\n};\r\n","import UserAnswers from './UserAnswers/UserAnswers';\r\n\r\nexport default UserAnswers;\r\n","import { useState, FC, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Container from '../../../components/Container/Container';\r\nimport FilterByRight from '../components/FilterByRight/FilterByRight';\r\nimport FilterByThemes from '../components/FilterByThemes/FilterByThemes';\r\nimport { getAnswerOptions } from '../api/getAnswerOptions';\r\nimport { getUserAnswers } from '../api/getUserAnswers';\r\nimport { getInfoQuestions } from '../api/getInfoQuestions';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { getNumberFromKey } from '../helpers/getNumberFromKey';\r\nimport filterByRightAnswer from '../helpers/filterByRightAnswer';\r\nimport filterByThemes from '../helpers/filterByThemes';\r\nimport getThemes from '../helpers/getThemes';\r\nimport getPointsByThemes from '../helpers/getPointsByThemes';\r\n\r\nimport {\r\n  StyledLi,\r\n  StyledListAnswers,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledSpanResult,\r\n  StyledSum,\r\n  StyledSection,\r\n} from './UserAnswers.Styled';\r\n\r\nimport type {\r\n  TInfoQuestionsAndAnswers,\r\n  TAnswersDB,\r\n  TAnswerOptionsLangDB,\r\n  TInfoQuiestionsDB,\r\n  TQuestionAndAnswer,\r\n} from '../types/types';\r\nimport type { TPointsByThemes } from '../../../types/types';\r\n\r\ntype UserAnwersProps = {\r\n  setPointsByTheme: (themes: TPointsByThemes) => void;\r\n};\r\nconst UserAnswers: FC<UserAnwersProps> = ({ setPointsByTheme }) => {\r\n  const { t } = useTranslation();\r\n  const [infoQuestionsAndAnswers, setInfoQuestionsAndAnswers] =\r\n    useState<null | TInfoQuestionsAndAnswers>(null);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [filterTheme, setFilterTheme] = useState<string>('');\r\n  const [filterRight, setFilterRight] = useState<string>('');\r\n\r\n  const errorMessage = 'ERORR!';\r\n  const loading = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const error = isError ? errorMessage : false;\r\n  const view = () => {\r\n    if (infoQuestionsAndAnswers) {\r\n      const visibleData: TInfoQuestionsAndAnswers = filterByRightAnswer(\r\n        filterByThemes(infoQuestionsAndAnswers, filterTheme),\r\n        filterRight,\r\n      );\r\n      return (\r\n        <StyledUl>\r\n          {Object.entries(visibleData as TQuestionAndAnswer[]).map(\r\n            (userAnswerArr, index) => {\r\n              const {\r\n                descr,\r\n                img,\r\n                id,\r\n                name,\r\n                rightAnswer,\r\n                theme,\r\n                answerOptions,\r\n                userAnswer,\r\n              } = userAnswerArr[1];\r\n              const isRight = userAnswer.point ? true : false;\r\n              const color = isRight ? 'green' : 'red';\r\n              const className = {\r\n                borderRadius: 10,\r\n                border: `1px solid ${color}`,\r\n              };\r\n\r\n              return (\r\n                <StyledListAnswers style={className} key={index + 1}>\r\n                  <StyledUl>\r\n                    <StyledSpanResult isRight={isRight}>\r\n                      {isRight ? '\\u2714' : '\\u2718'}\r\n                    </StyledSpanResult>\r\n                    <StyledLi>\r\n                      <StyledSpan>{`Вопрос № ${id}: `}</StyledSpan>\r\n                      {`${name} (${theme})`}\r\n                    </StyledLi>\r\n                    {img === 'No' ? (\r\n                      false\r\n                    ) : (\r\n                      <StyledLi>\r\n                        <img\r\n                          style={{ maxWidth: '100%' }}\r\n                          src={img}\r\n                          alt='code'\r\n                        />\r\n                      </StyledLi>\r\n                    )}\r\n                    <StyledLi>\r\n                      <StyledSpan>{`${t('Варианты_ответов')}: `}</StyledSpan>\r\n                      {Object.entries(answerOptions)\r\n                        .map(([key, value]) => `${key}: ${value}`)\r\n                        .join(', ')}\r\n                    </StyledLi>\r\n                    <StyledLi>\r\n                      <StyledSpan>{`${t('Ваш_ответ')}: `}</StyledSpan>{' '}\r\n                      {userAnswer.userAnswer}\r\n                    </StyledLi>\r\n                    {isRight ? (\r\n                      false\r\n                    ) : (\r\n                      <StyledLi>\r\n                        <StyledSpan>{`${t('Правильный_ответ')}: `}</StyledSpan>\r\n                        {rightAnswer}\r\n                      </StyledLi>\r\n                    )}\r\n                    <StyledLi>\r\n                      <StyledSpan>{`${t('Объяснение')}: `} </StyledSpan>\r\n                      {descr}\r\n                    </StyledLi>\r\n                  </StyledUl>\r\n                </StyledListAnswers>\r\n              );\r\n            },\r\n          )}\r\n        </StyledUl>\r\n      );\r\n    }\r\n  };\r\n  const content = !(isLoading || isError) ? view() : null;\r\n\r\n  const transformUserAnswers = (res: TAnswersDB) => {\r\n    const updateUserAnswers = Object.fromEntries(\r\n      Object.entries(res).map(([key, value]) => [\r\n        getNumberFromKey(key),\r\n        { point: value.point, userAnswer: value.userAnswer },\r\n      ]),\r\n    );\r\n    return updateUserAnswers;\r\n  };\r\n\r\n  const transformData = (res: TAnswerOptionsLangDB | TInfoQuiestionsDB) => {\r\n    const lang: string =\r\n      document.querySelector('html')?.getAttribute('lang') || 'ru';\r\n    const updateAnswerOptions = Object.fromEntries(\r\n      Object.entries(res).map(([key, value]) => [\r\n        getNumberFromKey(key),\r\n        value[lang],\r\n      ]),\r\n    );\r\n    return updateAnswerOptions;\r\n  };\r\n\r\n  const transformQuestionsAndAnswersDB = (\r\n    res: (TAnswersDB | TAnswerOptionsLangDB | TInfoQuiestionsDB)[],\r\n  ) => {\r\n    const [userAnswers, answerOptions, infoQuestions] = res;\r\n\r\n    const data = {\r\n      userAnswers: transformUserAnswers(userAnswers as TAnswersDB),\r\n      answerOptions: transformData(answerOptions as TAnswerOptionsLangDB),\r\n      infoQuestions: transformData(infoQuestions as TInfoQuiestionsDB),\r\n    };\r\n\r\n    const generalInfo = {};\r\n\r\n    for (const key in data.infoQuestions) {\r\n      generalInfo[key] = {\r\n        ...data.infoQuestions[key],\r\n        userAnswer: data.userAnswers[key],\r\n        answerOptions: data.answerOptions[key],\r\n      };\r\n    }\r\n\r\n    setInfoQuestionsAndAnswers(generalInfo);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onError = (error: any): never => {\r\n    setIsError((isError) => !isError);\r\n    throw new Error(error);\r\n  };\r\n\r\n  const setFilterByTheme = (newFilter: string): void => {\r\n    setFilterTheme(newFilter);\r\n  };\r\n\r\n  const setFilterByRightAnswer = (newFilter: string): void => {\r\n    setFilterRight(newFilter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.all([getUserAnswers(), getAnswerOptions(), getInfoQuestions()])\r\n      .then((value) =>\r\n        transformQuestionsAndAnswersDB(\r\n          value as (TAnswersDB | TAnswerOptionsLangDB | TInfoQuiestionsDB)[],\r\n        ),\r\n      )\r\n      .catch(onError);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (infoQuestionsAndAnswers) {\r\n      setPointsByTheme(getPointsByThemes(infoQuestionsAndAnswers));\r\n    }\r\n  }, [infoQuestionsAndAnswers]);\r\n\r\n  return (\r\n    <Container>\r\n      <details open>\r\n        <StyledSum>{t('Ответы')}</StyledSum>\r\n        <StyledSection>\r\n          <FilterByThemes\r\n            themesNames={getThemes(\r\n              infoQuestionsAndAnswers as TInfoQuestionsAndAnswers,\r\n            )}\r\n            setFilterByTheme={setFilterByTheme}\r\n          />\r\n          <FilterByRight setFilterByRightAnswer={setFilterByRightAnswer} />\r\n        </StyledSection>\r\n        {loading} {error} {content}\r\n      </details>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserAnswers;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport { getIdUser } from '../../../helpers/getIdUser';\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ntype TAnswersDB = {\r\n  [key: string]: {\r\n    point: number;\r\n    quantityPause: number;\r\n    question: string;\r\n    theme: string;\r\n    userAnswer: string;\r\n  };\r\n};\r\n\r\nconst getUserAnswers = () => {\r\n  return new Promise<TAnswersDB>(function (resolve, reject) {\r\n    onValue(ref(db, `users/user${getIdUser('idUser')}/answers`), (snapshot) => {\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport { getUserAnswers };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  box-sizing: border-box;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px 8px 9px 8px;\r\n  max-height: 520px;\r\n\r\n  &:not(list-child) {\r\n    margin: 0 0 24px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    &:not(list-child) {\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.article`\r\n  font: var(--font-little-text-regular);\r\n  color: #29313c;\r\n  text-align: justify;\r\n  margin: 12px 0 0 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    margin: 12px 0 42px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1023.8px) {\r\n    margin: 12px 0 33px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1265.8px) {\r\n    margin: 12px 0 15px 0;\r\n  }\r\n`;\r\n\r\nconst StyledDoughuntWrapper = styled.div`\r\n  position: relative;\r\n  width: 265px;\r\n  height: 265px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    // width: 200px;\r\n    // height: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -25%);\r\n  font-family: 'Inter';\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  font-size: 39px;\r\n  line-height: 60px;\r\n  color: #6768d7;\r\n`;\r\n\r\nexport { StyledArticle, StyledP, StyledSpan, StyledDoughuntWrapper };\r\n","import { FC } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  LinearScale,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, LinearScale);\r\n\r\ntype PiechartProps = {\r\n  dataPieChart: number[];\r\n};\r\n\r\nconst ChartDoughnut: FC<PiechartProps> = ({ dataPieChart }) => {\r\n  const data = {\r\n    labels: ['Верно', 'Неверно'],\r\n    datasets: [\r\n      {\r\n        label: '%',\r\n        data: dataPieChart,\r\n        backgroundColor: ['green', 'red'],\r\n        borderColor: ['green', 'red'],\r\n        cutout: '75%',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Doughnut data={data}></Doughnut>;\r\n};\r\n\r\nexport default ChartDoughnut;\r\n","import Doughunt from './Doughunt';\r\n\r\nexport default Doughunt;\r\n","import { FC, useState, useEffect } from 'react';\r\n\r\nimport {\r\n  StyledArticle,\r\n  StyledP,\r\n  StyledSpan,\r\n  StyledDoughuntWrapper,\r\n} from './Doughunt.Styled';\r\n\r\nimport { getTotalQuestionsNumb } from '../../api/getTotalQuestionsNumb';\r\nimport ChartDoughnut from '../../components/ChartDoughnut/ChartDoughnut';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\n\r\ntype DoughnutProps = {\r\n  rightAnswers: number;\r\n};\r\n\r\nconst Doughnut: FC<DoughnutProps> = ({ rightAnswers }) => {\r\n  const [totalQuestionNumbers, setTotalQuestionNumbers] = useState<number>(0);\r\n  const percentRightQuestions = +(\r\n    (100 * rightAnswers) /\r\n    totalQuestionNumbers\r\n  ).toFixed(1);\r\n  const percentWrongQuestions = +(100 - percentRightQuestions).toFixed(1);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledDoughuntWrapper>\r\n          <ChartDoughnut\r\n            dataPieChart={[percentRightQuestions, percentWrongQuestions]}\r\n          />\r\n          <StyledSpan>{`${percentRightQuestions} %`}</StyledSpan>\r\n        </StyledDoughuntWrapper>\r\n        <StyledP>\r\n          График отображает процент вопросов, на которые были даны верные и\r\n          неверные ответы\r\n        </StyledP>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : null;\r\n  const content = !isLoading ? view() : null;\r\n\r\n  useEffect(() => {\r\n    getTotalQuestionsNumb().then((res) => {\r\n      if (res) {\r\n        setTotalQuestionNumbers(res);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {spinner} {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Doughnut;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px 3px 20px;\r\n  position: relative;\r\n\r\n  &:after {\r\n    position: absolute;\r\n    content: '';\r\n    height: 1px;\r\n    color: #dfe4e9;\r\n    background-color: #dfe4e9;\r\n    width: 256px;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 185px;\r\n\r\n    &:after {\r\n      transform: rotate(90deg);\r\n      width: 102px;\r\n      left: 43%;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1439.8px) {\r\n    &:after {\r\n      left: 45.5%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  text-align: center;\r\n  padding: 16px 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledH3 = styled.h3`\r\n  color: #29313c;\r\n  font: var(--font-title5);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  color: #6768d7;\r\n  font: var(--font-title2);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport { StyledSection, StyledH2, StyledH3, StyledArticle };\r\n","import FinalResult from './FinalResult';\r\n\r\nexport default FinalResult;\r\n","import { FC, useEffect, useState } from 'react';\r\n\r\nimport { StyledH2, StyledH3, StyledArticle } from './FinalResult.Styled';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport { getTotalQuestionsNumb } from '../../api/getTotalQuestionsNumb';\r\nimport { getUserAnswers } from './api/getUserAnswers';\r\n\r\ntype FinalResultProps = {\r\n  setRightAnswers: (points: number) => void;\r\n};\r\n\r\nconst FinalResult: FC<FinalResultProps> = ({ setRightAnswers }) => {\r\n  type TState = {\r\n    points:\r\n      | {\r\n          [key: string]: number;\r\n        }\r\n      | false\r\n      | null;\r\n    error: boolean;\r\n    loading: boolean;\r\n    totalQuestionNumbers: number | false | null;\r\n  };\r\n\r\n  type TAnswersDB = {\r\n    [key: string]: {\r\n      point: number;\r\n      quantityPause: number;\r\n      question: string;\r\n      theme: string;\r\n      userAnswer: string;\r\n    };\r\n  };\r\n\r\n  const [state, setState] = useState<TState>({\r\n    error: false,\r\n    loading: true,\r\n    points: false,\r\n    totalQuestionNumbers: false,\r\n  });\r\n\r\n  const ansewrsTransform = (\r\n    response: TAnswersDB | null,\r\n  ): TState['points'] | null => {\r\n    if (response) {\r\n      const points = Object.fromEntries(\r\n        Object.entries({ ...response }).map(([key, value]) => [\r\n          key,\r\n          value.point,\r\n        ]),\r\n      );\r\n      return points;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getTotalPoints = (points: false | TState['points'] | null): number => {\r\n    if (points) {\r\n      return Object.values(points).reduce((sum, curr) => sum + curr, 0);\r\n    } else return 0;\r\n  };\r\n\r\n  const dataHasLoaded = (data: any) => {\r\n    type TdataInfo = {\r\n      points: TState['points'];\r\n      totalQuestionNumbers: TState['totalQuestionNumbers'];\r\n    };\r\n\r\n    const dataInfo: TdataInfo = {\r\n      points: false,\r\n      totalQuestionNumbers: false,\r\n    };\r\n\r\n    const [totalQuestionNumbers, answers] = data;\r\n\r\n    dataInfo.points = ansewrsTransform(answers.value);\r\n    dataInfo.totalQuestionNumbers = totalQuestionNumbers.value\r\n      ? totalQuestionNumbers.value\r\n      : totalQuestionNumbers.value === false\r\n      ? false\r\n      : null;\r\n\r\n    setState(function (state) {\r\n      const { totalQuestionNumbers, points } = dataInfo;\r\n\r\n      return {\r\n        ...state,\r\n        totalQuestionNumbers,\r\n        points,\r\n        loading: false,\r\n      };\r\n    });\r\n    setRightAnswers(getTotalPoints(dataInfo.points));\r\n\r\n    for (const key in dataInfo) {\r\n      if (dataInfo[key] === null) {\r\n        throw new Error(\r\n          `The value of ${key} is ${dataInfo[key]} in ${dataInfo}`,\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const onError = (error: any): never => {\r\n    setState((state) => ({ ...state, loading: false, error: true }));\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.allSettled([getTotalQuestionsNumb(), getUserAnswers()])\r\n      .then(dataHasLoaded)\r\n      .catch(onError);\r\n  }, []);\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledH3>Ваш результат</StyledH3>\r\n        <StyledH2>\r\n          {getTotalPoints(state.points) + ' из ' + state.totalQuestionNumbers}\r\n        </StyledH2>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n\r\n  const spinner = state.loading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const errorMessage = 'ERROR!';\r\n  const error = state.error ? errorMessage : false;\r\n  const content = !(state.loading || state.error) ? view() : false;\r\n\r\n  return (\r\n    <>\r\n      {spinner} {error} {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FinalResult;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport { getIdUser } from '../../../helpers/getIdUser';\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ntype TAnswersDB = {\r\n  [key: string]: {\r\n    point: number;\r\n    quantityPause: number;\r\n    question: string;\r\n    theme: string;\r\n    userAnswer: string;\r\n  };\r\n};\r\n\r\nconst getUserAnswers = () => {\r\n  return new Promise<TAnswersDB>(function (resolve, reject) {\r\n    onValue(ref(db, `users/user${getIdUser('idUser')}/answers`), (snapshot) => {\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport { getUserAnswers };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  text-align: center;\r\n  padding: 16px 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledH3 = styled.h3`\r\n  color: #29313c;\r\n  font: var(--font-title5);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  color: #6768d7;\r\n  font: var(--font-title2);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport { StyledH2, StyledH3, StyledArticle };\r\n","const transformSecondsToMinutes = (seconds: unknown): string | false | null => {\r\n  let result = '';\r\n\r\n  if (typeof seconds === 'number') {\r\n    if (seconds % 60 === 0) {\r\n      result = `${seconds / 60} мин`;\r\n    } else if (seconds < 60) {\r\n      result = `${seconds} сек`;\r\n    } else if (seconds > 60) {\r\n      const minutes = Math.floor(seconds / 60);\r\n      const leftSeconds = seconds - minutes * 60;\r\n      result = `${minutes} мин ${leftSeconds} сек`;\r\n    }\r\n    return result;\r\n  } else if (typeof seconds === 'boolean') {\r\n    return false;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { transformSecondsToMinutes };\r\n","import SpentTime from './SpentTime';\r\n\r\nexport default SpentTime;\r\n","import { FC, useEffect, useState } from 'react';\r\n\r\nimport {\r\n  StyledH2,\r\n  StyledH3,\r\n  StyledArticle,\r\n} from '../SpentTime/SpentTime.Styled';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport { getUserInfo } from './api/getUserInfo';\r\nimport { transformSecondsToMinutes } from './helpers/transformSecondsToMinutes';\r\n\r\nconst SpentTime: FC = () => {\r\n  type TState = {\r\n    loading: boolean;\r\n    error: boolean;\r\n    time: number | false | null;\r\n  };\r\n\r\n  type TUserInfoDB = {\r\n    name: string;\r\n    email: string;\r\n    quiantityPause: number;\r\n    time: number;\r\n  };\r\n\r\n  const [state, setState] = useState<TState>({\r\n    loading: true,\r\n    error: false,\r\n    time: 0,\r\n  });\r\n\r\n  const timeHasLoaded = (userInfo: TUserInfoDB) => {\r\n    const { time } = userInfo;\r\n    setState((state) => ({ ...state, loading: false, time }));\r\n  };\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledH3>Затраченное время</StyledH3>\r\n        <StyledH2>{transformSecondsToMinutes(state.time)}</StyledH2>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n  const spinner = state.loading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const errorMessage = 'ERROR!';\r\n  const error = state.error ? errorMessage : false;\r\n  const content = !(state.loading || state.error) ? view() : false;\r\n\r\n  const onError = (error: any): never => {\r\n    setState((state) => ({ ...state, loading: false, error: true }));\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserInfo().then(timeHasLoaded).catch(onError);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {spinner} {error} {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpentTime;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport { getIdUser } from '../../../helpers/getIdUser';\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ntype TUserInfoDB = {\r\n  name: string;\r\n  email: string;\r\n  quiantityPause: number;\r\n  time: number;\r\n};\r\n\r\nconst getUserInfo = () => {\r\n  return new Promise<TUserInfoDB>(function (resolve, reject) {\r\n    onValue(\r\n      ref(db, `users/user${getIdUser('idUser')}/userInfo`),\r\n      (snapshot) => {\r\n        resolve(snapshot.val());\r\n      },\r\n    );\r\n  });\r\n};\r\n\r\nexport { getUserInfo };\r\n","import React, { FC, useState, useEffect } from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\n\r\nimport type { TPointsByThemes } from '../../types/types';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n);\r\n\r\ntype BarChartProps = {\r\n  pointsByTheme: TPointsByThemes | null;\r\n};\r\n\r\nconst BarChart: FC<BarChartProps> = ({ pointsByTheme }) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const colors = ['black', 'red', 'blue'];\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom' as const,\r\n        align: 'start' as const,\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        ticks: {\r\n          stepSize: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: [''],\r\n    datasets: pointsByTheme\r\n      ? Object.entries(pointsByTheme).map((item, index) => {\r\n          const percentOfTheme = +(\r\n            (item[1].totalPoints / item[1].totalQuantityQuestions) *\r\n            100\r\n          ).toFixed();\r\n          const shortNameTheme =\r\n            item[0].length > 25 ? `${item[0].slice(0, 25)}...` : item[0];\r\n\r\n          return {\r\n            label: `${percentOfTheme} % - ${shortNameTheme}`,\r\n            data: [percentOfTheme],\r\n            backgroundColor: colors[index],\r\n          };\r\n        })\r\n      : [],\r\n  };\r\n\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : null;\r\n  const content = !isLoading ? <Bar options={options} data={data} /> : null;\r\n\r\n  useEffect(() => {\r\n    if (pointsByTheme) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [pointsByTheme]);\r\n\r\n  return (\r\n    <>\r\n      {content} {spinner}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  box-sizing: border-box;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-height: 575px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 16px 8px 9px 8px;\r\n\r\n  &:not(list-child) {\r\n    margin: 0 0 24px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    max-width: 50%;\r\n\r\n    &:not(list-child) {\r\n      margin: 0;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1023.8px) {\r\n    padding: 25px 8px 15px 8px;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.article`\r\n  font: var(--font-little-text-regular);\r\n  color: #29313c;\r\n  text-align: justify;\r\n  margin: 12px 0 0 0;\r\n`;\r\n\r\nconst StyledBarChartWrapper = styled.span`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 220px;\r\n  max-width: 525px;\r\n`;\r\n\r\nexport { StyledArticle, StyledP, StyledBarChartWrapper };\r\n","import ChartBar from './BarChart';\r\n\r\nexport default ChartBar;\r\n","import { FC } from 'react';\r\n\r\nimport BarChart from '../../components/BarChart/BarChart';\r\n\r\nimport {\r\n  StyledArticle,\r\n  StyledP,\r\n  StyledBarChartWrapper,\r\n} from './BarChart.Styled';\r\n\r\nimport type { TPointsByThemes } from '../../types/types';\r\n\r\ntype ChartBarProps = {\r\n  pointsByTheme: TPointsByThemes | null;\r\n};\r\nconst ChartBar: FC<ChartBarProps> = ({ pointsByTheme }) => {\r\n  return (\r\n    <StyledArticle>\r\n      <StyledBarChartWrapper>\r\n        <BarChart pointsByTheme={pointsByTheme} />\r\n      </StyledBarChartWrapper>\r\n      <StyledP>\r\n        График отображает процент правильных ответов по каждому тематическому\r\n        разделу. Показатель считается как отношение количества верных ответов к\r\n        общему количеству вопросов тематики. Если показатель менее 50 %, то\r\n        данный раздел необходимо изучить дополнительно.\r\n      </StyledP>\r\n    </StyledArticle>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledDiv = styled.div`\r\n  @media screen and (min-width: 1023.8px) {\r\n    transform: translateY(-100px);\r\n  }\r\n`;\r\n\r\nconst StyledSection = styled.section`\r\n  box-sizing: border-box;\r\n  margin: 18px 0 24px 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledSectionResults = styled.section`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px 3px 20px;\r\n  position: relative;\r\n\r\n  &:after {\r\n    position: absolute;\r\n    content: '';\r\n    height: 1px;\r\n    color: #dfe4e9;\r\n    background-color: #dfe4e9;\r\n    width: 256px;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 185px;\r\n\r\n    &:after {\r\n      transform: rotate(90deg);\r\n      width: 102px;\r\n      left: 43%;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1439.8px) {\r\n    &:after {\r\n      left: 45.5%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledSection, StyledDiv, StyledSectionResults };\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport HeaderResult from '../../modules/HeaderResult/index';\r\nimport { StyledMain } from '../../styles/Main.Styled';\r\nimport UserAnswers from '../../modules/UserAnswers';\r\nimport Container from '../../components/Container/Container';\r\nimport Doughnut from '../../modules/Doughunt/index';\r\nimport FinalResult from '../../modules/FinalResult/index';\r\nimport SpentTime from '../../modules/SpentTime/index';\r\nimport ChartBar from '../../modules/ChartBar/index';\r\n\r\nimport {\r\n  StyledDiv,\r\n  StyledSection,\r\n  StyledSectionResults,\r\n} from './Results.Styled';\r\n\r\nimport type { TPointsByThemes } from '../../types/types';\r\n\r\nconst Results = () => {\r\n  const [rightAnswers, setRightAnswers] = useState<number>(0);\r\n  const [pointsByTheme, setPointsByTheme] = useState<TPointsByThemes | null>(\r\n    null,\r\n  );\r\n\r\n  const setRightUserAnswers = useCallback((points: number) => {\r\n    setRightAnswers(points);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <HeaderResult />\r\n      <StyledMain>\r\n        <StyledDiv>\r\n          <Container>\r\n            <StyledSectionResults>\r\n              <FinalResult setRightAnswers={setRightUserAnswers} />\r\n              <SpentTime />\r\n            </StyledSectionResults>\r\n            <StyledSection>\r\n              <ChartBar pointsByTheme={pointsByTheme} />\r\n              <Doughnut rightAnswers={rightAnswers} />\r\n            </StyledSection>\r\n          </Container>\r\n          <UserAnswers setPointsByTheme={setPointsByTheme} />\r\n        </StyledDiv>\r\n      </StyledMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n`;\r\n"],"names":["getTotalQuestionsNumb","async","Promise","resolve","reject","onValue","ref","db","snapshot","totalQuestionsNumb","Object","entries","val","length","error","console","HeaderStyled","styled","height","children","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","getIdUser","key","value","localStorage","getItem","undefined","Error","e","message","StyledSect","StyledSection","StyledArticleName","StyledArticleEmail","StyledLabel","StyledUserData","userInfo","setUserInfo","useState","name","email","loading","spinner","Spinner","width","color","margin","content","as","userInfoHasLoaded","state","onError","useEffect","then","catch","StyledH2","StyledImg","StyledButton","viewportWidth","setViewportWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","src","require","alt","StyledFlexWrapper","gap","widthColumnStart","widthColumnEnd","widthFlexStart","style","StyledH1","StyledArticle","Header","Container","Logo","location","maxWidth","boxSizing","StyleArticleDropdown","StyledSpan","StyledUl","StyledLi","Dropdown","hideListFilters","data","selected","isActive","themeHasChoosen","toggleListThemes","idWrapper","elementLanguages","map","item","index","tabIndex","onClick","handleClickOutside","target","tagName","document","id","className","displayName","setFilterByRightAnswer","typeAnswer","setTypeAnswer","isShowList","setIsShowList","themesNames","setFilterByTheme","selectedTheme","setSelectedTheme","getAnswerOptions","getInfoQuestions","getNumberFromKey","matches","match","parseInt","transformData","values","filter","question","userAnswer","point","infoQuestionsAndAnswers","Set","infoQuestion","theme","forEach","add","Array","from","getThemesNames","themes","getThemes","i","updateData","pointsByThemes","totalPoints","totalQuantityQuestions","StyledListAnswers","StyledSum","StyledSpanResult","isRight","setPointsByTheme","t","useTranslation","setInfoQuestionsAndAnswers","isError","setIsError","isLoading","setIsLoading","filterTheme","setFilterTheme","filterRight","setFilterRight","visibleData","filterByRightAnswer","filterByThemes","userAnswerArr","descr","img","rightAnswer","answerOptions","borderRadius","border","join","view","transformUserAnswers","res","fromEntries","lang","querySelector","getAttribute","all","userAnswers","infoQuestions","generalInfo","transformQuestionsAndAnswersDB","getPointsByThemes","open","newFilter","StyledP","StyledDoughuntWrapper","ChartJS","ArcElement","Tooltip","Legend","LinearScale","dataPieChart","labels","datasets","label","backgroundColor","borderColor","cutout","borderWidth","rightAnswers","totalQuestionNumbers","setTotalQuestionNumbers","percentRightQuestions","toFixed","percentWrongQuestions","StyledH3","setRightAnswers","setState","points","getTotalPoints","reduce","sum","curr","dataHasLoaded","dataInfo","answers","response","ansewrsTransform","allSettled","transformSecondsToMinutes","seconds","result","minutes","Math","floor","time","timeHasLoaded","CategoryScale","BarElement","Title","pointsByTheme","colors","percentOfTheme","slice","options","maintainAspectRatio","plugins","legend","position","align","title","display","scales","y","ticks","stepSize","StyledBarChartWrapper","StyledDiv","StyledSectionResults","setRightUserAnswers","useCallback","StyledMain"],"sourceRoot":""}