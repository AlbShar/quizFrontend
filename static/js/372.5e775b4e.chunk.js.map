{"version":3,"file":"static/js/372.5e775b4e.chunk.js","mappings":"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","sources":["assets/images/chevrondown.svg","UI/ErrorMessage/ErrorMessage.Styled.ts","UI/ErrorMessage/ErroMessage.tsx","api/getDataFromDB.ts","api/getTotalQuestionsNumb.ts","components/Container/Container.styled.ts","components/Container/Container.tsx","config/firebase/firebaseConfig.js","modules/UserAnswers/UI/Dropdown/Dropdown.Styled.ts","modules/UserAnswers/UI/Dropdown/Dropdown.tsx","modules/UserAnswers/components/FilterByRight/FilterByRight.tsx","modules/UserAnswers/components/FilterByThemes/FilterByThemes.tsx","modules/UserAnswers/api/getAnswerOptions.ts","modules/UserAnswers/api/getUserAnswers.ts","modules/UserAnswers/api/getInfoQuestions.ts","modules/UserAnswers/helpers/getNumberFromKey.ts","modules/UserAnswers/helpers/filterByRightAnswer.ts","modules/UserAnswers/helpers/getThemes.ts","modules/UserAnswers/helpers/getThemesNames.ts","modules/UserAnswers/helpers/filterByThemes.ts","modules/UserAnswers/helpers/getPointsByThemes.ts","modules/UserAnswers/UserAnswers/UserAnswers.Styled.ts","modules/UserAnswers/index.ts","modules/UserAnswers/UserAnswers/UserAnswers.tsx","components/DoughuntChart/DoughuntChart.Styled.ts","components/DoughuntChart/DoughuntChart.tsx","modules/Score/api/getUserAnswers.ts","modules/Score/helpers/getTotalPoints.ts","modules/Score/Score/Score.Styled.ts","modules/Score/index.ts","modules/Score/Score/Score.tsx","modules/Score/helpers/answersTransform.ts","modules/ResultTime/Time/ResultTime.Styled.ts","modules/ResultTime/helpers/transformSecondsToMinutes.ts","modules/ResultTime/index.ts","modules/ResultTime/Time/ResultTime.tsx","modules/ResultTime/api/getUserInfo.ts","components/BarChart/BatChart.Styled.ts","components/BarChart/BarChart.tsx","pages/Results/Results.Styled.ts","pages/Results/Results.tsx","styles/Main.Styled.ts"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgChevrondown(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 6,\n    viewBox: \"0 0 8 6\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1.5L4 4.5L7 1.5\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevrondown);\nexport default __webpack_public_path__ + \"static/media/chevrondown.155409e0c48ea57ccaa9ebaf346774a8.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nconst StyledSpan = styled.span`\r\n  color: red;\r\n  display: inline-block;\r\n  margin: 0 5px 0 0 ;\r\n  text-transform: uppercase;\r\n  font: var(--font-bold);\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport { StyledSpan, StyledDiv };\r\n","import ErrorIcon from '@mui/icons-material/Error';\r\n\r\nimport { StyledSpan, StyledDiv } from './ErrorMessage.Styled';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <StyledDiv>\r\n      <StyledSpan>Error!</StyledSpan>\r\n      <ErrorIcon color='error' fontSize='medium' />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../config/firebase/firebaseConfig';\r\n\r\n\r\n\r\nconst getDataFromDB = async <TData>(url: string) => {\r\n\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(ref(db, url), (snapshot) => {\r\n      const value: TData = snapshot.val();\r\n\r\n      if (value) {\r\n        return resolve(value);\r\n      } else {\r\n        reject(\r\n          new Error(\r\n            `Value (${value}) from Firebase Database not found. Check url (${url})`,\r\n          ),\r\n        );\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getDataFromDB };\r\n","import { getDataFromDB } from './getDataFromDB';\r\n\r\ntype TotalQuestions = {\r\n  [key: string]: string;\r\n};\r\n\r\nconst transformData = (data: TotalQuestions): number => {\r\n  return Object.entries(data).length;\r\n};\r\n\r\nconst getTotalQuestionsNumb = async (url: string): Promise<number> => {\r\n  try {\r\n    const response = await getDataFromDB<TotalQuestions>(url);\r\n    const data = transformData(response as TotalQuestions);\r\n    return data;\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { getTotalQuestionsNumb };\r\n","import styled from 'styled-components';\r\n\r\nconst ContainerStyled = styled.div`\r\nmax-width: 85%;\r\nmin-width: 287px;\r\nmargin: 0 auto;\r\npadding: 0 5px;\r\n@media screen and (min-width: 1299.8px) {\r\n  max-width: 1190px;\r\n}\r\n`;\r\n\r\nexport { ContainerStyled };\r\n","import { ContainerStyled } from './Container.styled';\r\n\r\ntype ContainerProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Container = ({ children }: ContainerProps): JSX.Element => {\r\n  return <ContainerStyled>{children}</ContainerStyled>;\r\n};\r\n\r\nexport default Container;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","import styled from 'styled-components';\r\n\r\nconst StyleArticleDropdown = styled.article`\r\n  cursor: pointer;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  color: black;\r\n  font: var(--font-little-text-regular);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  z-index: 2;\r\n  left: 0px;\r\n  top: 30px;\r\n  background-color: white;\r\n  position: absolute;\r\n  list-style-type: none;\r\n  font: var(--font-text-bold);\r\n  margin: 0;\r\n  padding: 5px 10px;\r\n  border-radius: 10px 0 0 10px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  filter: invert(100);\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  font: var(--font-text-regular);\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledImg,\r\n  StyledSpan,\r\n};\r\n","import { FC, CSSProperties, useEffect } from 'react';\r\nimport chevrondown from \"../../../../assets/images/chevrondown.svg\";\r\nimport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledImg,\r\n  StyledSpan,\r\n} from './Dropdown.Styled';\r\n\r\ntype DropdownProps = {\r\n  style?: CSSProperties;\r\n  selected: string;\r\n  isActive: boolean;\r\n  data: string[];\r\n  toggleListThemes?: () => void;\r\n  themeHasChoosen?: (item: string) => void;\r\n  hideListFilters: () => void;\r\n  idWrapper: string;\r\n};\r\n\r\nconst Dropdown = ({\r\n  hideListFilters,\r\n  data,\r\n  selected,\r\n  isActive,\r\n  style,\r\n  themeHasChoosen,\r\n  toggleListThemes,\r\n  idWrapper,\r\n}: DropdownProps) => {\r\n  const elementLanguages = data.map((item: string, index: number) => {\r\n    return (\r\n      <StyledLi\r\n        key={index + 1}\r\n        tabIndex={0}\r\n        onClick={() => themeHasChoosen && themeHasChoosen(item)}\r\n      >\r\n        {item}\r\n      </StyledLi>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      const target = e.target as HTMLElement;\r\n      if (target.tagName !== 'LI') {\r\n        hideListFilters();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyleArticleDropdown style={style} id={idWrapper}>\r\n      <StyledButton onClick={toggleListThemes}>\r\n        <StyledSpan className='dropdown-btn-text'>\r\n          {selected || data[0]}\r\n        </StyledSpan>\r\n        <StyledImg\r\n          src={chevrondown}\r\n          alt='Кнопка вниз'\r\n        />\r\n      </StyledButton>\r\n      {isActive && <StyledUl>{elementLanguages}</StyledUl>}\r\n    </StyleArticleDropdown>\r\n  );\r\n};\r\n\r\nDropdown.displayName = 'Dropdown';\r\n\r\nexport default Dropdown;\r\n","import { useState } from 'react';\r\n\r\nimport Dropdown from '../../UI/Dropdown/Dropdown';\r\n\r\ntype FilterByRightProps = {\r\n  setFilterByRightAnswer: (newFilter: string) => void;\r\n};\r\n\r\nconst FilterByRight = ({\r\n  setFilterByRightAnswer,\r\n}: FilterByRightProps): JSX.Element => {\r\n  const data: string[] = ['Все вопросы', 'Верно', 'Неверно'];\r\n\r\n  const [typeAnswer, setTypeAnswer] = useState<string>(data[0]);\r\n  const [isShowList, setIsShowList] = useState<boolean>(false);\r\n\r\n  const toggleListThemes = () => {\r\n    setIsShowList((isShowList) => !isShowList);\r\n  };\r\n\r\n  const themeHasChoosen = (item: string) => {\r\n    toggleListThemes();\r\n    setTypeAnswer(item);\r\n    setFilterByRightAnswer(item);\r\n  };\r\n\r\n  const hideListFilters = () => {\r\n    setIsShowList(false);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      toggleListThemes={toggleListThemes}\r\n      data={data}\r\n      selected={typeAnswer}\r\n      isActive={isShowList}\r\n      themeHasChoosen={(item: string) => themeHasChoosen(item)}\r\n      hideListFilters={hideListFilters}\r\n      idWrapper='wrapperTypeAnswer'\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterByRight;\r\n","import { useState } from 'react';\r\n\r\nimport Dropdown from '../../UI/Dropdown/Dropdown';\r\n\r\ntype FilterByThemesProps = {\r\n  themesNames: string[];\r\n  setFilterByTheme: (item: string) => void;\r\n};\r\n\r\nconst FilterByThemes = ({\r\n  themesNames,\r\n  setFilterByTheme,\r\n}: FilterByThemesProps): JSX.Element => {\r\n  const [selectedTheme, setSelectedTheme] = useState<string>(themesNames[0]);\r\n  const [isShowList, setIsShowList] = useState<boolean>(false);\r\n\r\n  const toggleListThemes = () => {\r\n    setIsShowList((isShowList) => !isShowList);\r\n  };\r\n\r\n  const themeHasChoosen = (item: string) => {\r\n    toggleListThemes();\r\n    setSelectedTheme(item);\r\n    setFilterByTheme(item);\r\n  };\r\n\r\n  const hideListFilters = () => {\r\n    setIsShowList(false);\r\n  };\r\n\r\n  return (\r\n    <Dropdown\r\n      toggleListThemes={toggleListThemes}\r\n      data={themesNames}\r\n      selected={selectedTheme}\r\n      isActive={isShowList}\r\n      themeHasChoosen={(item: string) => themeHasChoosen(item)}\r\n      style={{ margin: '0 25px 0 0' }}\r\n      hideListFilters={hideListFilters}\r\n      idWrapper='wrapperThemes'\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterByThemes;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getAnswerOptions = async () => {\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(ref(db, 'answers'), (snapshot) => {\r\n      if (snapshot.val()) {\r\n        resolve(snapshot.val());\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getAnswerOptions };\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ntype TAnswersDB = {\r\n  [key: string]: {\r\n    point: number;\r\n    quantityPause: number;\r\n    question: string;\r\n    theme: string;\r\n    userAnswer: string;\r\n  };\r\n};\r\n\r\nconst getUserAnswers = (idUser: string) => {\r\n  return new Promise<TAnswersDB>(function (resolve, reject) {\r\n    onValue(ref(db, `users/user${idUser}/answers/`), (snapshot) => {\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport { getUserAnswers };\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getInfoQuestions = async () => {\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(ref(db, 'questions'), (snapshot) => {\r\n      if (snapshot.val()) {\r\n        resolve(snapshot.val());\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getInfoQuestions };\r\n","const getNumberFromKey = (key: string): number | undefined => {\r\n  const matches = key.match(/\\d+/);\r\n  if (matches !== null) {\r\n    return parseInt(matches[0]);\r\n  }\r\n};\r\n\r\nexport { getNumberFromKey };\r\n","import type { TInfoQuestionsAndAnswers } from '../types/types';\r\n\r\nconst filterByRightAnswer = (\r\n  data: TInfoQuestionsAndAnswers,\r\n  typeAnswer: string,\r\n) => {\r\n  const transformData = Object.values(data);\r\n\r\n  switch (typeAnswer) {\r\n    case 'Верно':\r\n      return transformData.filter(\r\n        (question) => question?.userAnswer?.point === 1,\r\n      );\r\n    case 'Неверно':\r\n      return transformData.filter(\r\n        (question) => question?.userAnswer?.point === 0,\r\n      );\r\n    default:\r\n      return transformData;\r\n  }\r\n};\r\n\r\nexport default filterByRightAnswer;\r\n","import { getThemesNames } from './getThemesNames';\r\n\r\nimport type { TInfoQuestionsAndAnswers } from '../types/types';\r\n\r\nconst getThemes = (\r\n  infoQuestionsAndAnswers: TInfoQuestionsAndAnswers,\r\n): [string, ...string[]] => {\r\n  if (infoQuestionsAndAnswers) {\r\n    return getThemesNames(infoQuestionsAndAnswers);\r\n  } else {\r\n    return ['Все тематики'];\r\n  }\r\n};\r\n\r\nexport default getThemes;\r\n","type TUserAnswer = {\r\n  point: number;\r\n  userAnswer: string;\r\n};\r\n\r\ntype TAnswerOption = {\r\n  [key: string]: string;\r\n};\r\n\r\ntype TQuestionAndAnswer = {\r\n  descr: string;\r\n  name: string;\r\n  rightAnswer: string;\r\n  theme: string;\r\n  img: string;\r\n  answerOptions: TAnswerOption;\r\n  userAnswer: TUserAnswer;\r\n};\r\n\r\ntype TInfoQuestionsAndAnswers = {\r\n  [key: number]: TQuestionAndAnswer;\r\n};\r\n\r\nconst getThemesNames = (\r\n  infoQuestionsAndAnswers: TInfoQuestionsAndAnswers,\r\n): [string, ...string[]] => {\r\n  const themesNames = new Set(['Все тематики']);\r\n  const allThemes = Object.values(infoQuestionsAndAnswers).map(\r\n    (infoQuestion) => infoQuestion.theme,\r\n  );\r\n  allThemes.forEach((theme) => themesNames.add(theme));\r\n\r\n  return Array.from(themesNames) as [string, ...string[]];\r\n};\r\n\r\nexport { getThemesNames };\r\n","import getThemes from './getThemes';\r\n\r\nimport type { TInfoQuestionsAndAnswers } from '../types/types';\r\n\r\nconst filterByThemes = (\r\n  data: TInfoQuestionsAndAnswers,\r\n  filter: string,\r\n): TInfoQuestionsAndAnswers => {\r\n  const transformData = Object.values(data);\r\n  const themes = getThemes(data).filter((item, index) => index > 0);\r\n\r\n  for (let i = 0; i < themes.length; i++) {\r\n    if (filter === themes[i]) {\r\n      return transformData.filter((question) => question.theme === themes[i]);\r\n    }\r\n  }\r\n\r\n  return transformData;\r\n};\r\n\r\nexport default filterByThemes;\r\n","import getThemes from './getThemes';\r\n\r\nimport type { TInfoQuestionsAndAnswers } from '../types/types';\r\nimport type { TPointsByThemes } from '../../../types/types';\r\n\r\nconst getPointsByThemes = (data: TInfoQuestionsAndAnswers): TPointsByThemes => {\r\n  const themes = getThemes(data).filter((item, i) => i > 0);\r\n  const updateData = Object.values(data).map((item) => ({\r\n    theme: item.theme,\r\n    point: item.userAnswer.point,\r\n  }));\r\n  const pointsByThemes = {};\r\n\r\n  for (const theme of themes) {\r\n    for (const key in updateData) {\r\n      if (theme === updateData[key].theme) {\r\n        if (!pointsByThemes[theme]) {\r\n          pointsByThemes[theme] = { totalPoints: 0, totalQuantityQuestions: 0 };\r\n        }\r\n        pointsByThemes[theme].totalPoints += updateData[key].point;\r\n        pointsByThemes[theme].totalQuantityQuestions += 1;\r\n      }\r\n    }\r\n  }\r\n  return pointsByThemes;\r\n};\r\n\r\nexport default getPointsByThemes;\r\n","import styled from 'styled-components';\r\n\r\ntype StyledSpanResultProps = {\r\n  isRight: boolean;\r\n}\r\n\r\nconst StyledLi = styled.li`\r\n  box-sizing: border-box;\r\n  list-style-type: none;\r\n  font: var(--font-little-text-regular);\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\nconst StyledListAnswers = styled.li`\r\n  box-sizing: border-box;\r\n  word-wrap: break-word;\r\n  list-style-type: none;\r\n  font: var(--font-little-text-regular);\r\n  padding: 0 10px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 8px 0 17px 0;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledSum = styled.summary`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  background-color: var(--color-title-background);\r\n  font: var(--font-little-text-regular);\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  margin: 0 0 10px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title4);\r\n    justify-content: flex-start;\r\n    padding: 10px 0 10px 40px;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-little-text-bold);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-bold);\r\n  }\r\n`;\r\n\r\nconst StyledSection = styled.section`\r\n  margin: 24px 0 18px 0;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: start;\r\n`;\r\n\r\nconst StyledSpanResult = styled.span<StyledSpanResultProps>`\r\n  position: absolute;\r\n  color: ${({ isRight }) => (isRight ? 'green' : 'red')};\r\n  top: 5px;\r\n  right: 0;\r\n\r\n  font: var(--font-little-text-bold);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-bold);\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledLi,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledListAnswers,\r\n  StyledSpanResult,\r\n  StyledSum,\r\n  StyledSection,\r\n};\r\n","import UserAnswers from './UserAnswers/UserAnswers';\r\n\r\nexport default UserAnswers;\r\n","import { useState, useEffect, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Container from '../../../components/Container/Container';\r\nimport FilterByRight from '../components/FilterByRight/FilterByRight';\r\nimport FilterByThemes from '../components/FilterByThemes/FilterByThemes';\r\nimport { getAnswerOptions } from '../api/getAnswerOptions';\r\nimport { getUserAnswers } from '../api/getUserAnswers';\r\nimport { getInfoQuestions } from '../api/getInfoQuestions';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { getNumberFromKey } from '../helpers/getNumberFromKey';\r\nimport { ContextLanguage, ContextIdUser } from '../../../components/Context';\r\nimport filterByRightAnswer from '../helpers/filterByRightAnswer';\r\nimport filterByThemes from '../helpers/filterByThemes';\r\nimport getThemes from '../helpers/getThemes';\r\nimport getPointsByThemes from '../helpers/getPointsByThemes';\r\nimport ErrorMessage from '../../../UI/ErrorMessage/ErroMessage';\r\n\r\nimport {\r\n  StyledLi,\r\n  StyledListAnswers,\r\n  StyledUl,\r\n  StyledSpan,\r\n  StyledSpanResult,\r\n  StyledSum,\r\n  StyledSection,\r\n} from './UserAnswers.Styled';\r\n\r\nimport type {\r\n  TInfoQuestionsAndAnswers,\r\n  TAnswersDB,\r\n  TAnswerOptionsLangDB,\r\n  TInfoQuiestionsDB,\r\n  TQuestionAndAnswer,\r\n} from '../types/types';\r\nimport type { TPointsByThemes } from '../../../types/types';\r\n\r\n\r\n\r\ntype UserAnwersProps = {\r\n  setPointsByTheme: (themes: TPointsByThemes) => void;\r\n};\r\nconst UserAnswers = ({ setPointsByTheme }: UserAnwersProps): JSX.Element => {\r\n  const [lang]: [string, (lang: string) => void] = useContext(ContextLanguage);\r\n  const [idUser]: [string, (lang: string) => void] = useContext(ContextIdUser);\r\n\r\n  const { t } = useTranslation();\r\n  const [infoQuestionsAndAnswers, setInfoQuestionsAndAnswers] =\r\n    useState<null | TInfoQuestionsAndAnswers>(null);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [filterTheme, setFilterTheme] = useState<string>('');\r\n  const [filterRight, setFilterRight] = useState<string>('');\r\n\r\n  const loading = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const error = isError ? <ErrorMessage /> : false;\r\n  const view = () => {\r\n    if (infoQuestionsAndAnswers) {\r\n      const visibleData: TInfoQuestionsAndAnswers = filterByRightAnswer(\r\n        filterByThemes(infoQuestionsAndAnswers, filterTheme),\r\n        filterRight,\r\n      );\r\n      return (\r\n        <StyledUl>\r\n          {Object.entries(visibleData as TQuestionAndAnswer[]).map(\r\n            (userAnswerArr, index) => {\r\n              const {\r\n                descr,\r\n                img,\r\n                id,\r\n                name,\r\n                rightAnswer,\r\n                theme,\r\n                answerOptions,\r\n                userAnswer,\r\n              } = userAnswerArr[1];\r\n              const isRight = userAnswer.point ? true : false;\r\n              const color = isRight ? 'green' : 'red';\r\n              const className = {\r\n                borderRadius: 10,\r\n                border: `1px solid ${color}`,\r\n              };\r\n\r\n              return (\r\n                <StyledListAnswers style={className} key={index + 1}>\r\n                  <StyledUl>\r\n                    <StyledSpanResult isRight={isRight}>\r\n                      {isRight ? '\\u2714' : '\\u2718'}\r\n                    </StyledSpanResult>\r\n                    <StyledLi>\r\n                      <StyledSpan>{`Вопрос № ${id}: `}</StyledSpan>\r\n                      {`${name} (${theme})`}\r\n                    </StyledLi>\r\n                    {img === 'No' ? (\r\n                      false\r\n                    ) : (\r\n                      <StyledLi>\r\n                        <img\r\n                          style={{ maxWidth: '100%' }}\r\n                          src={img}\r\n                          alt='code'\r\n                        />\r\n                      </StyledLi>\r\n                    )}\r\n                    <StyledLi>\r\n                      <StyledSpan>{`${t('Варианты_ответов')}: `}</StyledSpan>\r\n                      {Object.entries(answerOptions)\r\n                        .map(([key, value]) => `${key}: ${value}`)\r\n                        .join(', ')}\r\n                    </StyledLi>\r\n                    <StyledLi>\r\n                      <StyledSpan>{`${t('Ваш_ответ')}: `}</StyledSpan>{' '}\r\n                      {userAnswer.userAnswer}\r\n                    </StyledLi>\r\n                    {isRight ? (\r\n                      false\r\n                    ) : (\r\n                      <StyledLi>\r\n                        <StyledSpan>{`${t('Правильный_ответ')}: `}</StyledSpan>\r\n                        {rightAnswer}\r\n                      </StyledLi>\r\n                    )}\r\n                    <StyledLi>\r\n                      <StyledSpan>{`${t('Объяснение')}: `} </StyledSpan>\r\n                      {descr}\r\n                    </StyledLi>\r\n                  </StyledUl>\r\n                </StyledListAnswers>\r\n              );\r\n            },\r\n          )}\r\n        </StyledUl>\r\n      );\r\n    }\r\n  };\r\n  const content = !(isLoading || isError) ? view() : null;\r\n\r\n  const transformUserAnswers = (res: TAnswersDB) => {\r\n    const updateUserAnswers = Object.fromEntries(\r\n      Object.entries(res).map(([key, value]) => [\r\n        getNumberFromKey(key),\r\n        { point: value.point, userAnswer: value.userAnswer },\r\n      ]),\r\n    );\r\n    return updateUserAnswers;\r\n  };\r\n\r\n  const transformData = (\r\n    res: TAnswerOptionsLangDB | TInfoQuiestionsDB,\r\n    lang: string,\r\n  ) => {\r\n    const updateAnswerOptions = Object.fromEntries(\r\n      Object.entries(res).map(([key, value]) => [\r\n        getNumberFromKey(key),\r\n        value[`${lang}`],\r\n      ]),\r\n    );\r\n    return updateAnswerOptions;\r\n  };\r\n\r\n  const transformQuestionsAndAnswersDB = (\r\n    res: (TAnswersDB | TAnswerOptionsLangDB | TInfoQuiestionsDB)[],\r\n  ) => {\r\n    const [userAnswers, answerOptions, infoQuestions] = res;\r\n\r\n    const data = {\r\n      userAnswers: transformUserAnswers(userAnswers as TAnswersDB),\r\n      answerOptions: transformData(answerOptions as TAnswerOptionsLangDB, lang),\r\n      infoQuestions: transformData(infoQuestions as TInfoQuiestionsDB, lang),\r\n    };\r\n\r\n    const generalInfo = {};\r\n\r\n    for (const key in data.infoQuestions) {\r\n      generalInfo[key] = {\r\n        ...data.infoQuestions[key],\r\n        userAnswer: data.userAnswers[key],\r\n        answerOptions: data.answerOptions[key],\r\n      };\r\n    }\r\n\r\n    setInfoQuestionsAndAnswers(generalInfo);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const onError = (error: any): never => {\r\n    setIsError(true);\r\n    setIsLoading(false);\r\n    throw new Error(error);\r\n  };\r\n\r\n  const setFilterByTheme = (newFilter: string): void => {\r\n    setFilterTheme(newFilter);\r\n  };\r\n\r\n  const setFilterByRightAnswer = (newFilter: string): void => {\r\n    setFilterRight(newFilter);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      getUserAnswers(idUser),\r\n      getAnswerOptions(),\r\n      getInfoQuestions(),\r\n    ])\r\n      .then((value) =>\r\n        transformQuestionsAndAnswersDB(\r\n          value as (TAnswersDB | TAnswerOptionsLangDB | TInfoQuiestionsDB)[],\r\n        ),\r\n      )\r\n      .catch(onError);\r\n  }, [lang]);\r\n\r\n  useEffect(() => {\r\n    if (infoQuestionsAndAnswers) {\r\n      setPointsByTheme(getPointsByThemes(infoQuestionsAndAnswers));\r\n    }\r\n  }, [infoQuestionsAndAnswers]);\r\n\r\n  return (\r\n    <Container>\r\n      <details open>\r\n        <StyledSum>{t('Ответы')}</StyledSum>\r\n        <StyledSection>\r\n          <FilterByThemes\r\n            themesNames={getThemes(\r\n              infoQuestionsAndAnswers as TInfoQuestionsAndAnswers,\r\n            )}\r\n            setFilterByTheme={setFilterByTheme}\r\n          />\r\n          <FilterByRight setFilterByRightAnswer={setFilterByRightAnswer} />\r\n        </StyledSection>\r\n        {loading} {error} {content}\r\n      </details>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserAnswers;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  box-sizing: border-box;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 16px 8px 9px 8px;\r\n  max-height: 520px;\r\n\r\n  &:not(list-child) {\r\n    margin: 0 0 24px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    &:not(list-child) {\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.article`\r\n  font: var(--font-little-text-regular);\r\n  color: #29313c;\r\n  text-align: justify;\r\n  margin: 12px 0 0 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    margin: 12px 0 42px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1023.8px) {\r\n    margin: 12px 0 33px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1265.8px) {\r\n    margin: 12px 0 15px 0;\r\n  }\r\n`;\r\n\r\nconst StyledDoughuntWrapper = styled.div`\r\n  position: relative;\r\n  width: 265px;\r\n  height: 265px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    // width: 200px;\r\n    // height: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -25%);\r\n  font-family: 'Inter';\r\n  font-style: normal;\r\n  font-weight: 800;\r\n  font-size: 39px;\r\n  line-height: 60px;\r\n  color: #6768d7;\r\n`;\r\n\r\nexport { StyledArticle, StyledP, StyledSpan, StyledDoughuntWrapper };\r\n","import { useState, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Chart as ChartJS,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n  LinearScale,\r\n} from 'chart.js';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nimport { getTotalQuestionsNumb } from '../../api/getTotalQuestionsNumb';\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\n\r\nimport {\r\n  StyledArticle,\r\n  StyledP,\r\n  StyledSpan,\r\n  StyledDoughuntWrapper,\r\n} from './DoughuntChart.Styled';\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend, LinearScale);\r\n\r\ntype DoughnutProps = {\r\n  rightAnswers: number;\r\n};\r\n\r\nconst DoughnutChart = ({ rightAnswers }: DoughnutProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  const [totalQuestionNumbers, setTotalQuestionNumbers] = useState<number>(0);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const percentRightQuestions = +(\r\n    (100 * rightAnswers) /\r\n    totalQuestionNumbers\r\n  ).toFixed(1);\r\n  const percentWrongQuestions = +(100 - percentRightQuestions).toFixed(1);\r\n\r\n  const data = {\r\n    labels: ['Верно', 'Неверно'],\r\n    datasets: [\r\n      {\r\n        label: '%',\r\n        data: [percentRightQuestions, percentWrongQuestions],\r\n        backgroundColor: ['green', 'red'],\r\n        borderColor: ['green', 'red'],\r\n        cutout: '75%',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : null;\r\n  \r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledDoughuntWrapper>\r\n          <Doughnut data={data}></Doughnut>\r\n          <StyledSpan>{`${percentRightQuestions} %`}</StyledSpan>\r\n        </StyledDoughuntWrapper>\r\n        <StyledP>{t('Подпись_круговая_диаграмма')}</StyledP>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n  const content = !isLoading ? view() : null;\r\n\r\n  const setQuestionsNumber = async () => {\r\n    const url = 'questions';\r\n    const questionsNumber = await getTotalQuestionsNumb(url);\r\n    setTotalQuestionNumbers(questionsNumber as number);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setQuestionsNumber();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {spinner} {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DoughnutChart;\r\n","import { getDataFromDB } from \"../../../api/getDataFromDB\";\r\n\r\nimport type { TAnswersDB } from '../types';\r\n\r\nconst getUserAnswers = async (url: string) => {\r\n    try {\r\n      const response = await getDataFromDB<TAnswersDB>(url);\r\n\r\n      return response;\r\n    } catch (e) {\r\n      console.error(e);\r\n      throw e;\r\n    }\r\n};\r\n\r\nexport { getUserAnswers };\r\n","import type { TPoints } from \"../types\";\r\n\r\nconst getTotalPoints = (points: TPoints): number => {\r\n  if (points) {\r\n    return Object.values(points).reduce((sum, curr) => sum + curr, 0);\r\n  } else return 0;\r\n};\r\n\r\nexport {getTotalPoints}","import styled from 'styled-components';\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px 3px 20px;\r\n  position: relative;\r\n\r\n  &:after {\r\n    position: absolute;\r\n    content: '';\r\n    height: 1px;\r\n    color: #dfe4e9;\r\n    background-color: #dfe4e9;\r\n    width: 256px;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 185px;\r\n\r\n    &:after {\r\n      transform: rotate(90deg);\r\n      width: 102px;\r\n      left: 43%;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1439.8px) {\r\n    &:after {\r\n      left: 45.5%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  text-align: center;\r\n  padding: 16px 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledH3 = styled.h3`\r\n  color: #29313c;\r\n  font: var(--font-title5);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  color: #6768d7;\r\n  font: var(--font-title2);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport { StyledSection, StyledH2, StyledH3, StyledArticle };\r\n","import Score from './Score/Score';\r\n\r\nexport default Score;\r\n","import { useEffect, useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { getTotalQuestionsNumb } from '../../../api/getTotalQuestionsNumb';\r\nimport ErrorMessage from '../../../UI/ErrorMessage/ErroMessage';\r\nimport { ContextIdUser } from '../../../components/Context';\r\nimport { getUserAnswers } from '../api/getUserAnswers';\r\nimport { getTotalPoints } from '../helpers/getTotalPoints';\r\nimport { answersTransform } from '../helpers/answersTransform';\r\n\r\nimport { StyledH2, StyledH3, StyledArticle } from './Score.Styled';\r\n\r\nimport type { TPoints } from '../types';\r\n\r\n\r\n\r\ntype FinalResultProps = {\r\n  setRightAnswers: (points: number) => void;\r\n};\r\n\r\nconst Score = ({ setRightAnswers }: FinalResultProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const [idUser]: [string, (lang: string) => void] = useContext(ContextIdUser);\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [totalQuestionNumbers, setTotalQuestionNumbers] = useState<number>(0);\r\n  const [points, setPoints] = useState<number>(0);\r\n\r\n\r\n  const dataHasLoaded = (data: any) => {\r\n    type TdataInfo = {\r\n      points: TPoints | null;\r\n      totalQuestionNumbers: number;\r\n    };\r\n\r\n    const dataInfo: TdataInfo = {\r\n      points: null,\r\n      totalQuestionNumbers: 0,\r\n    };\r\n\r\n    const [totalQuestionNumbers, answers] = data;\r\n\r\n    dataInfo.points = answersTransform(answers.value);\r\n    dataInfo.totalQuestionNumbers = totalQuestionNumbers.value\r\n      ? totalQuestionNumbers.value\r\n      : totalQuestionNumbers.value === false\r\n      ? false\r\n      : null;\r\n\r\n    setIsLoading(false);\r\n    setPoints(getTotalPoints(dataInfo.points as TPoints));\r\n    setTotalQuestionNumbers(dataInfo.totalQuestionNumbers as number);\r\n\r\n    setRightAnswers(getTotalPoints(dataInfo.points as TPoints));\r\n\r\n    for (const key in dataInfo) {\r\n      if (dataInfo[key] === null) {\r\n        throw new Error(\r\n          `The value of ${key} is ${dataInfo[key]} in ${dataInfo}`,\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const onError = (error: any): never => {\r\n    setIsError(true);\r\n    setIsLoading(false);\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url1 = 'questions';\r\n    const url2 = `users/user${idUser}/answers`;\r\n\r\n    Promise.allSettled([getTotalQuestionsNumb(url1), getUserAnswers(url2)])\r\n      .then(dataHasLoaded)\r\n      .catch(onError);\r\n  }, []);\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledH3>{t('Ваш_результат')}</StyledH3>\r\n        <StyledH2>{`${points} ${t('из')} ${totalQuestionNumbers}`}</StyledH2>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const error = isError ? <ErrorMessage /> : false;\r\n  const content = !(isLoading || isError) ? view() : false;\r\n\r\n  return (\r\n    <>\r\n      {spinner} {error} {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import type { TAnswersDB, TPoints } from \"../types\";\r\n\r\nconst answersTransform = (response: TAnswersDB | null): TPoints | null => {\r\n  if (response) {\r\n    const points = Object.fromEntries(\r\n      Object.entries({ ...response }).map(([key, value]) => [key, value.point]),\r\n    );\r\n    return points;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { answersTransform };","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  text-align: center;\r\n  padding: 16px 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-basis: 50%;\r\n  }\r\n`;\r\n\r\nconst StyledH3 = styled.h3`\r\n  color: #29313c;\r\n  font: var(--font-title5);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  color: #6768d7;\r\n  font: var(--font-title2);\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport { StyledH2, StyledH3, StyledArticle };\r\n","const transformSecondsToMinutes = (seconds: unknown, sec: string, min: string): string | false | null => {\r\n\r\n  let result = '';\r\n\r\n  if (typeof seconds === 'number') {\r\n    if (seconds % 60 === 0) {\r\n      result = `${seconds / 60} ${sec}`;\r\n    } else if (seconds < 60) {\r\n      result = `${seconds}  ${sec}`;\r\n    } else if (seconds > 60) {\r\n      const minutes = Math.floor(seconds / 60);\r\n      const leftSeconds = seconds - minutes * 60;\r\n      result = `${minutes}  ${min} ${leftSeconds}  ${sec}`;\r\n    }\r\n    return result;\r\n  } else if (typeof seconds === 'boolean') {\r\n    return false;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { transformSecondsToMinutes };\r\n","import ResultTime from './Time/ResultTime';\r\n\r\nexport default ResultTime;\r\n","import { useEffect, useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  StyledH2,\r\n  StyledH3,\r\n  StyledArticle,\r\n} from './ResultTime.Styled';\r\n\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport ErrorMessage from '../../../UI/ErrorMessage/ErroMessage';\r\nimport { ContextIdUser } from '../../../components/Context';\r\n\r\nimport { getUserInfo } from '../api/getUserInfo';\r\nimport { transformSecondsToMinutes } from '../helpers/transformSecondsToMinutes';\r\n\r\n\r\nconst ResultTime = (): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  const [idUser]: [string, (lang: string) => void] = useContext(ContextIdUser);\r\n  type TState = {\r\n    loading: boolean;\r\n    error: boolean;\r\n    time: number | false | null;\r\n  };\r\n\r\n  type TUserInfoDB = {\r\n    name: string;\r\n    email: string;\r\n    quiantityPause: number;\r\n    time: number;\r\n  };\r\n\r\n  const [state, setState] = useState<TState>({\r\n    loading: true,\r\n    error: false,\r\n    time: 0,\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [time, setTime] = useState<number>(0);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n\r\n  const timeHasLoaded = (userInfo: TUserInfoDB) => {\r\n    const { time } = userInfo;\r\n    setIsLoading(false);\r\n    setTime(time);\r\n  };\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledH3>{t('Затраченное_время')}</StyledH3>\r\n        <StyledH2>\r\n          {transformSecondsToMinutes(time, t('сек'), t('мин'))}\r\n        </StyledH2>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : (\r\n    false\r\n  );\r\n  const error = isError ? <ErrorMessage /> : false;\r\n  const content = !(isLoading || isError) ? view() : false;\r\n\r\n  const onError = (error: any): never => {\r\n    setIsLoading(false);\r\n    setIsError(true);\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getUserInfo(idUser).then(timeHasLoaded).catch(onError);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {spinner} {error} {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultTime;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ntype TUserInfoDB = {\r\n  name: string;\r\n  email: string;\r\n  quiantityPause: number;\r\n  time: number;\r\n};\r\n\r\nconst getUserInfo = (idUser: string) => {\r\n  return new Promise<TUserInfoDB>(function (resolve, reject) {\r\n    onValue(ref(db, `users/user${idUser}/userInfo`), (snapshot) => {\r\n      resolve(snapshot.val());\r\n    });\r\n  });\r\n};\r\n\r\nexport { getUserInfo };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  box-sizing: border-box;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-height: 575px;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 16px 8px 9px 8px;\r\n\r\n  &:not(list-child) {\r\n    margin: 0 0 24px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    max-width: 50%;\r\n\r\n    &:not(list-child) {\r\n      margin: 0;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1023.8px) {\r\n    padding: 25px 8px 15px 8px;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.article`\r\n  font: var(--font-little-text-regular);\r\n  color: #29313c;\r\n  text-align: justify;\r\n  margin: 12px 0 0 0;\r\n`;\r\n\r\nconst StyledBarChartWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 220px;\r\n  max-width: 525px;\r\n`;\r\n\r\nexport { StyledArticle, StyledP, StyledBarChartWrapper };\r\n","import { useState, useEffect, memo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nimport Spinner from '../../UI/Spinner/Spinner';\r\nimport ErrorMessage from '../../UI/ErrorMessage/ErroMessage';\r\nimport {\r\n  StyledArticle,\r\n  StyledP,\r\n  StyledBarChartWrapper,\r\n} from './BatChart.Styled';\r\n\r\nimport type { TPointsByThemes } from '../../types/types';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n);\r\n\r\ntype BarChartProps = {\r\n  pointsByTheme: TPointsByThemes | null;\r\n};\r\n\r\nconst BarChart = ({ pointsByTheme }: BarChartProps): JSX.Element => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const colors = ['black', 'red', 'blue'];\r\n  const { t } = useTranslation();\r\n\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom' as const,\r\n        align: 'center' as const,\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        max: 100,\r\n        ticks: {\r\n          stepSize: 25,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels: [''],\r\n    datasets: pointsByTheme\r\n      ? Object.entries(pointsByTheme).map((item, index) => {\r\n          const percentOfTheme = +(\r\n            (item[1].totalPoints / item[1].totalQuantityQuestions) *\r\n            100\r\n          ).toFixed();\r\n          const shortNameTheme =\r\n            item[0].length > 25 ? `${item[0].slice(0, 25)}...` : item[0];\r\n\r\n          return {\r\n            label: `${percentOfTheme} % - ${shortNameTheme}`,\r\n            data: [percentOfTheme],\r\n            backgroundColor: colors[index],\r\n          };\r\n        })\r\n      : [],\r\n  };\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledArticle>\r\n        <StyledBarChartWrapper>\r\n          <Bar options={options} data={data} />\r\n        </StyledBarChartWrapper>\r\n        <StyledP>{t('Подпись_столбчатая_диаграмма')}</StyledP>\r\n      </StyledArticle>\r\n    );\r\n  };\r\n\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color={'#1f2ce0'} margin='0 auto' />\r\n  ) : null;\r\n  const content = !(isLoading || isError) ? view() : null;\r\n  const error = isError ? <ErrorMessage/> : null;\r\n\r\n  useEffect(() => {\r\n    if (pointsByTheme) {\r\n      setIsLoading(false);\r\n    } \r\n  }, [pointsByTheme]);\r\n\r\n  return (\r\n    <>\r\n      {content} {spinner} {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(BarChart);\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSection = styled.section`\r\n  box-sizing: border-box;\r\n  margin: 18px 0 24px 0;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledSectionResults = styled.section`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px 3px 20px;\r\n  position: relative;\r\n\r\n  &:after {\r\n    position: absolute;\r\n    content: '';\r\n    height: 1px;\r\n    color: #dfe4e9;\r\n    background-color: #dfe4e9;\r\n    width: 256px;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    height: 185px;\r\n\r\n    &:after {\r\n      transform: rotate(90deg);\r\n      width: 102px;\r\n      left: 43%;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1439.8px) {\r\n    &:after {\r\n      left: 45.5%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledSection, StyledSectionResults };\r\n","import { useState, useCallback } from 'react';\r\n\r\nimport { StyledMain } from '../../styles/Main.Styled';\r\nimport UserAnswers from '../../modules/UserAnswers';\r\nimport Container from '../../components/Container/Container';\r\nimport DoughuntChart from '../../components/DoughuntChart/DoughuntChart';\r\nimport Score from '../../modules/Score/index';\r\nimport ResultTime from '../../modules/ResultTime/index';\r\nimport BarChart from '../../components/BarChart/BarChart';\r\n\r\nimport {\r\n  StyledSection,\r\n  StyledSectionResults,\r\n} from './Results.Styled';\r\n\r\nimport type { TPointsByThemes } from '../../types/types';\r\n\r\n\r\n\r\nconst Results = () => {\r\n  const [rightAnswers, setRightAnswers] = useState<number>(0);\r\n  const [pointsByTheme, setPointsByTheme] = useState<TPointsByThemes | null>(\r\n    null,\r\n  );\r\n\r\n    const setRightUserAnswers = useCallback((points: number) => {\r\n    setRightAnswers(points);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <StyledMain>\r\n        <div>\r\n          <Container>\r\n            <StyledSectionResults>\r\n              <Score setRightAnswers={setRightUserAnswers} />\r\n              <ResultTime />\r\n            </StyledSectionResults>\r\n            <StyledSection>\r\n              <BarChart pointsByTheme={pointsByTheme} />\r\n              <DoughuntChart rightAnswers={rightAnswers} />\r\n            </StyledSection>\r\n          </Container>\r\n          <UserAnswers setPointsByTheme={setPointsByTheme} />\r\n        </div>\r\n      </StyledMain>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n`;\r\n"],"names":["StyledSpan","styled","StyledDiv","Error","color","fontSize","getDataFromDB","async","Promise","resolve","reject","onValue","ref","db","url","snapshot","value","val","getTotalQuestionsNumb","response","data","Object","entries","length","transformData","e","console","error","ContainerStyled","children","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","StyleArticleDropdown","StyledButton","StyledUl","StyledImg","StyledLi","Dropdown","hideListFilters","selected","isActive","style","themeHasChoosen","toggleListThemes","idWrapper","elementLanguages","map","item","index","tabIndex","onClick","useEffect","handleClickOutside","target","tagName","document","addEventListener","removeEventListener","id","className","src","chevrondown","alt","displayName","setFilterByRightAnswer","typeAnswer","setTypeAnswer","useState","isShowList","setIsShowList","themesNames","setFilterByTheme","selectedTheme","setSelectedTheme","margin","getAnswerOptions","getUserAnswers","idUser","getInfoQuestions","getNumberFromKey","key","matches","match","parseInt","values","filter","question","userAnswer","point","infoQuestionsAndAnswers","Set","infoQuestion","theme","forEach","add","Array","from","getThemesNames","themes","getThemes","i","updateData","pointsByThemes","totalPoints","totalQuantityQuestions","StyledListAnswers","StyledSum","StyledSection","StyledSpanResult","isRight","setPointsByTheme","lang","useContext","ContextLanguage","ContextIdUser","t","useTranslation","setInfoQuestionsAndAnswers","isError","setIsError","isLoading","setIsLoading","filterTheme","setFilterTheme","filterRight","setFilterRight","loading","Spinner","width","height","content","visibleData","filterByRightAnswer","filterByThemes","userAnswerArr","descr","img","name","rightAnswer","answerOptions","borderRadius","border","maxWidth","join","view","transformUserAnswers","res","fromEntries","onError","all","then","userAnswers","infoQuestions","generalInfo","transformQuestionsAndAnswersDB","catch","getPointsByThemes","Container","open","newFilter","StyledArticle","StyledP","StyledDoughuntWrapper","ChartJS","ArcElement","Tooltip","Legend","LinearScale","rightAnswers","totalQuestionNumbers","setTotalQuestionNumbers","percentRightQuestions","toFixed","percentWrongQuestions","labels","datasets","label","backgroundColor","borderColor","cutout","borderWidth","spinner","questionsNumber","setQuestionsNumber","getTotalPoints","points","reduce","sum","curr","StyledH3","StyledH2","setRightAnswers","setPoints","dataHasLoaded","dataInfo","answers","answersTransform","url2","allSettled","transformSecondsToMinutes","seconds","sec","min","result","minutes","Math","floor","state","setState","time","setTime","timeHasLoaded","userInfo","getUserInfo","StyledBarChartWrapper","CategoryScale","BarElement","Title","BarChart","pointsByTheme","colors","options","maintainAspectRatio","plugins","legend","position","align","title","display","scales","y","max","ticks","stepSize","percentOfTheme","slice","memo","StyledSectionResults","setRightUserAnswers","useCallback","DoughuntChart","StyledMain"],"sourceRoot":""}