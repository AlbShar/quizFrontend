{"version":3,"file":"static/js/673.2e87505f.chunk.js","mappings":"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","sources":["UI/ErrorMessage/ErrorMessage.Styled.ts","UI/ErrorMessage/ErroMessage.tsx","UI/LinkBtn/LinkBtn.Styled.ts","UI/LinkBtn/LinkBtn.tsx","api/getDataFromDB.ts","api/getTotalQuestionsNumb.ts","components/Container/Container.styled.ts","components/Container/Container.tsx","config/firebase/firebaseConfig.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","modules/TestAnswerOptions/UI/SkeletonAnswers.tsx","modules/TestAnswerOptions/components/Answer/Answer.Styled.ts","modules/TestAnswerOptions/components/Answer/Answer.tsx","modules/TestAnswerOptions/helpers/removeAllAttributes.ts","modules/TestAnswerOptions/AnswerOptions/AnswerOptions.Styled.ts","modules/TestAnswerOptions/index.ts","modules/TestAnswerOptions/AnswerOptions/AnswerOptions.tsx","modules/TestAnswerOptions/api/getAnswersOptions.ts","modules/TestTask/UI/SkeletonQuestion.tsx","modules/TestTask/TestTask/TestTask.Styled.ts","modules/TestTask/index.ts","modules/TestTask/TestTask/TestTask.tsx","modules/TestInfo/UI/SkeletonTheme.tsx","modules/TestInfo/api/getThemeQuestion.ts","modules/TestInfo/components/ScrollBar/SrollBar.Styled.ts","modules/TestInfo/components/ScrollBar/ScrollBar.tsx","modules/TestInfo/helpers/setWidthScrollBar.ts","modules/TestInfo/api/sendTimeToDB.ts","UI/Button/Button.Styled.ts","UI/Modal/Modal.Styled.ts","UI/Modal/Modal.tsx","modules/TestInfo/helpers/getFullNumb.ts","components/Portal/Portal.tsx","assets/images/pause.svg","modules/TestInfo/components/Timer/Timer.Styled.ts","modules/TestInfo/components/Timer/Timer.tsx","modules/TestInfo/TestInfo/TestInfo.Styled.ts","modules/TestInfo/index.ts","modules/TestInfo/TestInfo/TestInfo.tsx","assets/images/leftArrow.svg","modules/TestButtons/UI/Buttons.Styled.ts","modules/TestButtons/UI/BtnBack.tsx","modules/TestButtons/helpers/highlightPreviousAnswer.ts","assets/images/rightArrow.svg","modules/TestButtons/UI/ButtonNext.tsx","modules/TestButtons/api/sendUserAnswerDB.ts","modules/TestButtons/api/getRightAnswerDB.ts","modules/TestButtons/TestButtons/TestButtons.Styled.ts","modules/TestButtons/index.ts","modules/TestButtons/TestButtons/TestButtons.tsx","pages/Quiz/Quiz.Styled.ts","pages/Quiz/Quiz.tsx","styles/Main.Styled.ts","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StyledSpan = styled.span`\r\n  color: red;\r\n  display: inline-block;\r\n  margin: 0 5px 0 0 ;\r\n  text-transform: uppercase;\r\n  font: var(--font-bold);\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport { StyledSpan, StyledDiv };\r\n","import ErrorIcon from '@mui/icons-material/Error';\r\n\r\nimport { StyledSpan, StyledDiv } from './ErrorMessage.Styled';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <StyledDiv>\r\n      <StyledSpan>Error!</StyledSpan>\r\n      <ErrorIcon color='error' fontSize='medium' />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3px 10px;\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 7px;\r\n  background-color: #585AFF;\r\n  max-width: 190px;\r\n  width: 100%;\r\n  max-height: 56px;\r\n\r\n  &:disabled {\r\n    background-color: rgba(88, 90, 255, 0.49);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 16px 18px;\r\n    max-width: 230px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonQuiz = styled(StyledButton)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nconst StyledButtonBack = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 5px;\r\n  border: none;\r\n  background-color: transparent;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-top: 32px;\r\n  max-width: 540px;\r\n  padding: 5px;\r\n\r\n  @media screen and (min-width: 768.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-button);\r\n  color: var(--color-back-btn);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport {\r\n  StyledButton,\r\n  StyledArticle,\r\n  StyledButtonBack,\r\n  StyledImg,\r\n  StyledSpan,\r\n  StyledButtonQuiz,\r\n};","import './link.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { MouseEvent } from 'react';\r\n\r\nimport { StyledButton } from './LinkBtn.Styled';\r\n\r\ntype LinkBtnProps = {\r\n  text: string;\r\n  id?: string;\r\n  pageTo: string;\r\n  onClick?: (e: MouseEvent) => void;\r\n  isDisabledBtn?: boolean;\r\n};\r\nconst LinkBtn = ({\r\n  text,\r\n  pageTo,\r\n  onClick,\r\n  id,\r\n  isDisabledBtn,\r\n}: LinkBtnProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Link className='btn__link' to={pageTo} onClick={onClick} id={id}>\r\n      <StyledButton disabled={isDisabledBtn}>{t(text)}</StyledButton>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkBtn;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../config/firebase/firebaseConfig';\r\n\r\n\r\n\r\nconst getDataFromDB = async <TData>(url: string) => {\r\n\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(ref(db, url), (snapshot) => {\r\n      const value: TData = snapshot.val();\r\n\r\n      if (value) {\r\n        return resolve(value);\r\n      } else {\r\n        reject(\r\n          new Error(\r\n            `Value (${value}) from Firebase Database not found. Check url (${url})`,\r\n          ),\r\n        );\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport { getDataFromDB };\r\n","import { getDataFromDB } from './getDataFromDB';\r\n\r\ntype TotalQuestions = {\r\n  [key: string]: string;\r\n};\r\n\r\nconst transformData = (data: TotalQuestions): number => {\r\n  return Object.entries(data).length;\r\n};\r\n\r\nconst getTotalQuestionsNumb = async (url: string): Promise<number> => {\r\n  try {\r\n    const response = await getDataFromDB<TotalQuestions>(url);\r\n    const data = transformData(response as TotalQuestions);\r\n    return data;\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { getTotalQuestionsNumb };\r\n","import styled from 'styled-components';\r\n\r\nconst ContainerStyled = styled.div`\r\nmax-width: 85%;\r\nmin-width: 287px;\r\nmargin: 0 auto;\r\npadding: 0 5px;\r\n@media screen and (min-width: 1299.8px) {\r\n  max-width: 1190px;\r\n}\r\n`;\r\n\r\nexport { ContainerStyled };\r\n","import { ContainerStyled } from './Container.styled';\r\n\r\ntype ContainerProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst Container = ({ children }: ContainerProps): JSX.Element => {\r\n  return <ContainerStyled>{children}</ContainerStyled>;\r\n};\r\n\r\nexport default Container;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\", \"useFlexGap\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className,\n        useFlexGap = false\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","import PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","import Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst SkeletonAnswers = () => {\r\n  return (\r\n    <Stack spacing={0}>\r\n      <Skeleton variant='text' sx={{ fontSize: '3rem', padding: '7px' }} />\r\n      <Skeleton variant='text' sx={{ fontSize: '3rem', padding: '7px' }} />\r\n      <Skeleton variant='text' sx={{ fontSize: '3rem', padding: '7px' }} />\r\n      <Skeleton variant='text' sx={{ fontSize: '3rem', padding: '7px' }} />\r\n      <Skeleton variant='text' sx={{ fontSize: '3rem', padding: '7px' }} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SkeletonAnswers;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledLi = styled.li`\r\n  word-wrap: break-word;\r\n  box-sizing: border-box;\r\n  flex-basis: 100%;\r\n  list-style-type: none;\r\n  padding: 7px;\r\n  font: var(--font-little-text-regular);\r\n  cursor: pointer;\r\n  background-color: #EEEEFF;\r\n  border-radius: 7px;\r\n  border: none;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 15px;\r\n  }\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-regular);\r\n    padding: 15px 20px;\r\n\r\n  }\r\n  \r\n`;\r\n\r\nexport { StyledLi };\r\n","import { ReactNode, KeyboardEventHandler } from 'react';\r\n\r\nimport { StyledLi } from './Answer.Styled';\r\n\r\ntype AnswerProps = {\r\n  children: ReactNode;\r\n  setRef: (elem: any) => void;\r\n  onClickAnswer: (id: number, e) => void;\r\n  index: number;\r\n};\r\n\r\nconst Answer = ({\r\n  children,\r\n  index,\r\n  setRef,\r\n  onClickAnswer,\r\n}: AnswerProps): JSX.Element => {\r\n\r\n  const handleKeyboardClick: KeyboardEventHandler<HTMLLIElement> = (e) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      onClickAnswer(index, e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledLi\r\n      ref={setRef}\r\n      tabIndex={0}\r\n      onClick={(e) => onClickAnswer(index, e)}\r\n      onKeyDown={handleKeyboardClick}\r\n    >\r\n      {children}\r\n    </StyledLi>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","const removeAllAttributes = (refs: HTMLLIElement[]) => {\r\n  refs.forEach((answer: HTMLLIElement) => {\r\n    answer.removeAttribute('style');\r\n    answer.removeAttribute('data-useranswer');\r\n  });\r\n};\r\n\r\nexport { removeAllAttributes };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 1123.8px) {\r\n    gap: 40px;\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-basis: auto;\r\n  }\r\n`;\r\n\r\nexport { StyledArticle, StyledUl };\r\n","import AnswerOptions from './AnswerOptions/AnswerOptions';\r\n\r\nexport default AnswerOptions;\r\n","import { useEffect, useState, useContext } from 'react';\r\n\r\nimport SkeletonAnswers from '../UI/SkeletonAnswers';\r\nimport { getAnswersOptions } from '../api/getAnswersOptions';\r\nimport Answer from '../components/Answer/Answer';\r\nimport { ContextCurrentQuestionNumb } from '../../../components/Context';\r\nimport { ContextLanguage } from '../../../components/Context';\r\nimport { removeAllAttributes } from '../helpers/removeAllAttributes';\r\nimport ErrorMessage from '../../../UI/ErrorMessage/ErroMessage';\r\n\r\nimport { StyledArticle, StyledUl } from './AnswerOptions.Styled';\r\n\r\nimport type { AnswersType } from '../type';\r\n\r\ntype AnswerOptionsProps = {\r\n  setIsBtnNextDisabled: (item: boolean) => void;\r\n  setUserAnswer: (item: string) => void;\r\n};\r\n\r\nconst AnswerOptions = ({\r\n  setIsBtnNextDisabled,\r\n  setUserAnswer,\r\n}: AnswerOptionsProps): JSX.Element => {\r\n  const [answers, setAnsewrs] = useState<string[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n\r\n  const [currentQuestionNumb]: [number, (numb: number) => void] = useContext(\r\n    ContextCurrentQuestionNumb,\r\n  );\r\n  const [lang]: [string, (lang: string) => void] = useContext(ContextLanguage);\r\n\r\n  const refAnswers: HTMLLIElement[] = [];\r\n  const setRefAnswer = (elem: HTMLLIElement) => {\r\n    refAnswers.push(elem as HTMLLIElement);\r\n  };\r\n\r\n  const onClickAnswer = (id: number, e: MouseEvent) => {\r\n    const style = 'background-color: #B7B7FF';\r\n\r\n    if (e.target) {\r\n      const targetElement = e.target as HTMLElement;\r\n      const textContent = targetElement.textContent || '';\r\n      setUserAnswer(textContent);\r\n    }\r\n\r\n    removeAllAttributes(refAnswers);\r\n    refAnswers[id].setAttribute('style', style);\r\n    refAnswers[id].focus();\r\n    setIsBtnNextDisabled(false);\r\n  };\r\n\r\n  const answersHasLoaded = (response: AnswersType) => {\r\n    const answers = Object.entries(response).map((item) => item.join('. '));\r\n    if (Array.isArray(answers)) {\r\n      setAnsewrs(answers);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const answersItems = answers.map((answer, index) => (\r\n    <Answer\r\n      index={index}\r\n      setRef={setRefAnswer}\r\n      onClickAnswer={onClickAnswer}\r\n      key={index + 1}\r\n    >\r\n      {answer}\r\n    </Answer>\r\n  ));\r\n\r\n  const skeleton = isLoading ? <SkeletonAnswers /> : null;\r\n  const error = isError ? <ErrorMessage /> : null;\r\n\r\n  const content = !(isLoading || isError) ? (\r\n    <StyledArticle id='answersAll'>\r\n      <StyledUl>{answersItems}</StyledUl>\r\n    </StyledArticle>\r\n  ) : null;\r\n\r\n  const onErrorHandler = (error) => {\r\n    setIsLoading(false);\r\n    setIsError(true);\r\n    throw new Error(`${error.message}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = `answers/answers${currentQuestionNumb}/${lang}`;\r\n\r\n    getAnswersOptions(url).then(answersHasLoaded).catch(onErrorHandler);\r\n  }, [currentQuestionNumb, lang]);\r\n\r\n  useEffect(() => {\r\n    removeAllAttributes(refAnswers);\r\n    //eslint-disable-next-line\r\n  }, [currentQuestionNumb]);\r\n\r\n  return (\r\n    <>\r\n      {skeleton} {content} {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnswerOptions;\r\n","import { getDataFromDB } from '../../../api/getDataFromDB';\r\n\r\nimport type { AnswersType } from '../type';\r\n\r\nconst getAnswersOptions = async (url: string): Promise<AnswersType> => {\r\n  try {\r\n    const response = await getDataFromDB<AnswersType>(url);\r\n    return response as AnswersType;\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { getAnswersOptions };\r\n","import Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst SkeletonQuestion = () => {\r\n  return (\r\n    <Stack spacing={1}>\r\n      <Skeleton variant='text' sx={{ fontSize: '5rem'}} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SkeletonQuestion;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticleQuestion = styled.article`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  font: var(--font-title4);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 0 0 20px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-semi-bold);\r\n  }\r\n`;\r\n\r\nconst StyledPicture = styled.picture`\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-basis: 55%;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1123.8px) {\r\n    flex-basis: 48%;\r\n  }\r\n`;\r\n\r\ntype StyledImgProps = {\r\n  currentQuestionNumb?: number;\r\n}\r\n\r\nconst StyledImg = styled.img<StyledImgProps>`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  ${function ({ currentQuestionNumb }) {\r\n    if (currentQuestionNumb !== 16) {\r\n      return `\r\n      @media screen and (min-width: 667.8px) {\r\n        width: 85%;\r\n      }\r\n  \r\n      @media screen and (min-width: 923.8px) {\r\n        width: 78%;\r\n      }\r\n            `;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport { StyledH2, StyledArticleQuestion, StyledPicture, StyledImg };\r\n","import TestTask from './TestTask/TestTask';\r\n\r\nexport default TestTask;\r\n","import { useEffect, useContext, useState } from 'react';\r\n\r\nimport { ContextCurrentQuestionNumb } from '../../../components/Context';\r\nimport { ContextLanguage } from '../../../components/Context';\r\nimport SkeletonQuestion from '../UI/SkeletonQuestion';\r\nimport { getDataFromDB } from '../../../api/getDataFromDB';\r\n\r\nimport {\r\n  StyledH2,\r\n  StyledArticleQuestion,\r\n  StyledPicture,\r\n  StyledImg,\r\n} from './TestTask.Styled';\r\nimport ErrorMessage from '../../../UI/ErrorMessage/ErroMessage';\r\n\r\nconst TestTask = () => {\r\n  const [currentQuestionNumb]: [number, (numb: number) => void] = useContext(\r\n    ContextCurrentQuestionNumb,\r\n  );\r\n  const [lang]: [string, (lang: string) => void] = useContext(ContextLanguage);\r\n\r\n  const [questionName, setQuestionName] = useState<string>('');\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [srcImg, setSrcImg] = useState<string>('');\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n\r\n  const error = isError ? <ErrorMessage /> : null;\r\n  const spinner = isLoading ? <SkeletonQuestion /> : null;\r\n\r\n  const urls = [\r\n    `questions/question${currentQuestionNumb}/${lang}/img`,\r\n    `questions/question${currentQuestionNumb}/${lang}/name`,\r\n  ];\r\n\r\n  const view = () => {\r\n    if (!srcImg) {\r\n      return (\r\n        <StyledArticleQuestion>\r\n          <StyledH2 id='questionTitle' tabIndex={0}>\r\n            {questionName}\r\n          </StyledH2>\r\n        </StyledArticleQuestion>\r\n      );\r\n    }\r\n    return (\r\n      <StyledArticleQuestion>\r\n        <StyledH2 id='questionTitle' tabIndex={0}>\r\n          {questionName}\r\n        </StyledH2>\r\n        <StyledPicture>\r\n          <source\r\n            type='image/png'\r\n            media='(min-width: 320px)'\r\n            srcSet={srcImg}\r\n            width='120'\r\n            height='auto'\r\n          ></source>\r\n          <source\r\n            type='image/png'\r\n            media='(min-width: 487px)'\r\n            srcSet={srcImg}\r\n            width='768'\r\n            height='auto'\r\n          ></source>\r\n          <source\r\n            type='image/png'\r\n            media='(min-width: 769px)'\r\n            srcSet={srcImg}\r\n            width='1024'\r\n            height='auto'\r\n          ></source>\r\n          <StyledImg src={srcImg} width='1024' height='auto' alt='Код на JS' />\r\n        </StyledPicture>\r\n      </StyledArticleQuestion>\r\n    );\r\n  };\r\n\r\n  const content = !(isLoading || isError) ? view() : null;\r\n\r\n  const dataLoaded = (result) => {\r\n    result.forEach((result, num) => {\r\n      if (result.status === 'rejected') {\r\n        throw new Error(`${urls[num]}: ${result.reason}`);\r\n      }\r\n    });\r\n\r\n    type TDataInfo = {\r\n      src: string;\r\n      question: string;\r\n    };\r\n\r\n    const dataInfo: TDataInfo = { src: '', question: '' };\r\n\r\n    result.forEach((item) => {\r\n      if (item.value.startsWith('http')) {\r\n        dataInfo.src = item.value;\r\n      }\r\n      if (item.value === 'No') {\r\n        dataInfo.src = '';\r\n      }\r\n      if (typeof item.value === 'string') {\r\n        dataInfo.question = item.value;\r\n      }\r\n    });\r\n\r\n    setQuestionName(dataInfo.question);\r\n    setIsLoading(false);\r\n    setSrcImg(dataInfo.src);\r\n  };\r\n\r\n  const onErrorHandler = (error): never => {\r\n    setIsLoading(false);\r\n    setIsError(true);\r\n\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.allSettled(urls.map((url) => getDataFromDB(url)))\r\n      .then(dataLoaded)\r\n      .catch(onErrorHandler);\r\n  }, [currentQuestionNumb, lang]);\r\n\r\n  return (\r\n    <>\r\n      {spinner} {content} {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestTask;\r\n","import Skeleton from '@mui/material/Skeleton';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nconst SkeletonTheme = () => {\r\n  return (\r\n    <Stack spacing={3}>\r\n      <Skeleton variant='rounded' width={300} height={25}/>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default SkeletonTheme;\r\n","import { getDataFromDB } from '../../../api/getDataFromDB';\r\n\r\nconst getThemeQuestion = async (url: string) => {\r\n  try {\r\n    const response = await getDataFromDB<string>(url);\r\n\r\n    return response;\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { getThemeQuestion };\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDivScrollBar = styled.div`\r\n  box-sizing: border-box;\r\n  height: 6px;\r\n  background-color: var(--color-scroll-bar);\r\n  width: 370px;\r\n`;\r\n","import { useEffect, useContext, useRef, RefObject } from 'react';\r\n\r\nimport { setWidthScrollBar } from '../../helpers/setWidthScrollBar';\r\nimport { ContextCurrentQuestionNumb } from '../../../../components/Context';\r\n\r\nimport { StyledDivScrollBar } from './SrollBar.Styled';\r\n\r\ntype ScrollBarProps = {\r\n  quizRef: RefObject<HTMLTableSectionElement>;\r\n}\r\n\r\nconst ScrollBar = ({ quizRef }: ScrollBarProps): JSX.Element => {\r\n  const [currentQuestionNumb]: [number, (numb: number) => void] = useContext(\r\n    ContextCurrentQuestionNumb,\r\n  );\r\n  const scrollBarElementRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setWidthScrollBar({ currentQuestionNumb, quizRef, scrollBarElementRef });\r\n  });\r\n\r\n  return <StyledDivScrollBar ref={scrollBarElementRef}></StyledDivScrollBar>;\r\n};\r\n\r\nexport default ScrollBar;\r\n","import { RefObject } from 'react';\r\n\r\nimport { getTotalQuestionsNumb } from '../../../api/getTotalQuestionsNumb';\r\n\r\ntype WidthScrollBarProps = {\r\n  currentQuestionNumb: number;\r\n  quizRef: RefObject<HTMLTableSectionElement>;\r\n  scrollBarElementRef: RefObject<HTMLDivElement>;\r\n}\r\nasync function setWidthScrollBar({\r\n  currentQuestionNumb,\r\n  quizRef,\r\n  scrollBarElementRef,\r\n}: WidthScrollBarProps) {\r\n  try {\r\n    const url = 'questions';\r\n    const totalQuestionsNumb: number | undefined = await getTotalQuestionsNumb(\r\n      url,\r\n    );\r\n\r\n    const quizElement = quizRef.current;\r\n    const scrollBarElement = scrollBarElementRef.current;\r\n    if (quizElement && totalQuestionsNumb && scrollBarElement) {\r\n      const widthContainer =\r\n        quizElement.clientWidth -\r\n        parseInt(getComputedStyle(quizElement).paddingRight) -\r\n        parseInt(getComputedStyle(quizElement).paddingLeft);\r\n      const valueWidthScroll = widthContainer / totalQuestionsNumb;\r\n      scrollBarElement.style.width = `${\r\n        currentQuestionNumb * valueWidthScroll\r\n      }px`;\r\n    }\r\n  } catch (error: unknown) {\r\n    if (error instanceof Error) {\r\n      throw new Error(`${error.message}`);\r\n    } else {\r\n      throw new Error(`Unknown error caught: ${error}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport { setWidthScrollBar };\r\n","import { ref, update } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst sendTimeToDB = (time: number, url: string) => {\r\n  try {\r\n    update(ref(db, url), {\r\n      time,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { sendTimeToDB };\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 8px 33px;\r\n  background-color: var(--color-button);\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 80px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledButton};\r\n","import styled from 'styled-components';\r\n\r\nimport { StyledButton } from '../Button/Button.Styled';\r\n\r\nconst StyleDivModal = styled.div`\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst StyledButtonModal = styled(StyledButton)`\r\n  margin: 20px 0 0 0;\r\n  display: block;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 30px;\r\n  }\r\n`;\r\n\r\nconst StyledDivWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  margin: 0 auto;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  height: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n  margin-top: 0;\r\n  font: 800 24px/36px Inter, Arial, sans-serif;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: 400 16px/24px Inter, Arial, sans-serif;\r\n`;\r\n\r\nconst StyledSpanClose = styled.span`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 20px;\r\n`;\r\n\r\nexport {\r\n  StyleDivModal,\r\n  StyledDivWrapper,\r\n  StyledH1,\r\n  StyledSpan,\r\n  StyledSpanClose,\r\n  StyledButtonModal,\r\n};\r\n","import {\r\n  StyleDivModal,\r\n  StyledDivWrapper,\r\n  StyledH1,\r\n  StyledSpan,\r\n  StyledSpanClose,\r\n  StyledButtonModal,\r\n} from './Modal.Styled';\r\n\r\ntype ModalProps = {\r\n  title: string;\r\n  subTitle: string;\r\n  onClickHandler?: () => void;\r\n};\r\nconst Modal = ({\r\n  title,\r\n  subTitle,\r\n  onClickHandler,\r\n}: ModalProps): JSX.Element => {\r\n  return (\r\n    <StyleDivModal id='notification'>\r\n      <StyledDivWrapper>\r\n        <StyledH1 className='notification__title'>{title}</StyledH1>\r\n        <StyledSpanClose\r\n          className='notification__close'\r\n          onClick={onClickHandler}\r\n        >\r\n          ✖\r\n        </StyledSpanClose>\r\n        <StyledSpan className='notification__text'>{subTitle}</StyledSpan>\r\n        <StyledButtonModal onClick={onClickHandler}>\r\n          Продолжить\r\n        </StyledButtonModal>\r\n      </StyledDivWrapper>\r\n    </StyleDivModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","const getFullNumb = (numb: number): string => {\r\n  return `${numb}`.length === 1 ? `0${numb}` : `${numb}`;\r\n};\r\n\r\nexport default getFullNumb;\r\n","import { ReactNode, useEffect } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\ntype PortalProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nconst Portal = ({ children }: PortalProps): JSX.Element => {\r\n  const container = document.createElement('article');\r\n  const root = document.querySelector('#root');\r\n  root?.append(container);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      container.remove();\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(children, container);\r\n};\r\n\r\nexport default Portal;\r\n","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPause(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 34,\n    viewBox: \"0 0 26 34\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 8L18 26\",\n    stroke: \"black\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 8L8 26\",\n    stroke: \"black\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPause);\nexport default __webpack_public_path__ + \"static/media/pause.bb2b2d07bad30ada7aad2b9017f81d3b.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nconst StyledDivTimer = styled.div`\r\n  display: flex;\r\n  font: var(--font-little-text-regular);\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n    flex-direction: row;\r\n    width: 100%;\r\n    max-width: 274px;\r\n    gap: 66px;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  @media screen and (max-width: 767.8px) {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonPause = styled.button`\r\n  box-sizing: border-box;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background-color: transparent;\r\n  border-radius: 7px;\r\n  color: #000000;\r\n  font: var(--font-little-text-regular);\r\n  font-weight: 700;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin: 0;\r\n  gap: 5px;\r\n  padding: 5px;\r\n  text-transform: uppercase;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 10px;\r\n    font: var(--font-bold);\r\n    max-width: 120px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledSpanTimer = styled.span`\r\n  font: var(--font-bold);\r\n`;\r\n\r\nexport { StyledDivTimer, StyledButtonPause, StyledSpanTimer, StyledImg };\r\n","import { useState, useEffect, useRef, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ContextIdUser } from '../../../../components/Context';\r\nimport { sendTimeToDB } from '../../api/sendTimeToDB';\r\nimport Modal from '../../../../UI/Modal/Modal';\r\nimport getFullNumb from '../../helpers/getFullNumb';\r\nimport Portal from '../../../../components/Portal/Portal';\r\nimport pause from '../../../../assets/images/pause.svg';\r\n\r\nimport {\r\n  StyledDivTimer,\r\n  StyledButtonPause,\r\n  StyledSpanTimer,\r\n  StyledImg,\r\n} from './Timer.Styled';\r\n\r\nconst Timer = () => {\r\n  const { t } = useTranslation();\r\n  const [isCounting, setIsCounting] = useState<boolean>(true);\r\n  const [isModal, setIsModal] = useState<boolean>(false);\r\n  const [time, setTime] = useState<number>(0);\r\n  const [idUser]: [string, (lang: string) => void] = useContext(ContextIdUser);\r\n\r\n  const timerRef = useRef<HTMLDivElement>(null);\r\n  const hours: string = getFullNumb(Math.floor(time / 3600) % 60);\r\n  const minutes: string = getFullNumb(Math.floor(time / 60) % 60);\r\n  const seconds: string = getFullNumb(Math.floor(time % 60));\r\n  const timer: string[] = [`${hours}:`, `${minutes}:`, seconds];\r\n\r\n  const elementNumbersTimer = timer.map((time, index) => (\r\n    <span key={index + 1}>{time}</span>\r\n  ));\r\n  const titleModal = t('Заголовок1_пауза');\r\n  const subtitleModal = t('Заголовок2_пауза');\r\n\r\n  const stopTimer = () => {\r\n    setIsCounting(false);\r\n    setIsModal(true);\r\n  };\r\n\r\n  const restoreTimer = () => {\r\n    setIsCounting(true);\r\n    setIsModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = `users/user${idUser}/userInfo`;\r\n\r\n    const startTimer = () => {\r\n      isCounting && setTime((time) => time + 1);\r\n    };\r\n\r\n    const timerId = setTimeout(() => {\r\n      startTimer();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n      if (!timerRef.current) {\r\n        sendTimeToDB(time, url);\r\n      }\r\n    };\r\n  }, [time, isCounting]);\r\n\r\n\r\n  return (\r\n    <StyledDivTimer ref={timerRef}>\r\n      <StyledButtonPause onClick={stopTimer}>\r\n        <StyledImg src={pause} alt='pause' />\r\n        {t('Пауза')}\r\n      </StyledButtonPause>\r\n      <StyledSpanTimer>{elementNumbersTimer}</StyledSpanTimer>\r\n      {isModal && (\r\n        <Portal>\r\n          <Modal\r\n            title={titleModal}\r\n            subTitle={subtitleModal}\r\n            onClickHandler={restoreTimer}\r\n          />\r\n        </Portal>\r\n      )}\r\n    </StyledDivTimer>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledH1 = styled.h1`\r\n  display: inline-block;\r\n  font: var(--font-title4);\r\n  color: black;\r\n  padding: 0;\r\n  position: relative;\r\n  flex: 0 1 85%;\r\n  margin: 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-bold);\r\n  }\r\n`;\r\n\r\nconst StyledSpanQuestionQuantity = styled.span`\r\n  color: #000;\r\n  font-size: 16px;\r\n  font-family: Inter;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  padding: 0 0 0 5px;\r\n`;\r\n\r\nconst StyledSpanThemeQuestion = styled(StyledSpanQuestionQuantity)`\r\n  display: block;\r\n  padding: 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    display: inline;\r\n    padding: 0 0 0 10px;\r\n  }\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 540px;\r\n  padding: 20px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledH1,\r\n  StyledSpanThemeQuestion,\r\n  StyledSpanQuestionQuantity,\r\n  StyledArticle,\r\n};\r\n","import TestInfo from './TestInfo/TestInfo';\r\n\r\nexport default TestInfo;\r\n","import { useEffect, useContext, useState, RefObject } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ContextCurrentQuestionNumb } from '../../../components/Context';\r\nimport { ContextLanguage } from '../../../components/Context';\r\nimport SkeletonTheme from '../UI/SkeletonTheme';\r\nimport { getThemeQuestion } from '../api/getThemeQuestion';\r\nimport { getTotalQuestionsNumb } from '../../../api/getTotalQuestionsNumb';\r\nimport ScrollBar from '../components/ScrollBar/ScrollBar';\r\nimport Timer from '../components/Timer/Timer';\r\nimport ErrorMessage from '../../../UI/ErrorMessage/ErroMessage';\r\n\r\nimport {\r\n  StyledH1,\r\n  StyledSpanThemeQuestion,\r\n  StyledSpanQuestionQuantity,\r\n  StyledArticle,\r\n} from './TestInfo.Styled';\r\n\r\ntype TestInfoProps = {\r\n  quizRef: RefObject<HTMLTableSectionElement>;\r\n};\r\n\r\nconst TestInfo = ({ quizRef }: TestInfoProps) => {\r\n  const { t } = useTranslation();\r\n\r\n  const [currentQuestionNumb]: [number, (numb: number) => void] = useContext(\r\n    ContextCurrentQuestionNumb,\r\n  );\r\n  const [lang]: [string, (lang: string) => void] = useContext(ContextLanguage);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [theme, setTheme] = useState<string>('');\r\n  const [totalQuestionNumber, setTotalQuestionNumber] = useState<number>(0);\r\n\r\n  const view = () => {\r\n    return (\r\n      <section>\r\n        <article style={{ backgroundColor: '#EEEEFF' }}>\r\n          <ScrollBar quizRef={quizRef} />\r\n        </article>\r\n        <StyledArticle>\r\n          <div>\r\n            <StyledH1 id='questionName'>\r\n              {t('Вопрос')} {currentQuestionNumb}\r\n            </StyledH1>\r\n            <StyledSpanQuestionQuantity id='totalQuestionQuantity' tabIndex={0}>\r\n              {`/ ${totalQuestionNumber}`}\r\n            </StyledSpanQuestionQuantity>\r\n            <StyledSpanThemeQuestion id='themeQuestion'>\r\n              {theme}\r\n            </StyledSpanThemeQuestion>\r\n          </div>\r\n          <Timer />\r\n        </StyledArticle>\r\n      </section>\r\n    );\r\n  };\r\n  const skeleton = isLoading ? <SkeletonTheme /> : null;\r\n  const content = !(isLoading || isError) ? view() : null;\r\n  const error = isError ? <ErrorMessage/> : null;\r\n\r\n  const dataLoaded = (res) => {\r\n    type TArrayItems = {\r\n      theme: null | string;\r\n      totalQuestionNumber: number | null;\r\n    };\r\n\r\n    const items: TArrayItems = {\r\n      theme: null,\r\n      totalQuestionNumber: null,\r\n    };\r\n\r\n    res.forEach((result) => {\r\n      if (typeof result.value === 'number') {\r\n        items.totalQuestionNumber = result.value;\r\n      } else if (typeof result.value === 'string') {\r\n        items.theme = result.value;\r\n      }\r\n    });\r\n\r\n\r\n    setIsLoading(false);\r\n    setTheme(`${items.theme}`);\r\n    setTotalQuestionNumber(items.totalQuestionNumber as number);\r\n\r\n    for (const key in items) {\r\n      if (!items[key]) {\r\n        throw new Error(`Value of ${key} is ${items[key]} in object \"items\"`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onError = (error: any): never => {\r\n    setIsError(true);\r\n    setIsLoading(false);\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url1 = `questions/question${currentQuestionNumb}/${lang}/theme`;\r\n    const url2 = 'questions';\r\n    \r\n    Promise.allSettled([getThemeQuestion(url1), getTotalQuestionsNumb(url2)])\r\n      .then(dataLoaded)\r\n      .catch(onError);\r\n  }, [currentQuestionNumb, lang]);\r\n\r\n  return (\r\n    <>\r\n      {skeleton}\r\n      {content}\r\n      {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestInfo;\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLeftArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 20,\n    viewBox: \"0 0 9 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 1L1 10L8 19\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLeftArrow);\nexport default __webpack_public_path__ + \"static/media/leftArrow.ffd35a492cc0b13d0f52b0e89016538e.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 18px;\r\n  border: none;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n  border-radius: 7px;\r\n  background-color: #585aff;\r\n  width: 100%;\r\n  max-width: 120px;\r\n  max-height: 56px;\r\n\r\n  &:disabled {\r\n    background-color: #b7b7ff;\r\n    cursor: not-allowed;\r\n}\r\n\r\n  @media screen and (min-width: 768.8px) {\r\n    padding: 16px 18px;\r\n    max-width: 170px;\r\n    max-height: 56px;\r\n    gap: 30px;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  color: #fff;\r\n  font: var(--font-bold);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport { StyledButton, StyledSpan };\r\n","import { useContext, MouseEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport {\r\n  ContextCurrentQuestionNumb,\r\n  ContextIdUser,\r\n} from '../../../components/Context';\r\nimport { highlightPreviousAnswer } from '../helpers/highlightPreviousAnswer';\r\nimport leftArrow from '../../../assets/images/leftArrow.svg';\r\n\r\nimport { StyledButton, StyledSpan } from './Buttons.Styled';\r\n\r\ntype BtnBackProps = {\r\n  setIsBtnNextDisabled: (item: boolean) => void;\r\n  setIsBtnBackDisabled: (item: boolean) => void;\r\n  isBtnBackDisabled: boolean;\r\n};\r\nconst BtnBack = ({\r\n  setIsBtnNextDisabled,\r\n  isBtnBackDisabled,\r\n  setIsBtnBackDisabled,\r\n}: BtnBackProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n  //eslint-disable-next-line\r\n  let [currentQuestionNumb, setCurrentQuestionNumb] = useContext(\r\n    ContextCurrentQuestionNumb,\r\n  );\r\n  const [idUser]: [string, (lang: string) => void] = useContext(ContextIdUser);\r\n\r\n  const onClickBackBtn = (e: MouseEvent<HTMLButtonElement>) => {\r\n    setCurrentQuestionNumb(currentQuestionNumb - 1);\r\n    setIsBtnNextDisabled(false);\r\n    setIsBtnBackDisabled(true);\r\n    highlightPreviousAnswer({\r\n      idUser: idUser,\r\n      currentQuestionNumb,\r\n      selectorAnswers: '#answersAll ul li',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {\r\n        <StyledButton\r\n          style={{ justifyContent: 'flex-start' }}\r\n          id='btnBack'\r\n          onClick={onClickBackBtn}\r\n          disabled={isBtnBackDisabled}\r\n        >\r\n          <img src={leftArrow} alt='Кнопка назад' />\r\n          <StyledSpan>{t('назад')}</StyledSpan>\r\n        </StyledButton>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtnBack;\r\n","import { ref, onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ntype highlightPreviousAnswerProps = {\r\n  idUser: string;\r\n  currentQuestionNumb: number;\r\n  selectorAnswers: string;\r\n}\r\nconst highlightPreviousAnswer = ({\r\n  idUser,\r\n  currentQuestionNumb,\r\n  selectorAnswers,\r\n}: highlightPreviousAnswerProps): void => {\r\n  const refer = `users/user${idUser}/answers/answer${currentQuestionNumb - 1}`;\r\n  let userAnswerDb = '';\r\n  try {\r\n    onValue(\r\n      ref(db, refer),\r\n      (snapshot) => {\r\n        setTimeout(() => {\r\n          document\r\n            .querySelectorAll<HTMLLIElement>(selectorAnswers)\r\n            .forEach((answerItem) => {\r\n              userAnswerDb = snapshot.val().userAnswer;\r\n              if (answerItem.textContent === userAnswerDb) {\r\n                answerItem.style.backgroundColor = '#B7B7FF';\r\n                answerItem.setAttribute('data-useranswer', 'true');\r\n              }\r\n            });\r\n        }, 10);\r\n      },\r\n      {\r\n        onlyOnce: true,\r\n      },\r\n    );\r\n  } catch (error) {\r\n    if (!userAnswerDb) {\r\n      throw new Error(\r\n        `The value of variable 'userAnswerDb' is ${userAnswerDb}. ${error}`,\r\n      );\r\n    }\r\n    throw new Error(`Unknown mistake: ${error}`);\r\n  }\r\n};\r\n\r\nexport { highlightPreviousAnswer };\r\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRightArrow(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 9,\n    height: 20,\n    viewBox: \"0 0 9 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 19L8 10L1 1\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRightArrow);\nexport default __webpack_public_path__ + \"static/media/rightArrow.68d8ba69dceb545c90c48c34f34567b7.svg\";\nexport { ForwardRef as ReactComponent };","import { MouseEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport rightArrow from '../../../assets/images/rightArrow.svg';\r\n\r\nimport { StyledButton, StyledSpan } from './Buttons.Styled';\r\n\r\ntype ButtonNextProps = {\r\n  onClickButtonHandler: (e: MouseEvent) => void;\r\n  isBtnNextDisabled: boolean;\r\n};\r\n\r\nconst ButtonNext = ({\r\n  onClickButtonHandler,\r\n  isBtnNextDisabled,\r\n}: ButtonNextProps) : JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <StyledButton\r\n        style={{ justifyContent: 'flex-end' }}\r\n        onClick={onClickButtonHandler}\r\n        disabled={isBtnNextDisabled}\r\n      >\r\n        <StyledSpan>{t('Принять')}</StyledSpan>\r\n        <img src={rightArrow} alt='rightArrow' />\r\n      </StyledButton>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonNext;\r\n","import { ref, set } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nimport { getRightAnswerDB } from './getRightAnswerDB';\r\n\r\ntype UserAnswerProps = {\r\n  userAnswer: string;\r\n  idUser: string;\r\n  currentQuestionNumb: number;\r\n  lang: string\r\n};\r\n\r\nconst sendUserAnswerDB = async ({\r\n  userAnswer,\r\n  idUser,\r\n  currentQuestionNumb,\r\n  lang,\r\n}: UserAnswerProps): Promise<void> => {\r\n  const questionName =\r\n    document.querySelector<HTMLHeadingElement>('#questionTitle')?.textContent;\r\n    const themeName =\r\n      document.querySelector<HTMLHeadingElement>('#themeQuestion')?.textContent;\r\n  const url = `users/user${idUser}/answers/answer${currentQuestionNumb}`;\r\n\r\n  try {\r\n    const rightAnswer = await getRightAnswerDB(currentQuestionNumb, lang);\r\n    const isRigthAnswer = rightAnswer === userAnswer ? 1 : 0;\r\n\r\n    set(ref(db, url), {\r\n      question: questionName,\r\n      userAnswer: userAnswer,\r\n      point: isRigthAnswer,\r\n      theme: themeName,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { sendUserAnswerDB };\r\n","import { getDataFromDB } from '../../../api/getDataFromDB';\r\n\r\nconst getRightAnswerDB = async (currentQuestionNumb: number, lang: string) => {\r\n  const url = `questions/question${currentQuestionNumb}/${lang}/rightAnswer`;\r\n\r\n  try {\r\n    const response = await getDataFromDB<string>(url);\r\n    return response as string;\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { getRightAnswerDB };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 40px;\r\n  margin-top: 25px;\r\n  max-width: 100%;\r\n  padding: 5px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nexport { StyledArticle };\r\n","import TestButtons from './TestButtons/TestButtons';\r\n\r\nexport default TestButtons;\r\n","import {\r\n  useContext,\r\n  MouseEvent,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n} from 'react';\r\n\r\nimport BtnBack from '../UI/BtnBack';\r\nimport ButtonNext from '../UI/ButtonNext';\r\nimport {\r\n  ContextCurrentQuestionNumb,\r\n  ContextLanguage,\r\n  ContextIdUser,\r\n} from '../../../components/Context';\r\nimport { sendUserAnswerDB } from '../api/sendUserAnswerDB';\r\nimport LinkBtn from '../../../UI/LinkBtn/LinkBtn';\r\nimport { getTotalQuestionsNumb } from '../../../api/getTotalQuestionsNumb';\r\n\r\nimport { StyledArticle } from './TestButtons.Styled';\r\n\r\ntype TestButtonsProps = {\r\n  isBtnNextDisabled: boolean;\r\n  setIsBtnNextDisabled: (item: boolean) => void;\r\n  userAnswer: string;\r\n};\r\n\r\nconst TestButtons = ({\r\n  isBtnNextDisabled,\r\n  setIsBtnNextDisabled,\r\n  userAnswer,\r\n}: TestButtonsProps): JSX.Element => {\r\n  const [currentQuestionNumb, setCurrentQuestionNumb] = useContext(\r\n    ContextCurrentQuestionNumb,\r\n  );\r\n  const [lang] = useContext(ContextLanguage);\r\n  const [idUser]: [string, (lang: string) => void] = useContext(ContextIdUser);\r\n\r\n  const [totalQuestionsNumbers, setTotalQuestionsNumbers] = useState<number>(0);\r\n  const [isBtnBackDisabled, setIsBtnBackDisabled] = useState<boolean>(true);\r\n\r\n  const setQuestionsNumber = useCallback(async () => {\r\n    const url = 'questions';\r\n    const questionsNumber = await getTotalQuestionsNumb(url);\r\n    setTotalQuestionsNumbers(questionsNumber as number);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setQuestionsNumber();\r\n  }, []);\r\n\r\n  const sendAnswersToDb = () => {\r\n    setCurrentQuestionNumb(currentQuestionNumb + 1);\r\n    sendUserAnswerDB({\r\n      userAnswer,\r\n      idUser,\r\n      currentQuestionNumb,\r\n      lang,\r\n    });\r\n  };\r\n\r\n  const onClickButtonHandler = (e: MouseEvent) => {\r\n    sendAnswersToDb();\r\n    setIsBtnNextDisabled(true);\r\n    setIsBtnBackDisabled(false);\r\n  };\r\n\r\n  return (\r\n    <StyledArticle>\r\n      <BtnBack\r\n        setIsBtnNextDisabled={setIsBtnNextDisabled}\r\n        isBtnBackDisabled={isBtnBackDisabled}\r\n        setIsBtnBackDisabled={setIsBtnBackDisabled}\r\n      />\r\n      {totalQuestionsNumbers === currentQuestionNumb ? (\r\n        <LinkBtn\r\n          text='Закончить тест'\r\n          pageTo='/contact'\r\n          onClick={onClickButtonHandler}\r\n          id='btnFinish'\r\n          isDisabledBtn={isBtnNextDisabled}\r\n        />\r\n      ) : (\r\n        <ButtonNext\r\n          isBtnNextDisabled={isBtnNextDisabled}\r\n          onClickButtonHandler={onClickButtonHandler}\r\n        />\r\n      )}\r\n    </StyledArticle>\r\n  );\r\n};\r\n\r\nexport default TestButtons;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: #fff;\r\n  padding: 17px 8px 25px 8px;\r\n  margin: 0 0 15px 0;\r\n  border-radius: 7px;\r\n\r\n  @media screen and (min-width: 1123.8px) {\r\n    padding: 27px 40px 25px 40px;\r\n    margin: 0 0 72px 0;\r\n  }\r\n`;\r\n\r\nexport { StyledSection };\r\n","import { useState, useRef, useEffect } from 'react';\r\n\r\nimport Container from '../../components/Container/Container';\r\nimport AnswerOptions from '../../modules/TestAnswerOptions/index';\r\nimport TestTask from '../../modules/TestTask/index';\r\nimport TestInfo from '../../modules/TestInfo/index';\r\nimport { StyledMain } from '../../styles/Main.Styled';\r\nimport { ContextCurrentQuestionNumb } from '../../components/Context';\r\nimport TestButtons from '../../modules/TestButtons/index';\r\n\r\nimport { StyledSection } from './Quiz.Styled';\r\n\r\nconst Quiz = () => {\r\n  const [currentQuestionNumb, setCurrentQuestionNumb] = useState<number>(1);\r\n  const quizRef = useRef<HTMLTableSectionElement>(null);\r\n  const [userAnswer, setUserAnswer] = useState<string>('');\r\n  const [isBtnNextDisabled, setIsBtnNextDisabled] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const showWarningWindow = (event: BeforeUnloadEvent) => {\r\n      event.preventDefault();\r\n      event.returnValue =\r\n        'Вы уверены, что хотите покинуть эту страницу? Все несохраненные изменения будут потеряны.';\r\n    };\r\n\r\n    window.addEventListener('beforeunload', showWarningWindow);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', showWarningWindow);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyledMain>\r\n      <Container>\r\n        <StyledSection ref={quizRef}>\r\n          <ContextCurrentQuestionNumb.Provider\r\n            value={[currentQuestionNumb, setCurrentQuestionNumb]}\r\n          >\r\n            <TestInfo quizRef={quizRef} />\r\n            <TestTask />\r\n            <AnswerOptions\r\n              setIsBtnNextDisabled={setIsBtnNextDisabled}\r\n              setUserAnswer={setUserAnswer}\r\n            />\r\n            <TestButtons\r\n              setIsBtnNextDisabled={setIsBtnNextDisabled}\r\n              isBtnNextDisabled={isBtnNextDisabled}\r\n              userAnswer={userAnswer}\r\n            />\r\n          </ContextCurrentQuestionNumb.Provider>\r\n        </StyledSection>\r\n      </Container>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n`;\r\n","import { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isBrowser$1 } from './emotion-element-c39617d8.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-c39617d8.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.2\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n\n  if (!isBrowser$1) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport defaultSxConfig from './defaultSxConfig';\nconst splitProps = props => {\n  var _props$theme$unstable, _props$theme;\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  const config = (_props$theme$unstable = props == null ? void 0 : (_props$theme = props.theme) == null ? void 0 : _props$theme.unstable_sxConfig) != null ? _props$theme$unstable : defaultSxConfig;\n  Object.keys(props).forEach(prop => {\n    if (config[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\nexport default function extendSxProp(props) {\n  const {\n      sx: inSx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}"],"names":["StyledSpan","styled","StyledDiv","Error","color","fontSize","StyledButton","text","pageTo","onClick","id","isDisabledBtn","t","useTranslation","className","to","disabled","getDataFromDB","async","Promise","resolve","reject","onValue","ref","db","url","snapshot","value","val","getTotalQuestionsNumb","response","data","Object","entries","length","transformData","e","console","error","ContainerStyled","children","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","getUnit","input","String","match","toUnitless","parseFloat","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","name","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","display","backgroundColor","vars","palette","Skeleton","bg","alpha","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","css","action","hover","React","inProps","useThemeProps","component","style","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","joinChildren","separator","childrenArray","filter","reduce","output","child","index","push","key","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","createStyledComponent","componentName","StackRoot","themeProps","extendSxProp","divider","createStack","sx","padding","StyledLi","setRef","onClickAnswer","tabIndex","onKeyDown","preventDefault","removeAllAttributes","refs","answer","removeAttribute","StyledArticle","StyledUl","setIsBtnNextDisabled","setUserAnswer","answers","setAnsewrs","useState","isLoading","setIsLoading","isError","setIsError","currentQuestionNumb","useContext","ContextCurrentQuestionNumb","lang","ContextLanguage","refAnswers","setRefAnswer","elem","target","textContent","setAttribute","focus","answersHasLoaded","map","item","join","Array","isArray","answersItems","skeleton","onErrorHandler","message","useEffect","getAnswersOptions","then","catch","StyledArticleQuestion","StyledH2","StyledPicture","StyledImg","questionName","setQuestionName","srcImg","setSrcImg","spinner","urls","type","media","srcSet","src","alt","dataLoaded","result","num","status","reason","dataInfo","question","startsWith","allSettled","getThemeQuestion","StyledDivScrollBar","quizRef","scrollBarElementRef","useRef","totalQuestionsNumb","quizElement","current","scrollBarElement","valueWidthScroll","clientWidth","parseInt","getComputedStyle","paddingRight","paddingLeft","setWidthScrollBar","StyleDivModal","StyledButtonModal","StyledDivWrapper","StyledH1","StyledSpanClose","title","subTitle","onClickHandler","numb","container","document","createElement","querySelector","append","remove","ReactDOM","StyledDivTimer","StyledButtonPause","StyledSpanTimer","isCounting","setIsCounting","isModal","setIsModal","time","setTime","idUser","ContextIdUser","timerRef","elementNumbersTimer","getFullNumb","floor","titleModal","subtitleModal","timerId","setTimeout","clearTimeout","update","sendTimeToDB","pause","StyledSpanQuestionQuantity","StyledSpanThemeQuestion","setTheme","totalQuestionNumber","setTotalQuestionNumber","res","items","onError","url1","isBtnBackDisabled","setIsBtnBackDisabled","setCurrentQuestionNumb","justifyContent","selectorAnswers","refer","userAnswerDb","querySelectorAll","answerItem","userAnswer","onlyOnce","highlightPreviousAnswer","leftArrow","onClickButtonHandler","isBtnNextDisabled","rightArrow","sendUserAnswerDB","themeName","rightAnswer","getRightAnswerDB","isRigthAnswer","set","point","totalQuestionsNumbers","setTotalQuestionsNumbers","setQuestionsNumber","useCallback","questionsNumber","LinkBtn","StyledSection","showWarningWindow","event","returnValue","window","addEventListener","removeEventListener","Container","Context","StyledMain","_len","arguments","args","_key","serializeStyles","insertable","apply","anim","toString","this","inSx","systemProps","otherProps","_props$theme$unstable","_props$theme","config","unstable_sxConfig","defaultSxConfig","prop","splitProps","finalSx","isPlainObject"],"sourceRoot":""}