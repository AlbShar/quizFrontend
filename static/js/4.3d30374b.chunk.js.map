{"version":3,"file":"static/js/4.3d30374b.chunk.js","mappings":"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","sources":["UI/Dropdown/Dropdown.Styled.ts","UI/Dropdown/Dropdown.tsx","UI/ErrorMessage/ErrorMessage.Styled.ts","UI/ErrorMessage/ErroMessage.tsx","UI/LinkBtn/LinkBtn.Styled.ts","UI/LinkBtn/LinkBtn.tsx","api/getDataFromDB.ts","api/getTotalQuestionsNumb.ts","components/Container/Container.styled.ts","components/Container/Container.tsx","components/InfoBlock/InfoBlock.styled.ts","components/InfoBlock/InfoBlock.tsx","config/firebase/firebaseConfig.js","helpers/setValueToLocalStorage.ts","modules/CallToAction/api/getInfoQuestions.ts","modules/CallToAction/components/InfoTest/InfoTest.styled.ts","modules/CallToAction/icons/clock.svg","modules/CallToAction/icons/bar-chart.svg","modules/CallToAction/icons/help-circle.svg","modules/CallToAction/components/InfoTest/InfoTest.tsx","modules/CallToAction/UI/DropdownProfession.Styled.ts","assets/images/arrowDownLarge.svg","modules/CallToAction/UI/DropdownProfession.tsx","modules/CallToAction/CallToAction/CallToAction.styled.ts","modules/CallToAction/index.ts","modules/CallToAction/CallToAction/CallToAction.tsx","modules/CallToAction/helpers/createIdUser.ts","components/GeneralInfoTest/GeneralInfoTest.tsx","pages/Homepage/Homepage.tsx","styles/Main.Styled.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nconst StyleArticleDropdown = styled.article`\r\n  cursor: pointer;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\n\r\nconst StyledButton = styled.button`\r\n  box-sizing: border-box;\r\n  display: block;\r\n  position: relative;\r\n  cursor: pointer;\r\n  border: none;\r\n  background-color: #5557ff;\r\n  border-radius: 7px;\r\n  padding: 0 15px;\r\n  text-align: center;\r\n  min-height: 45px;\r\n  width: 100%;\r\n  color: #fff;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    min-height: 56px;\r\n  }\r\n`;\r\n\r\nconst StyledSpan = styled.span<{ customStyle?: string }>`\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  display: inline-block;\r\n  ${(props) => props.customStyle || ''};\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst StyledSpanList = styled.span`\r\n  color: #000;\r\n  font-family: Inter;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst StyledImgLeft = styled.img`\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 26%;\r\n`;\r\n\r\nconst StyledImgRight = styled.img`\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 40%;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  box-sizing: border-box;\r\n  background-color: white;\r\n  list-style-type: none;\r\n  margin: 10px 0 0 0;\r\n  padding: 5px 10px;\r\n  border-radius: 7px;\r\n  box-shadow: 0px 4px 4px 0px #0000003d;\r\n  width: 100%;\r\n  position: absolute;\r\n  z-index: 2;\r\n  \r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  font-family: Inter;\r\n  padding: 3px 0;\r\n  width: 300px;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n   padding: 5px 0;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledSpan,\r\n  StyledImgLeft,\r\n  StyledImgRight,\r\n  StyledSpanList,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './style.css';\r\n\r\nimport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledSpan,\r\n  StyledImgLeft,\r\n  StyledImgRight,\r\n  StyledSpanList,\r\n} from './Dropdown.Styled';\r\n\r\ntype TLanguages = {\r\n  [key: string]: string;\r\n};\r\ntype DropdownProps = {\r\n  customStyle?: string;\r\n  selected: string;\r\n  data: TLanguages | string[];\r\n  onClickElement?: (item: string) => void;\r\n  srcImg?: string;\r\n  srcArrowDown: string;\r\n};\r\n\r\nconst Dropdown = ({\r\n  data,\r\n  selected,\r\n  customStyle,\r\n  onClickElement,\r\n  srcImg = '',\r\n  srcArrowDown,\r\n}: DropdownProps) => {\r\n  const [isActive, setActive] = useState<boolean>(false);\r\n\r\n  const toggleList = () => {\r\n    setActive((isActive) => !isActive);\r\n  };\r\n\r\n  const onClickButton = () => {\r\n    toggleList();\r\n  };\r\n\r\n  const transformData = (data: unknown) => {\r\n    if (Array.isArray(data)) {\r\n      return data.map((item: string, index: number) => {\r\n        return (\r\n          <StyledLi\r\n            key={index + 1}\r\n            tabIndex={0}\r\n            onClick={() => {\r\n              onClickElement && onClickElement(item);\r\n              toggleList();\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'inline-flex',\r\n                alignItems: 'baseline',\r\n                gap: 2,\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <StyledSpanList>\r\n                {item}\r\n              </StyledSpanList>\r\n            </div>\r\n          </StyledLi>\r\n        );\r\n      });\r\n    } else {\r\n      return Object.entries(data as TLanguages).map(\r\n        (item: string[], index: number) => {\r\n          const shotLang = item[1];\r\n          const fullLang = item[0];\r\n          return (\r\n            <StyledLi\r\n              key={index + 1}\r\n              tabIndex={0}\r\n              onClick={() => {\r\n                onClickElement && onClickElement(shotLang);\r\n                toggleList();\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  display: 'inline-flex',\r\n                  alignItems: 'baseline',\r\n                  gap: 2,\r\n                  justifyContent: 'center',\r\n                }}\r\n              >\r\n                <span\r\n                  style={{\r\n                    fontSize: 16,\r\n                    fontWeight: 600,\r\n                  }}\r\n                >\r\n                  {shotLang.toUpperCase()}\r\n                </span>\r\n                <span\r\n                  style={{\r\n                    fontSize: 12,\r\n                    fontWeight: 400,\r\n                  }}\r\n                >\r\n                  {fullLang}\r\n                </span>\r\n              </div>\r\n            </StyledLi>\r\n          );\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  const dropdownElements = transformData(data);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      const target = e.target as HTMLElement;\r\n\r\n      if (!target.closest('ul') && !target.closest('button')) {\r\n        setActive(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <StyleArticleDropdown>\r\n      <StyledButton onClick={onClickButton}>\r\n        {srcImg ? <StyledImgLeft src={srcImg} alt='img' /> : null}\r\n        <StyledSpan\r\n          className='dropdown-btn-text'\r\n          customStyle={customStyle || ''}\r\n        >\r\n          {selected.toUpperCase() || ''}\r\n        </StyledSpan>\r\n\r\n        <StyledImgRight src={srcArrowDown} alt='Кнопка вниз' />\r\n      </StyledButton>\r\n      <CSSTransition in={isActive} timeout={300} classNames='list'>\r\n        {<>{isActive && <StyledUl>{dropdownElements}</StyledUl>}</>}\r\n      </CSSTransition>\r\n    </StyleArticleDropdown>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSpan = styled.span`\r\n  color: red;\r\n  display: inline-block;\r\n  margin: 0 5px 0 0 ;\r\n  text-transform: uppercase;\r\n  font: var(--font-bold);\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport { StyledSpan, StyledDiv };\r\n","import ErrorIcon from '@mui/icons-material/Error';\r\n\r\nimport { StyledSpan, StyledDiv } from './ErrorMessage.Styled';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <StyledDiv>\r\n      <StyledSpan>Error!</StyledSpan>\r\n      <ErrorIcon color='error' fontSize='medium' />\r\n    </StyledDiv>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 3px 10px;\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 7px;\r\n  background-color: #585AFF;\r\n  max-width: 350px;\r\n  width: 100%;\r\n  max-height: 56px;\r\n  height: 100%;\r\n\r\n  &:disabled {\r\n    background-color: rgba(88, 90, 255, 0.49);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 16px 18px;\r\n    max-width: 230px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonQuiz = styled(StyledButton)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nconst StyledButtonBack = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 5px;\r\n  border: none;\r\n  background-color: transparent;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-top: 32px;\r\n  max-width: 540px;\r\n  padding: 5px;\r\n\r\n  @media screen and (min-width: 768.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-button);\r\n  color: var(--color-back-btn);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport {\r\n  StyledButton,\r\n  StyledArticle,\r\n  StyledButtonBack,\r\n  StyledImg,\r\n  StyledSpan,\r\n  StyledButtonQuiz,\r\n};","import './link.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { MouseEvent } from 'react';\r\n\r\nimport { StyledButton } from './LinkBtn.Styled';\r\n\r\ntype LinkBtnProps = {\r\n  text: string;\r\n  id?: string;\r\n  pageTo: string;\r\n  onClick?: (e: MouseEvent) => void;\r\n  isDisabledBtn?: boolean;\r\n};\r\nconst LinkBtn = ({\r\n  text,\r\n  pageTo,\r\n  onClick,\r\n  id,\r\n  isDisabledBtn,\r\n}: LinkBtnProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Link className='btn__link' to={pageTo} onClick={onClick} id={id}>\r\n      <StyledButton disabled={isDisabledBtn}>{t(text)}</StyledButton>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkBtn;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\n\r\nimport db from '../config/firebase/firebaseConfig';\r\n\r\n\r\n\r\nconst getDataFromDB = async <TData>(url: string) => {\r\n\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(\r\n      ref(db, url),\r\n      (snapshot) => {\r\n        const value: TData = snapshot.val();\r\n\r\n        if (value) {\r\n          return resolve(value);\r\n        } else {\r\n          reject(\r\n            new Error(\r\n              `Value (${value}) from Firebase Database not found. Check url (${url})`,\r\n            ),\r\n          );\r\n        }\r\n      },\r\n    );\r\n  });\r\n};\r\n\r\nexport { getDataFromDB };\r\n","import { getDataFromDB } from './getDataFromDB';\r\n\r\ntype TotalQuestions = {\r\n  [key: string]: string;\r\n};\r\n\r\nconst transformData = (data: TotalQuestions): number => {\r\n  return Object.entries(data).length;\r\n};\r\n\r\nconst getTotalQuestionsNumb = async (url: string): Promise<number> => {\r\n  try {\r\n    const response = await getDataFromDB<TotalQuestions>(url);\r\n    const data = transformData(response as TotalQuestions);\r\n    return data;\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n    throw e;\r\n  }\r\n};\r\n\r\nexport { getTotalQuestionsNumb };\r\n","import styled from 'styled-components';\r\n\r\nconst ContainerStyled = styled.div`\r\n  box-sizing: border-box;\r\n  max-width: 85%;\r\n  min-width: 287px;\r\n  margin: 0 auto;\r\n  padding: 0 5px;\r\n  \r\n  @media screen and (min-width: 1299.8px) {\r\n    width: 1190px;\r\n  }\r\n`;\r\n\r\nexport { ContainerStyled };\r\n","import { CSSProperties } from 'react';\r\n\r\nimport { ContainerStyled } from './Container.styled';\r\n\r\ntype ContainerProps = {\r\n  children: React.ReactNode;\r\n  style?: CSSProperties\r\n};\r\n\r\nconst Container = ({ children, style }: ContainerProps): JSX.Element => {\r\n  return <ContainerStyled style={style}>{children}</ContainerStyled>;\r\n};\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFeatureArticle = styled.article`\r\n  background-color: #fff;\r\n  margin: 0 0 15px 0;\r\n  border-radius: 0 0 5px 5px;\r\n`;\r\n\r\nconst StyledSummary = styled.summary`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  background-color: var(--color-title-background);\r\n  font: var(--font-little-text-regular);\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  cursor: pointer;\r\n  border-radius: 5px 5px 0 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title4);\r\n    justify-content: flex-start;\r\n    padding: 10px 0 10px 40px;\r\n  }\r\n`;\r\nconst StyledP = styled.p`\r\n  font: var(--font-little-text-regular);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 0;\r\n  text-align: justify;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  max-width: 1129px;\r\n  margin: 13px 0 5px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 13px 0 10px 0;\r\n  }\r\n`;\r\n\r\nconst StyledDivWrapper = styled.div`\r\n  padding: 5px 10px;\r\n  @media screen and (min-width: 459.8px) {\r\n    padding: 10px 20px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledFeatureArticle,\r\n  StyledDivWrapper,\r\n  StyledSummary,\r\n  StyledP,\r\n  StyledImg,\r\n};\r\n","import { ReactNode } from 'react';\r\n\r\nimport {\r\n  StyledFeatureArticle,\r\n  StyledSummary,\r\n  StyledP,\r\n  StyledDivWrapper,\r\n} from './InfoBlock.styled';\r\n\r\ntype InfoBlockProps =  {\r\n  title: string;\r\n  text: string;\r\n  idForText?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nconst InfoBlock = ({\r\n  title,\r\n  text,\r\n  idForText,\r\n}: InfoBlockProps): JSX.Element => {\r\n\r\n  return (\r\n    <StyledFeatureArticle>\r\n      <details open>\r\n        <StyledSummary>{title}</StyledSummary>\r\n        <StyledDivWrapper>\r\n          <StyledP id={idForText}>{text}</StyledP>\r\n        </StyledDivWrapper>\r\n      </details>\r\n    </StyledFeatureArticle>\r\n  );\r\n  \r\n};\r\n\r\nexport default InfoBlock;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","const setValueToLocalStorage = <T extends string>(key: T, value: T): void => {\r\n  try {\r\n    return localStorage.setItem(key, value);\r\n  } catch (e: unknown) {\r\n    if (e instanceof DOMException && e.code === DOMException.SECURITY_ERR) {\r\n      throw new Error(\r\n        `Don't block your cookies. Turn on it in setting of your browser.`,\r\n      );\r\n    }  else {\r\n      throw new Error(`Unknown error caught: ${e}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport { setValueToLocalStorage };\r\n","import { getDataFromDB } from \"../../../api/getDataFromDB\";\r\n\r\ntype Questions = {\r\n  [key in string]: object;\r\n};\r\n\r\nconst transformData = (question: Questions, lang: string): number => {\r\n  const themes = new Set();\r\n  const themesDb = Object.values(question).map(question => question[lang].theme);\r\n\r\n  for (const theme of themesDb) {\r\n    themes.add(theme);\r\n  }\r\n\r\n  return themes.size ;\r\n};\r\n\r\nconst getQuantityThemes = async (url: string, lang: string) => {\r\n try {\r\n   const response = await getDataFromDB<Questions>(url);\r\n  const data = transformData(response as Questions, lang);\r\n\r\n   return data;\r\n } catch (e) {\r\n   console.error(e);\r\n   throw e;\r\n }\r\n};\r\n\r\nexport { getQuantityThemes };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-around;\r\n  box-sizing: border-box;\r\n  list-style-type: none;\r\n  margin: 26px 0 0 0;\r\n  padding: 8px 12px;\r\n  border-radius: 7px;\r\n  background-color: #fff;\r\n  max-width: 250px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    max-width: 577px;\r\n    padding: 24px;\r\n    flex-direction: row;\r\n    max-height: 58px;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 18px;\r\n  height: 18px;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  color: white;\r\n  font: var(--font-little-text-bold);\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-bold);\r\n\r\n    &:not(:last-child) {\r\n      margin: 0 30px 0 0;\r\n    }\r\n\r\n    &:not(:last-child):after {\r\n      color: black;\r\n      position: relative;\r\n      content: '/';\r\n      left: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport { StyledUl, StyledImg, StyledLi };\r\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgClock(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"clock-5 1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M12 12V8\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_3\",\n    d: \"M16 8L12 12\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgClock);\nexport default __webpack_public_path__ + \"static/media/clock.8a5db54b6f0f9a4cc679e8cd9d78b38f.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBarChart(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"bar-chart 1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M12.3091 20V10\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M18.3091 20V4\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_3\",\n    d: \"M6.30908 20V16\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBarChart);\nexport default __webpack_public_path__ + \"static/media/bar-chart.768f7fb2145142f17bf632da33aa70b0.svg\";\nexport { ForwardRef as ReactComponent };","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgHelpCircle(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 24,\n    viewBox: \"0 0 25 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"help-circle 1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M12.1543 22C17.6771 22 22.1543 17.5228 22.1543 12C22.1543 6.47715 17.6771 2 12.1543 2C6.63145 2 2.1543 6.47715 2.1543 12C2.1543 17.5228 6.63145 22 12.1543 22Z\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M9.24414 9.00002C9.47924 8.33169 9.94329 7.76813 10.5541 7.40915C11.1649 7.05018 11.883 6.91896 12.5813 7.03873C13.2796 7.15851 13.913 7.52154 14.3692 8.06355C14.8255 8.60555 15.0752 9.29154 15.0741 10C15.0741 12 12.0741 13 12.0741 13\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_3\",\n    d: \"M12.1543 17H12.1643\",\n    stroke: \"black\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpCircle);\nexport default __webpack_public_path__ + \"static/media/help-circle.fc40940fc7507687f2f6260b252ddebc.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState, useContext } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { getQuantityThemes } from '../../api/getInfoQuestions';\r\nimport { getTotalQuestionsNumb } from '../../../../api/getTotalQuestionsNumb';\r\nimport Spinner from '../../../../UI/Spinner/Spinner';\r\nimport ErrorMessage from '../../../../UI/ErrorMessage/ErroMessage';\r\nimport { StyledUl, StyledImg, StyledLi } from './InfoTest.styled';\r\n\r\nimport type { InfoTestBlock } from '../../../../types/types';\r\nimport {\r\n  ContextLanguage,\r\n  ContextProfession,\r\n} from '../../../../components/Context';\r\n\r\nimport clock from \"../../icons/clock.svg\";\r\nimport barChart from \"../../icons/bar-chart.svg\";\r\nimport helpCircle from \"../../icons/help-circle.svg\";\r\n\r\ntype InfoTestProps = {\r\n  isChooseProfession: boolean;\r\n  setChooseProfession: (item: boolean) => void;\r\n};\r\n\r\nconst InfoTest = ({\r\n  isChooseProfession,\r\n  setChooseProfession,\r\n}: InfoTestProps) => {\r\n  const [profession]: [string, (lang: string) => void] =\r\n    useContext(ContextProfession);\r\n  const [lang, setLang]: [string, (lang: string) => void] =\r\n    useContext(ContextLanguage);\r\n  const [quantityThemes, setQuantityThemes] = useState<number>(0);\r\n  const url = `${profession}/questions`;\r\n\r\n  const updateQuantityThemes = (quantity: number) => {\r\n    setQuantityThemes(quantity);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuantityThemes(url, lang).then(updateQuantityThemes);\r\n  }, [profession]);\r\n\r\n  useEffect(() => {\r\n    setChooseProfession(false);\r\n  }, []);\r\n\r\n  const { t } = useTranslation();\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n  const [quantityQuestions, setQuantityQuestions] = useState<number>(0);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n\r\n  const infoTestBlock: InfoTestBlock[] = [\r\n    {\r\n      text: ` ${isChooseProfession ? '~' + quantityQuestions : '_'} ${t(\r\n        'Время',\r\n      )}`,\r\n      srcIcon: clock,\r\n      alt: 'icon of clock',\r\n    },\r\n    {\r\n      text: `${isChooseProfession ? quantityQuestions : '_'} ${t('Вопросов')}`,\r\n      srcIcon: helpCircle,\r\n      alt: 'icon of question in circle',\r\n    },\r\n    {\r\n      text: `${isChooseProfession ? quantityThemes : '_'} ${t('Блока')}`,\r\n      srcIcon: barChart,\r\n      alt: ' icon of bar chart ',\r\n    },\r\n  ];\r\n\r\n  const view = infoTestBlock.map((item, index) => {\r\n    return (\r\n      <StyledLi key={index + 1}>\r\n        <StyledImg src={item.srcIcon} alt={item.alt} />\r\n        <span style={{color: 'black'}}>{item.text}</span>\r\n      </StyledLi>\r\n    );\r\n  });\r\n\r\n  const content = !(isLoading || isError) ? view : null;\r\n  const spinner = isLoading ? (\r\n    <Spinner width={50} height={50} color='#fcfdff' margin='auto' />\r\n  ) : null;\r\n  const error = isError ? <ErrorMessage /> : null;\r\n\r\n  const dataHasLoaded = (numbQuestions) => {\r\n    setIsLoading(false);\r\n    setQuantityQuestions(numbQuestions);\r\n  };\r\n\r\n  const onError = (error) => {\r\n    setIsError(true);\r\n    setIsLoading(false);\r\n    console.error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (profession) {\r\n      const url = `${profession}/questions`;\r\n      getTotalQuestionsNumb(url).then(dataHasLoaded).catch(onError);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [profession]);\r\n\r\n  return (\r\n    <nav>\r\n      <StyledUl>\r\n        {content} {spinner} {error}\r\n      </StyledUl>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default InfoTest;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledDropdownWrapper = styled.section`\r\n  width: 250px;\r\n  height: 45px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    width: 320px;\r\n    height: 56px;\r\n  }\r\n`;\r\nexport { StyledDropdownWrapper };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrowDownLarge(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 9,\n    viewBox: \"0 0 16 9\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L8 8L15 1\",\n    stroke: \"white\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowDownLarge);\nexport default __webpack_public_path__ + \"static/media/arrowDownLarge.5cb9226dd89f16c2e62eb8a7b2afc8b7.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useContext } from 'react';\r\n\r\nimport Dropdown from '../../../UI/Dropdown/Dropdown';\r\nimport { setValueToLocalStorage } from '../../../helpers/setValueToLocalStorage';\r\nimport { ContextProfession } from '../../../components/Context';\r\nimport { StyledDropdownWrapper } from './DropdownProfession.Styled';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport arrowDownLarge from '../../../assets/images/arrowDownLarge.svg';\r\n\r\ntype DropdownProfessionProps = {\r\n  setChooseProfession: (item: boolean) => void;\r\n};\r\n\r\nconst DropdownProfession = ({\r\n  setChooseProfession,\r\n}: DropdownProfessionProps) => {\r\n  const [, setProfession]: [string, (lang: string) => void] =\r\n    useContext(ContextProfession);\r\n  const { t } = useTranslation();\r\n\r\n  const [selected, setSelected] = useState<string>('');\r\n\r\n  const customStyleButton = `\r\n      gap: 10px; \r\n      justify-content: flex-end; \r\n\r\n      @media screen and (min-width: 767.8px) {\r\n        gap: 39px; \r\n        }`;\r\n\r\n  const dataProfessions = {\r\n    [t('Frontend_разработчик')]: 'Frontend',\r\n    [t('Менеджер')]: 'Manager',\r\n  };\r\n  const listProfessions = Object.keys(dataProfessions);\r\n\r\n  const onClickProfession = (item: string) => {\r\n    setValueToLocalStorage('profession', dataProfessions[item]);\r\n    setProfession(dataProfessions[item]);\r\n    setSelected(item);\r\n    setChooseProfession(true)\r\n  };\r\n\r\n  return (\r\n    <StyledDropdownWrapper>\r\n      <Dropdown\r\n        selected={selected || t('направление_теста')}\r\n        data={listProfessions}\r\n        onClickElement={onClickProfession}\r\n        customStyle={customStyleButton}\r\n        srcArrowDown={arrowDownLarge}\r\n      />\r\n    </StyledDropdownWrapper>\r\n  );\r\n};\r\n\r\nexport default DropdownProfession;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledCallToAction = styled.section`\r\n  max-width: 100%;\r\n  background-color: var(--color-call-action);\r\n  padding: 16px;\r\n  margin: 0 0 13px 0;\r\n  border-radius: 7px;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 0 0 32px 0;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 16px 16px 16px 40px;\r\n  }\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n    font: var(--font-title4);\r\n    color: white;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    @media screen and (min-width: 459.8px) {\r\n        font: var(--font-title2);\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  font: var(--font-h2-little);\r\n  color: white;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-h2-large);\r\n  }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    gap: 45px;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledDivWrapper = styled.div`\r\n  width: 250px;\r\n  height: 45px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    height: 56px;\r\n  }\r\n`;\r\nconst StyledDropdownProfessionWrapper = styled.div`\r\n  width: 250px;\r\n  height: 45px;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    width: 320px;\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledCallToAction,\r\n  StyledH1,\r\n  StyledH2,\r\n  StyledDiv,\r\n  StyledDivWrapper,\r\n  StyledDropdownProfessionWrapper,\r\n};\r\n","import CallToAction from './CallToAction/CallToAction';\r\n\r\nexport default CallToAction;\r\n\r\n","import { useContext, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport InfoTest from '../components/InfoTest/InfoTest';\r\nimport LinkBtn from '../../../UI/LinkBtn/LinkBtn';\r\nimport { createIdUser } from '../helpers/createIdUser';\r\nimport { ContextIdUser } from '../../../components/Context';\r\nimport { setValueToLocalStorage } from '../../../helpers/setValueToLocalStorage';\r\nimport DropdownProfession from '../UI/DropdownProfession';\r\nimport {\r\n  StyledCallToAction,\r\n  StyledH1,\r\n  StyledH2,\r\n  StyledDiv,\r\n  StyledDivWrapper,\r\n  StyledDropdownProfessionWrapper,\r\n} from './CallToAction.styled';\r\n\r\ntype CallToActionProps = {\r\n  isChooseProfession: boolean;\r\n  setChooseProfession: (item: boolean) => void;\r\n};\r\n\r\nconst CallToAction = ({\r\n  isChooseProfession,\r\n  setChooseProfession,\r\n}: CallToActionProps) => {\r\n  const { t } = useTranslation();\r\n  const [idUser, setIdUser]: [string, (lang: string) => void] =\r\n    useContext(ContextIdUser);\r\n\r\n  const startTest = () => {\r\n    const id = createIdUser();\r\n    setIdUser(id);\r\n    setValueToLocalStorage('idUser', id);\r\n  };\r\n\r\n  return (\r\n    <StyledCallToAction id='CallToAction'>\r\n      <StyledH1>{t('Тест_для')}</StyledH1>\r\n      <InfoTest\r\n        isChooseProfession={isChooseProfession}\r\n        setChooseProfession={setChooseProfession}\r\n      />\r\n      <StyledH2>{t('Добро_пожаловать')}</StyledH2>\r\n      <StyledH2>{t('Тест_будет')}</StyledH2>\r\n      <StyledDiv>\r\n        <StyledDropdownProfessionWrapper>\r\n          <DropdownProfession setChooseProfession={setChooseProfession} />\r\n        </StyledDropdownProfessionWrapper>\r\n        <StyledDivWrapper>\r\n          <LinkBtn\r\n            pageTo='quiz'\r\n            onClick={startTest}\r\n            text='Начать тест'\r\n            isDisabledBtn={!isChooseProfession}\r\n          ></LinkBtn>\r\n        </StyledDivWrapper>\r\n      </StyledDiv>\r\n    </StyledCallToAction>\r\n  );\r\n};\r\n\r\nexport default CallToAction;\r\n","import { push } from 'firebase/database';\r\nimport { ref } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst createIdUser = (): string => {\r\n\r\n  const pushedRef = push(ref(db, 'users/user'));\r\n\r\n  if (pushedRef && pushedRef.key) {\r\n    const idUser = pushedRef.key;\r\n    return idUser;\r\n  } else {\r\n    return ''\r\n  }\r\n};\r\n\r\nexport {createIdUser};\r\n","import React, { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport InfoBlock from '../InfoBlock/InfoBlock';\r\nimport { convertJSONToText } from '../../helpers/convertJSONToText';\r\n\r\nimport type { InfoBlocks, JSONText } from '../../types/types';\r\n\r\nconst GeneralInfoTest = () => {\r\n  const { t } = useTranslation();\r\n  const generalInfo: InfoBlocks[] = [\r\n    {\r\n      title: t('Что_получите'),\r\n      id: 'generalInfoTestText',\r\n      text: t('Благодаря_вопросам'),\r\n    },\r\n    {\r\n      title: t('Как_проходить'),\r\n      text: t('Пройти_тест'),\r\n    },\r\n    {\r\n      title: t('Результаты_теста'),\r\n      text: t('После_прохождения'),\r\n    },\r\n  ];\r\n  const blocksHomepage = generalInfo.map((block, index) => (\r\n    <InfoBlock\r\n      key={index + 1}\r\n      title={block.title}\r\n      text={block.text}\r\n      idForText={block.id}\r\n    />\r\n  ));\r\n\r\n  return <section>{blocksHomepage}</section>;\r\n};\r\n\r\nexport default GeneralInfoTest;\r\n","import Container from '../../components/Container/Container';\r\nimport CallToAction from '../../modules/CallToAction/index';\r\nimport Footer from '../../components/Footer/Footer';\r\nimport { StyledMain } from '../../styles/Main.Styled';\r\nimport GeneralInfoTest from '../../components/GeneralInfoTest/GeneralInfoTest';\r\n\r\ntype HomepageProps = {\r\n  isChooseProfession: boolean\r\n  setChooseProfession: (item: boolean) => void;\r\n};\r\n\r\nconst Homepage = ({\r\n  isChooseProfession,\r\n  setChooseProfession,\r\n}: HomepageProps) => {\r\n\r\n  return (\r\n    <>\r\n        <Container style={{flex: '1 1 auto'}}>\r\n          <StyledMain>\r\n            <CallToAction\r\n            isChooseProfession={isChooseProfession}\r\n            setChooseProfession={setChooseProfession}\r\n          />\r\n          <GeneralInfoTest />\r\n          </StyledMain>\r\n        </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n  width: 100%;\r\n  \r\n`;\r\n"],"names":["StyleArticleDropdown","styled","StyledButton","StyledSpan","props","customStyle","StyledSpanList","StyledImgLeft","StyledImgRight","StyledUl","StyledLi","data","selected","onClickElement","srcImg","srcArrowDown","isActive","setActive","useState","toggleList","dropdownElements","Array","isArray","map","item","index","tabIndex","onClick","style","display","alignItems","gap","justifyContent","Object","entries","shotLang","fullLang","fontSize","fontWeight","toUpperCase","transformData","useEffect","handleClickOutside","e","target","closest","document","addEventListener","removeEventListener","src","alt","className","CSSTransition","in","timeout","classNames","StyledDiv","Error","color","text","pageTo","id","isDisabledBtn","t","useTranslation","to","disabled","getDataFromDB","async","Promise","resolve","reject","onValue","ref","db","url","snapshot","value","val","getTotalQuestionsNumb","response","length","console","error","ContainerStyled","children","StyledFeatureArticle","StyledSummary","StyledP","StyledDivWrapper","title","idForText","open","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","setValueToLocalStorage","key","localStorage","setItem","DOMException","code","SECURITY_ERR","getQuantityThemes","lang","question","themes","Set","themesDb","values","theme","add","size","StyledImg","isChooseProfession","setChooseProfession","profession","useContext","ContextProfession","setLang","ContextLanguage","quantityThemes","setQuantityThemes","updateQuantityThemes","quantity","then","isLoading","setIsLoading","quantityQuestions","setQuantityQuestions","isError","setIsError","view","srcIcon","clock","helpCircle","barChart","content","spinner","Spinner","width","height","margin","dataHasLoaded","numbQuestions","onError","catch","StyledDropdownWrapper","setProfession","setSelected","dataProfessions","listProfessions","keys","Dropdown","arrowDownLarge","StyledCallToAction","StyledH1","StyledH2","StyledDropdownProfessionWrapper","idUser","setIdUser","ContextIdUser","LinkBtn","pushedRef","push","createIdUser","blocksHomepage","block","InfoBlock","Container","flex","StyledMain"],"sourceRoot":""}