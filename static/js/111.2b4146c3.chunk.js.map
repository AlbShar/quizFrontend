{"version":3,"file":"static/js/111.2b4146c3.chunk.js","mappings":"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","sources":["UI/button/button.Styled.ts","components/main/main.Styled.ts","components/main/main.tsx","UI/button/button.tsx","modules/userForm/api/sendEmail.ts","modules/userForm/UI/styles/input.Styled.ts","modules/userForm/UI/input.tsx","modules/userForm/hooks/useHandleInputs.ts","modules/userForm/helpers/validate.ts","modules/userForm/userForm/userForm.Styled.ts","modules/userForm/index.ts","modules/userForm/userForm/userForm.tsx","pages/feedback/feedback.Styled.ts","pages/feedback/index.ts","pages/feedback/feedback.tsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 8px 33px;\r\n  background-color: #585aff;\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n  border-radius: 7px;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 80px;\r\n  }\r\n`;\r\n\r\nexport { StyledButton };\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n  width: 100%;\r\n  background-color: var(--color-white);\r\n`;\r\n","import { ReactNode, CSSProperties } from 'react';\r\n\r\nimport { StyledMain } from './main.Styled';\r\n\r\ntype MainProps = {\r\n  children: ReactNode;\r\n  customStyle?: CSSProperties\r\n};\r\n\r\nexport const Main = ({ children, customStyle }: MainProps) => {\r\n  return <StyledMain style={customStyle}>{children}</StyledMain>;\r\n};\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { StyledButton } from 'UI/button/button.Styled';\r\n\r\ntype ButtonProps = {\r\n  text: string;\r\n  disabled: boolean;\r\n};\r\nexport const Button = ({ text, disabled }: ButtonProps): JSX.Element => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <StyledButton type='submit' disabled={disabled}>\r\n      {t(text)}\r\n    </StyledButton>\r\n  );\r\n};\r\n","import emailjs from '@emailjs/browser';\r\n\r\nconst YOUR_SERVICE_ID = process.env.REACT_APP_EMAILJS_SERVICE_ID;\r\nconst YOUR_TEMPLATE_ID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;\r\nconst YOUR_PUBLIC_KEY = process.env.REACT_APP_EMAILJS_PUBLIC_KEY;\r\n\r\ntype TValues = {\r\n  [key in string]: string;\r\n};\r\n\r\ntype TResponse = {\r\n  status: number;\r\n  text: string;\r\n};\r\n\r\nconst sendEmailApi = async (values: TValues): Promise<boolean> => {\r\n  try {\r\n    if (YOUR_SERVICE_ID && YOUR_TEMPLATE_ID) {\r\n      const response: TResponse = await emailjs.send(\r\n        YOUR_SERVICE_ID,\r\n        YOUR_TEMPLATE_ID,\r\n        values,\r\n        YOUR_PUBLIC_KEY,\r\n      );\r\n\r\n      if (response.text === 'OK') {\r\n        return true;\r\n      } else {\r\n        throw new Error(\r\n          `EmailJSResponse has status - ${response.status} and text - ${response.text}`,\r\n        );\r\n      }\r\n    } else {\r\n      throw new Error(`Check values of API KEYS in EMAILJS`);\r\n    }\r\n  } catch (e: any) {\r\n    if (e instanceof Error) {\r\n      console.error(`There is an error in sendEmailApi file - ${e}`);\r\n    } else {\r\n      console.error('Unexpected error', e);\r\n    }\r\n\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default sendEmailApi;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLabel = styled.label`\r\n  position: absolute;\r\n  top: -10px;\r\n  left: 16px;\r\n  z-index: 2;\r\n  background-color: white;\r\n  color: #81868c;\r\n`;\r\n\r\nexport const StyledArticle = styled.article`\r\n  position: relative;\r\n  margin: 0 0 30px 0;\r\n`;\r\n","import { Field, ErrorMessage } from 'formik';\r\n\r\nimport { StyledArticle, StyledLabel } from './styles/input.Styled';\r\nimport './styles/input.style.css';\r\n\r\nimport type { TDataInput } from '../types';\r\n\r\ntype TInput = TDataInput & { setRef: (elem: HTMLInputElement) => void };\r\n\r\nconst Input = ({ setRef, name, type, placeholder, text }: TInput) => {\r\n  return (\r\n    <StyledArticle>\r\n      <StyledLabel htmlFor='name'>{text}</StyledLabel>\r\n      <Field\r\n        type={type}\r\n        name={name}\r\n        className='input'\r\n        placeholder={placeholder}\r\n        innerRef={setRef}\r\n      />\r\n      <ErrorMessage className='error' name={name} component='div' />\r\n    </StyledArticle>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useHandleInputs = () => {\r\n  const refsInputs: HTMLInputElement[] = [];\r\n  const setRef = (elem: HTMLInputElement) => {\r\n    refsInputs.push(elem as HTMLInputElement);\r\n  };\r\n  const [isSuccessSendingEmail, setSuccessSendingEmail] = useState<\r\n    boolean | null\r\n  >(null);\r\n\r\n  const onFocusFirstInput = () => {\r\n    refsInputs[0].focus();\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFocusFirstInput();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timerId = setTimeout(() => setSuccessSendingEmail(null), 7000);\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [isSuccessSendingEmail]);\r\n\r\n  return { isSuccessSendingEmail, setSuccessSendingEmail, setRef };\r\n};\r\n\r\nexport default useHandleInputs;\r\n","import type { TErrors } from '../types';\r\n\r\nexport const validate = ({ name, email, text }) => {\r\n  const errors: TErrors = {};\r\n  if (!name) {\r\n    errors.name = 'Введите имя';\r\n  } else if (name.length < 2) {\r\n    errors.name = 'Имя не должно содержать меньше 2-х символов';\r\n  } else if (name.length > 30) {\r\n    errors.name = 'Максимальная длина - 30 символов';\r\n  }\r\n\r\n  if (!text) {\r\n    errors.text = 'Введите текст сообщения';\r\n  }\r\n\r\n  if (!email) {\r\n    errors.email = 'Введите свою почту';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email)) {\r\n    errors.email = 'Введите корректный E-mail';\r\n  }\r\n  return errors;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDivSuccess = styled.div`\r\n  color: green;\r\n  margin: 10px 0;\r\n  font: var(--font-text7);\r\n`;\r\n\r\nexport const StyledDivError = styled.div`\r\n  font: var(--font-text7);\r\n  color: red;\r\n`;\r\n\r\nexport const StyledArticle = styled.article`\r\n  position: relative;\r\n  margin: 0 0 30px 0;\r\n`;\r\n","import UserForm from './userForm/userForm';\r\n\r\nexport default UserForm;\r\n","import { useTranslation } from 'react-i18next';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport { Button } from 'UI/button';\r\n\r\nimport sendEmailApi from '../api/sendEmail';\r\nimport Input from '../UI/input';\r\nimport useHandleInputs from '../hooks/useHandleInputs';\r\nimport { validate } from '../helpers/validate';\r\n\r\nimport {\r\n  StyledArticle,\r\n  StyledDivSuccess,\r\n  StyledDivError,\r\n} from './userForm.Styled';\r\n\r\nimport type { TDataInput } from '../types';\r\n\r\nconst UserForm = () => {\r\n  const { t } = useTranslation('', {\r\n    keyPrefix: 'modules.userForm',\r\n  });\r\n  const { isSuccessSendingEmail, setSuccessSendingEmail, setRef } =\r\n    useHandleInputs();\r\n\r\n  const dataInputs: TDataInput[] = [\r\n    {\r\n      text: t('name'),\r\n      type: 'name',\r\n      placeholder: t('placeholderName') || 'placeholder',\r\n      name: 'name',\r\n    },\r\n    {\r\n      text: 'Email',\r\n      type: 'email',\r\n      placeholder: t('placeholderName') || 'placeholder',\r\n      name: 'email',\r\n    },\r\n    {\r\n      text: t('message'),\r\n      type: 'textarea',\r\n      placeholder: t('placeholderMessage') || 'placeholder',\r\n      name: 'text',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: '', email: '', text: '' }}\r\n      validate={validate}\r\n      onSubmit={async (values, { resetForm, setSubmitting }) => {\r\n        const isDataSent: boolean = await sendEmailApi(values);\r\n\r\n        if (isDataSent) {\r\n          resetForm();\r\n          setSubmitting(false);\r\n          setSuccessSendingEmail(true);\r\n        } else {\r\n          setSuccessSendingEmail(false);\r\n        }\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          {dataInputs.map((input, index) => (\r\n            <Input {...input} key={index} setRef={setRef} />\r\n          ))}\r\n          <StyledArticle>\r\n            {isSuccessSendingEmail === true ? (\r\n              <StyledDivSuccess>\r\n                Поздравляю, письмо отправлено!\r\n              </StyledDivSuccess>\r\n            ) : isSuccessSendingEmail === false ? (\r\n              <StyledDivError>\r\n                Письмо не удалось отправить! Повторите попытку чуть позже\r\n              </StyledDivError>\r\n            ) : null}\r\n          </StyledArticle>\r\n          <Button text={t('btnText')} disabled={isSubmitting} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledH1 = styled.h1`\r\n  font: var(--font-title4);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 20px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title2);\r\n  }\r\n`;\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: white;\r\n  padding: 18px 8px 16px 8px;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    padding: 40px;\r\n  }\r\n`;\r\n\r\nconst StyledP = styled.p`\r\n  font: var(--font-little-text-regular);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 0 0 20px 0;\r\n  text-align: left;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-text-regular);\r\n    margin: 16px 0;\r\n  }\r\n`;\r\n\r\nexport { StyledH1, StyledSection, StyledP };\r\n","import Feedback from './feedback';\r\n\r\nexport default Feedback;\r\n","import { useTranslation } from 'react-i18next';\r\n\r\nimport { Container } from 'components/container';\r\nimport UserForm from 'modules/userForm';\r\nimport { Main } from 'components/main';\r\n\r\nimport { StyledH1, StyledSection, StyledP } from './feedback.Styled';\r\n\r\nconst Feedback = () => {\r\n  const { t } = useTranslation('', {\r\n    keyPrefix: 'pages.feedback',\r\n  });\r\n  return (\r\n    <Main>\r\n      <Container>\r\n        <StyledSection>\r\n          <article>\r\n            <StyledH1>{t('title')}</StyledH1>\r\n            <StyledP>{t('text')}</StyledP>\r\n          </article>\r\n          <article>\r\n            <UserForm />\r\n          </article>\r\n        </StyledSection>\r\n      </Container>\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n"],"names":["StyledButton","styled","StyledMain","Main","children","customStyle","style","Button","text","disabled","t","useTranslation","S","type","YOUR_SERVICE_ID","process","YOUR_TEMPLATE_ID","async","response","emailjs","values","Error","status","e","console","error","StyledLabel","StyledArticle","setRef","name","placeholder","htmlFor","className","innerRef","component","refsInputs","isSuccessSendingEmail","setSuccessSendingEmail","useState","useEffect","focus","timerId","setTimeout","clearTimeout","elem","push","validate","email","errors","length","test","StyledDivSuccess","StyledDivError","keyPrefix","useHandleInputs","dataInputs","initialValues","onSubmit","resetForm","setSubmitting","sendEmailApi","isSubmitting","map","input","index","key","StyledH1","StyledSection","StyledP"],"sourceRoot":""}