{"version":3,"file":"static/js/611.a28d0e1c.chunk.js","mappings":"0KAEA,MAAMA,EAAeC,EAAAA,GAAAA,MAAc;;;;;;;;;;;;;;;;;;GAoBVA,EAAAA,EAAAA,IAAOD,EAAc;;;;EAMrBC,EAAAA,GAAAA,MAAc;;;;;;;;EAUjBA,EAAAA,GAAAA,OAAe;;;;;;;;;;;;;EAenBA,EAAAA,GAAAA,GAAW;;;EAKVA,EAAAA,GAAAA,IAAY;;;;eC3C/B,MAgBA,EAhB6B,IAMtB,IANuB,KAC5BC,EAAI,OACJC,EAAM,QACNC,EAAO,GACPC,EAAE,cACFC,GAAgB,GACjB,EACC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,KAEd,OACE,SAAC,KAAI,CAACC,UAAU,YAAYC,GAAIP,EAAQC,QAASA,EAASC,GAAIA,EAAG,UAC/D,SAACL,EAAY,CAACW,SAAUL,EAAc,SAAEC,EAAEL,MACrC,C,yDCrBX,MAAMU,EAAwBC,UAC5B,IACE,aAAa,IAAIC,SAAgB,SAAUC,EAASC,IAClDC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,cAAeC,IAC7B,MAAMC,EAA6BC,OAAOC,QACxCH,EAASI,OACTC,OACFV,EAAQM,EAAmB,GAE/B,GAGF,CAFE,MAAOK,GACPC,QAAQD,MAAMA,EAChB,E,0CChBF,MAAME,E,QAAkB3B,GAAAA,GAAW;;;;;;;;eCMnC,MAIA,EAJkC,IAAmB,IAAlB,SAAE4B,GAAU,EAC7C,OAAO,SAACD,EAAe,UAAEC,GAA2B,C,yDCNtD,MAAMC,EAAiB,CACnBC,OAAQC,CAAAA,SAAAA,aAAAA,WAAAA,gBAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,kBACpBC,WAAY,qCACZC,YACE,4EACFC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,6CAGHC,GAAMC,EAAAA,EAAAA,IAAcX,GAG1B,GAFWY,EAAAA,EAAAA,IAAYF,E,kCCfzB,MAAMG,EAA+BC,IACnC,MAAMC,EAAQC,aAAaC,QAAQH,GACnC,GAAc,OAAVC,QAA4BG,IAAVH,EACpB,MAAM,IAAII,MAAO,4BAA2BL,MAE9C,IACE,MAAQ,GAAEC,GAOZ,CANE,MAAOK,GACP,MAAIA,aAAaD,MACT,IAAIA,MAAO,8BAA6BL,OAASM,EAAEC,WAEnD,IAAIF,MAAO,yBAAwBC,IAE7C,E,wGCXF,MAAME,EAAWnD,EAAAA,GAAAA,EAAU;;;;;;;;;;;;;;;;;;;;;;;;eCS3B,MAwBA,EAxB4B,IAKrB,IALsB,SAC3B4B,EAAQ,MACRwB,EAAK,OACLC,EAAM,kBACNC,GACD,EAOC,OACE,SAACH,EAAQ,CACPlC,IAAKoC,EACLE,SAAU,EACVpD,QAAS,IAAMmD,EAAkBF,GACjCI,UAX8DP,IAClD,UAAVA,EAAEN,KAA6B,MAAVM,EAAEN,MACzBM,EAAEQ,iBACFH,EAAkBF,GACpB,EAOiC,SAE9BxB,GACQ,EC9BF8B,GAAsBC,EAAAA,EAAAA,eACjC,MAgBF,EAR8B,IAA0B,IAAzB,SAAE/B,EAAQ,MAAEgB,GAAO,EAChD,OACE,SAACc,EAAoBE,SAAQ,CAAChB,MAAOA,EAAM,SACxChB,GAC4B,E,cCdnC,MAAMiC,EAAuBC,IAC3BA,EAAKC,SAASC,IACZA,EAAOC,gBAAgB,SACvBD,EAAOC,gBAAgB,kBAAkB,GACzC,ECFEC,EAAgBlE,EAAAA,GAAAA,OAAe;;;;;;;;;;;;EAc/BmE,EAAWnE,EAAAA,GAAAA,EAAU;;;;;;ECd3B,ECmBkC,IAAiC,IAAhC,iBAAEoE,EAAgB,KAAEC,GAAM,EAC3D,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,CACzCC,QAAS,GACTC,SAAS,EACTjD,OAAO,IAEHkD,GAAeC,EAAAA,EAAAA,YAAWlB,GAC1BmB,EAAsBF,EAAeA,EAAa,GAAK,EACvDG,EAA8B,GAC9BC,EAAgBC,IACpBF,EAAWG,KAAKD,EAAsB,EAGlC1B,EAAqBlD,MAEc0E,EAAWI,QAC/CC,GAAeA,EAAWC,QAAQC,aAEU7D,QAE7C4C,IAGFP,EAAoBiB,GACpBA,EAAW1E,GAAIkF,aAAa,QAVR,wCAWpBR,EAAW1E,GAAIkF,aAAa,kBAAmB,QAC/CR,EAAW1E,GAAImF,OAAO,EAGlBC,EAAoBC,IACxB,MAAMhB,EAAUpD,OAAOC,QAAQmE,GAAUC,KAAKC,GAASA,EAAKC,KAAK,QAC7DC,MAAMC,QAAQrB,IAChBF,GAAUD,IAAK,IACVA,EACHG,QAASA,EACTC,SAAS,KAEb,EAGIqB,EAAezB,EAAMG,QAAQiB,KAAI,CAAC1B,EAAQZ,KAC9C,SAAC,EAAM,CACLA,MAAOA,EACPC,OAAQ0B,EACRzB,kBAAmBA,EAAkB,SAGpCU,GAFIZ,EAAQ,KAMX4C,EAAU1B,EAAMI,SACpB,SAACuB,EAAA,EAAO,CAACC,MAAO,GAAIC,OAAQ,GAAIC,MAAM,UAAUC,OAAO,KACrD,KAEE5E,EAAQ6C,EAAM7C,MADC,SACsB,KAErC6E,EAAYhC,EAAMI,SAAWJ,EAAM7C,MAIrC,MAHF,SAACyC,EAAa,CAAC9D,GAAG,aAAY,UAC5B,SAAC+D,EAAQ,UAAE4B,MAITQ,EAAiB,KACrBhC,GAAUD,IAAK,IAAWA,EAAO7C,OAAO,EAAMiD,SAAS,KAAS,EAYlE,OATA8B,EAAAA,EAAAA,YAAU,KACR3C,EAAoBiB,GAChBD,GCrFajE,OAAOiE,EAA6BR,UAE1C,IAAIxD,SAAQ,SAAUC,EAASC,IAC1CC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,kBAAiB2D,KAAuBR,MAChDlD,IACKA,EAASI,MACXT,EAAQK,EAASI,OAEjBR,GACF,GAGN,IDyEI0F,CAAa5B,EAAqBR,GAC/BqC,KAAKlB,GACLmB,MAAMJ,EACX,GACC,CAAC1B,EAAqBR,KAGvB,gCACG,IACA2B,EAAO,IAAGM,EAAO,IAAG7E,IACpB,EEhGDmF,EAAYhG,MAAOiE,EAA6BR,UACvC,IAAIxD,SAAgB,SAAUC,EAASC,IAClDC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,qBAAoB2D,KAAuBR,UACnDlD,IACC,MAAM0F,EAAS1F,EAASI,MACxBT,EAAQ+F,EAAO,GAGrB,ICTIC,EAAkBlG,MAAOiE,EAA6BR,UAC7C,IAAIxD,SAAgB,SAAUC,EAASC,IAClDC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,qBAAoB2D,KAAuBR,WACnDlD,IACC,MAAM4F,EAAe5F,EAASI,MAC9BT,EAAQiG,EAAa,GAG3B,ICZIC,EAAwBhH,EAAAA,GAAAA,OAAe;;EAIvCiH,EAAWjH,EAAAA,GAAAA,EAAU;;;;;;;;;EAWrBkH,EAAgBlH,EAAAA,GAAAA,OAAe;;;;;;;;;;;;;;;;EAsB/BmH,EAAYnH,EAAAA,GAAAA,GAAgB;;;;IAI9B,YAAoC,IAA1B,oBAAE6E,GAAqB,EACjC,GAA4B,KAAxBA,EACF,MAAQ,gLAUZ;ECrDF,ECuBwD,IAAa,IAAZ,KAACR,GAAK,EAC7D,MAAMM,GAAeC,EAAAA,EAAAA,YAAWlB,GAC1BmB,EAAsBF,EAAeA,EAAa,GAAK,GACtDL,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,CACzC4C,SAAU,GACV1C,SAAS,EACTmC,OAAQ,GACRpF,OAAO,IAGHA,EAAQ6C,EAAM7C,MADC,UACsB,KACrCuE,EAAU1B,EAAMI,SACpB,SAACuB,EAAA,EAAO,CAACC,MAAO,GAAIC,OAAQ,GAAIC,MAAM,UAAUC,OAAO,MACrD,KAkDEC,EAAYhC,EAAMI,SAAWJ,EAAM7C,MAAkB,KA/CpD6C,EAAMuC,QAUT,UAACG,EAAqB,YACpB,SAACC,EAAQ,CAAC7G,GAAG,gBAAgBmD,SAAU,EAAE,SACtCe,EAAM8C,YAET,UAACF,EAAa,YACZ,mBACEG,KAAK,YACLC,MAAM,qBACNC,OAAQjD,EAAMuC,OACdX,MAAM,MACNC,OAAO,UAET,mBACEkB,KAAK,YACLC,MAAM,qBACNC,OAAQjD,EAAMuC,OACdX,MAAM,MACNC,OAAO,UAET,mBACEkB,KAAK,YACLC,MAAM,qBACNC,OAAQjD,EAAMuC,OACdX,MAAM,OACNC,OAAO,UAET,SAACgB,EAAS,CACRK,IAAKlD,EAAMuC,OACXX,MAAM,OACNC,OAAO,OACPsB,IAAI,8CAtCR,SAACT,EAAqB,WACpB,SAACC,EAAQ,CAAC7G,GAAG,gBAAgBmD,SAAU,EAAE,SACtCe,EAAM8C,aA6CXM,EAAcC,IAIlB,MAAMC,EAAsB,CAAEJ,IAAK,GAAIJ,SAAU,IACjDO,EAAO5D,SAAS4B,IACVA,EAAK/C,MAAMiF,WAAW,UACxBD,EAASJ,IAAM7B,EAAK/C,OAEH,OAAf+C,EAAK/C,QACPgF,EAASJ,IAAM,IAES,kBAAf7B,EAAK/C,QACdgF,EAASR,SAAWzB,EAAK/C,MAC3B,IAGF2B,GAAUD,IAAK,IACVA,EACHI,SAAS,EACT0C,SAAUQ,EAASR,SACnBP,OAAQe,EAASJ,OAChB,EAGCjB,EAAkB9E,IAEtB,MADA8C,GAAUD,IAAK,IAAWA,EAAOI,SAAS,EAAOjD,OAAO,MAClD,IAAIuB,MAAMvB,EAAM,EAaxB,OAVA+E,EAAAA,EAAAA,YAAU,KAER3F,QAAQiH,WAAW,CACjBlB,EAAU/B,EAAqBR,GAC/ByC,EAAgBjC,EAAqBR,KAEpCqC,KAAKgB,GACLf,MAAMJ,EAAe,GACvB,CAAC1B,EAAqBR,KAGvB,gCACG2B,EAAO,IAAGM,EAAO,IAAG7E,IACpB,E,cChIP,MAAMsG,EAAmBnH,MAAOiE,EAA6BR,KAC3D,IACE,aAAa,IAAIxD,SAAQ,SAAUC,EAASC,IAC1CC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,qBAAoB2D,KAAuBR,YACnDlD,IACC,MAAM6G,EAAe7G,EAASI,MAC9BT,EAAQkH,EAAa,GAG3B,GAGF,CAFE,MAAOvG,GACPC,QAAQD,MAAMA,EAChB,G,cChBF,MAAMwG,EAAWjI,EAAAA,GAAAA,EAAU;;;;;;;;;;;EAarBkI,EAA6BlI,EAAAA,GAAAA,IAAY;;;;EAMzCmI,GAA0BnI,EAAAA,EAAAA,IAAOkI,EAA4B;;;;;;;;ECnBnE,ECsBgE,IAAa,IAAZ,KAAC7D,GAAK,EACrE,MAAM,EAAE/D,IAAMC,EAAAA,EAAAA,KACRoE,GACJC,EAAAA,EAAAA,YAAWlB,GACPmB,EAAsBF,EAAeA,EAAa,GAAK,GAEtDL,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,CACzCE,SAAS,EACT0D,cAAe,KACfC,oBAAqB,IAgBjBrC,EAAU1B,EAAMI,SACpB,SAACuB,EAAA,EAAO,CAACC,MAAO,GAAIC,OAAQ,GAAIC,MAAM,UAAUC,OAAO,KACrD,KACEC,EAAWhC,EAAMI,QAAmB,MAdtC,UAACuD,EAAQ,CAAC7H,GAAG,eAAc,UACxBE,EAAE,wCAAS,IAAGuE,GACf,SAACqD,EAA0B,CAAC9H,GAAG,wBAAwBmD,SAAU,EAAE,SAC/D,KAAIe,EAAM+D,yBAEd,SAACF,EAAuB,CAAC/H,GAAG,gBAAe,SACxCkE,EAAM8D,mBAUTV,EAAcY,IAMlB,MAAMC,EAAqB,CACzBC,MAAO,KACPH,oBAAqB,MAGvBC,EAAIvE,SAAS4D,IACiB,kBAAjBA,EAAO/E,MAChB2F,EAAMF,oBAAsBV,EAAO/E,MACF,kBAAjB+E,EAAO/E,QACvB2F,EAAMC,MAAQb,EAAO/E,MACvB,IAGF2B,EAAS,CACPG,SAAS,EACT0D,cAAgB,GAAEG,EAAMC,QACxBH,oBAAqBE,EAAMF,sBAG7B,IAAK,MAAM1F,KAAO4F,EAChB,IAAKA,EAAM5F,GACT,MAAM,IAAIK,MAAO,YAAWL,QAAU4F,EAAM5F,uBAEhD,EAUF,OAPA6D,EAAAA,EAAAA,YAAU,KACR3F,QAAQiH,WAAW,CACjBC,EAAiBlD,EAAqBR,IACtC1D,EAAAA,EAAAA,OACC+F,KAAKgB,EAAW,GAClB,CAAC7C,EAAqBR,KAGvB,gCACG2B,EACAM,IACA,ECjGP,IAAImC,EAAiB,ECErB,MAAM1I,EAAeC,EAAAA,GAAAA,MAAc;;;;;;;;;;;;;ECE7B0I,EAAgB1I,EAAAA,GAAAA,GAAW;;;;;;;;;;EAY3B2I,GAAoB3I,EAAAA,EAAAA,IAAOD,EAAc;;;;;;;EASzC6I,EAAmB5I,EAAAA,GAAAA,GAAW;;;;;;;;;;;;;EAe9BiI,EAAWjI,EAAAA,GAAAA,EAAU;;;EAKrB6I,EAAa7I,EAAAA,GAAAA,IAAY;;EAIzB8I,EAAkB9I,EAAAA,GAAAA,IAAY;;;;;ECbpC,EApB+B,IAA0C,IAAzC,MAAE+I,EAAK,SAAEC,EAAQ,eAAEC,GAAgB,EACjE,OACE,SAACP,EAAa,CAACtI,GAAG,eAAc,UAC9B,UAACwI,EAAgB,YACf,SAAC,EAAQ,CAACpI,UAAU,sBAAqB,SAAEuI,KAC3C,SAACD,EAAe,CACdtI,UAAU,sBACVL,QAAS8I,EAAe,qBAI1B,SAACJ,EAAU,CAACrI,UAAU,qBAAoB,SAAEwI,KAC5C,SAACL,EAAiB,CAACxI,QAAS8I,EAAe,8EAI/B,EC5BpB,EAJqBC,GACS,IAApB,GAAEA,IAAO1H,OAAgB,IAAG0H,IAAU,GAAEA,I,cCKlD,MAcA,EAdgC,IAAmB,IAAlB,SAAEtH,GAAU,EAC3C,MAAMuH,EAAYC,SAASC,cAAc,WACnCC,EAAOF,SAASG,cAAc,SASpC,OARI,OAAJD,QAAI,IAAJA,GAAAA,EAAME,OAAOL,IAEb3C,EAAAA,EAAAA,YAAU,IACD,KACL2C,EAAUM,QAAQ,IAIfC,EAAAA,aAAsB9H,EAAUuH,EAAU,ECf7CQ,EAAiB3J,EAAAA,GAAAA,GAAW;;;;;;;;;;;EAa5B4J,EAAoB5J,EAAAA,GAAAA,MAAc;;;;;;;;;;;;;;;;ECXxC,ECakB,KAChB,MAAM,EAAEM,IAAMC,EAAAA,EAAAA,OACP,WAAEsJ,EAAU,QAAEC,EAAO,SAAEC,GAAYxF,IACxCC,EAAAA,EAAAA,UAAiB,CACfsF,SAAS,EACTD,YAAY,EACZE,SAAU,IAERC,GAAWC,EAAAA,EAAAA,QAAuB,MAMlCC,EADkB,CAAE,GAHJC,EAAYC,KAAKC,MAAMN,EAAW,MAAQ,OAGzB,GAFfI,EAAYC,KAAKC,MAAMN,EAAW,IAAM,OACxCI,EAAYC,KAAKC,MAAMN,EAAW,MAExBrE,KAAI,CAAC4E,EAAMlH,KAC3C,0BAAuBkH,GAAZlH,EAAQ,KAEfmH,EAAajK,EAAE,0FACfkK,EAAgBlK,EAAE,0FAmCxB,OApBAkG,EAAAA,EAAAA,YAAU,KACN,MAIIiE,EAAUC,YAAW,KAHzBb,GAActF,GAAUD,IAAK,IAAWA,EAAOyF,SAAUA,EAAW,KAIxD,GACX,KAEH,MAAO,KCvDaO,KACtB,IACE,MAAMK,EAAS9H,aAAaC,QAAQ,UAC9B8H,GAAuB3J,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,aAAYyJ,eAClDE,EAAAA,EAAAA,IAAOD,EAAsB,CAC3BN,QAIJ,CAFE,MAAO7I,GACPC,QAAQD,MAAMA,EAChB,GDkDIqJ,CAAef,GACfgB,aAAaN,EAAQ,CACtB,GACA,CAACV,EAAUF,KAKZ,UAACF,EAAc,CAAC1I,IAAK+I,EAAS,WAC5B,0BAAOE,IACNJ,IACC,SAAC,EAAM,WACL,SAAC,EAAK,CACJf,MAAOwB,EACPvB,SAAUwB,EACVvB,eArCW,KACnB1E,GAAUD,IAAK,IAAWA,EAAOuF,YAAY,EAAMC,SAAS,KAAS,OAwCnE,SAACF,EAAiB,CAACzJ,QArCO,KAP5BoE,GAAUD,IAAK,IAAWA,EAAOuF,YAAY,EAAOC,SAAS,MRnC/DrB,GQ4C0B,EAmC2B,SAC9CnI,EAAE,sCAEU,EEnFd,MAAM0K,EAAqBhL,EAAAA,GAAAA,GAAW;;;;;;ECA7C,ECOkC,IAAkB,IAAjB,QAAEiL,GAAS,EAC5C,MAAMtG,GACJC,EAAAA,EAAAA,YAAWlB,GACPmB,EAAsBF,EAAeA,EAAa,GAAK,EACvDuG,GAAsBjB,EAAAA,EAAAA,QAAuB,MAMnD,OAJAzD,EAAAA,EAAAA,YAAU,MCNZ5F,eAAiC,GAIZ,IAJY,oBAC/BiE,EAAmB,QACnBoG,EAAO,oBACPC,GACgB,EAChB,IACE,MAAM9J,QACET,EAAAA,EAAAA,KAEFwK,EAAcF,EAAQG,QACtBC,EAAmBH,EAAoBE,QAC7C,GAAID,GAAe/J,GAAsBiK,EAAkB,CACzD,MAIMC,GAHJH,EAAYI,YACZC,SAASC,iBAAiBN,GAAaO,cACvCF,SAASC,iBAAiBN,GAAaQ,cACCvK,EAC1CiK,EAAiBO,MAAM1F,MACrBrB,EAAsByG,EADQ,IAGlC,CAOF,CANE,MAAO7J,GACP,MAAIA,aAAiBuB,MACb,IAAIA,MAAO,GAAEvB,EAAMyB,WAEnB,IAAIF,MAAO,yBAAwBvB,IAE7C,CACF,CDrBIoK,CAAkB,CAAEhH,sBAAqBoG,UAASC,uBAAsB,KAGnE,SAACF,EAAkB,CAAC/J,IAAKiK,GAA0C,E,wBEV5E,MCPMY,EAAmB9L,EAAAA,GAAAA,MAAc;;;;;;;;EAyBjCmH,GAfgBnH,EAAAA,GAAAA,OAAe;;;;;;;;;;;;;EAenBA,EAAAA,GAAAA,GAAW;;;GAKvB6I,EAAa7I,EAAAA,GAAAA,IAAY;;;;ECS/B,GA9B8B,IAA2B,IAA1B,iBAAEoE,GAAkB,GAC5CS,EAAqBkH,IAA0BnH,EAAAA,EAAAA,YAClDlB,IAEG,CAAC,EAAG,QAWT,OACE,gCAC6B,IAAxBmB,KACD,UAACiH,EAAgB,CAAC1L,GAAG,UAAUD,QAbb8C,IACtB8I,IAAyBlH,GACzBT,IFT4B,KAIR,IAJS,OAC/BuG,EAAM,oBACN9F,EAAmB,gBACnBmH,GACgB,EAChB,MAAMC,EAAS,aAAYtB,mBAAwB9F,IACnD,IAAIqH,EAAe,GACnB,KACElL,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI+K,IACP9K,IACCuJ,YAAW,KACTtB,SACG+C,iBAAgCH,GAChCjI,SAASoB,IACR+G,EAAe/K,EAASI,MAAM6K,WAC1BjH,EAAWkH,cAAgBH,IAC7B/G,EAAWyG,MAAMU,OAAS,+BAC1BnH,EAAWG,aAAa,kBAAmB,QAC7C,GACA,GACH,EAAE,GAEP,CACEiH,UAAU,GAUhB,CAPE,MAAO9K,GACP,IAAKyK,EACH,MAAM,IAAIlJ,MACP,2CAA0CkJ,MAAiBzK,KAGhE,MAAM,IAAIuB,MAAO,oBAAmBvB,IACtC,GExBE+K,CAAwB,CACtB7B,QAAQjI,EAAAA,EAAAA,GAAU,UAClBmC,sBACAmH,gBAAiB,sBAEnB/I,EAAEwJ,cAAcb,MAAMc,QAAU,MAAM,EAKqB,WACrD,SAAC,EAAS,CACRlF,IAAKmF,EAAQ,MACblF,IAAI,yEAEN,SAAC,EAAU,iDAGd,E,eCnCP,MAAM1H,GAAeC,EAAAA,GAAAA,MAAc;;;;;;;;;;;;;EAe7B4M,IAAmB5M,EAAAA,EAAAA,IAAOD,GAAc;;;;ECuB9C,GA1BqC,IAA+B,IAA9B,qBAAE8M,GAAsB,EAC5D,MAAM,EAAEvM,IAAMC,EAAAA,EAAAA,MAEPsE,EAAqBkH,IAA0BnH,EAAAA,EAAAA,YACpDlB,IAEG,CAAC,EAAG,QACT,IAAIoJ,GACJ9L,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,cAAeC,IAC7B2L,EAAwBzL,OAAOC,QAAQH,EAASI,OAAOC,MAAM,IAE/D,MAAMuL,EAAiBD,IAA0BjI,EAEjD,OACE,8BACGkI,GACC,SAACC,GAAA,EAAO,CAAC/M,KAAK,kFAAiBC,OAAO,cAEtC,SAAC0M,GAAgB,CAACzM,QAAS0M,EAAqB,SAC7CvM,EAAE,iDAGN,ECjBP,GAXqC,IAA+B,IAA9B,qBAAEuM,GAAsB,EAC5D,OACE,SAACG,GAAA,EAAO,CACN/M,KAAK,kFACLC,OAAO,WACPC,QAAS0M,EACTzM,GAAG,aACH,ECAA6M,GAAmBrM,UAML,IAAD,QANa,oBAC9BiE,EAAmB,iBACnBqI,EAAgB,WAChBd,EAAU,cACVe,EAAa,OACbxC,GACY,EACZ,MAAMnC,EACkD,QAD7C,EACTY,SAASG,cAA+B4D,UAAc,aAAtD,EAAwDd,YACpDjF,EACwD,QADhD,EACZgC,SAASG,cAAkC2D,UAAiB,aAA5D,EAA8Db,YAC1De,OCtBiBxM,WACvB,IAAK,IAAD,EACF,MAAMyD,EAAqC,QAAjC,EAAG+E,SAASG,cAAc,eAAO,aAA9B,EAAgC8D,aAAa,QAY1D,aAV0B,IAAIxM,SAAQ,SAAUC,EAASC,IACvDC,EAAAA,EAAAA,KACEC,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,qBAAoB2D,KAAuBR,kBACnDlD,IACC,MAAMmM,EAAgBnM,EAASI,MAC/BT,EAAQwM,EAAc,GAG5B,GAKF,CAFE,MAAO7L,GACPC,QAAQD,MAAMA,EAChB,GDK0B8L,CAAiB1I,GAE3C,IACE,MAAM+F,GAAuB3J,EAAAA,EAAAA,IAC3BC,EAAAA,EACC,aAAYyJ,mBAAwB9F,MAEvC2I,EAAAA,EAAAA,IAAI5C,EAAsB,CACxBxD,SAAUA,EACVgF,WAAYA,EACZ5D,MAAOA,EACPiF,MAAOL,IAAgBhB,EAAa,EAAI,EACxCsB,cAAejF,GAYnB,CAVE,MAAOhH,GACP,MAAK+G,EAEOpB,EAKJ,IAAIpE,MAAO,oBAAmBvB,KAJ9B,IAAIuB,MACP,uCAAsCoE,MAAa3F,KAHhD,IAAIuB,MAAO,oCAAmCwF,MAAU/G,IAQlE,GEhDIyC,GAAgBlE,EAAAA,GAAAA,OAAe;;;;;;;;;ECArC,GCoBsC,IAI/B,IAJgC,yBACrC2N,EAAwB,iBACxBvJ,EAAgB,iBAChBwJ,GACD,EAEC,MAAO/I,EAAqBkH,IAA0BnH,EAAAA,EAAAA,YACpDlB,IAEG,CAAC,EAAG,QAET,IAAIoJ,EAAwB,GAC5B9L,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAIC,EAAAA,EAAI,cAAeC,IAC7B2L,EAAwBzL,OAAOC,QAAQH,EAASI,OAAOC,MAAM,IAG/D,MAiBMqM,EAAyB,KClDR,MACvB,IACE,MAAMlD,EAAS9H,aAAaC,QAAQ,UAC9B8H,GAAuB3J,EAAAA,EAAAA,IAAIC,EAAAA,EAAK,aAAYyJ,eAClD6C,EAAAA,EAAAA,IAAI5C,EAAsB,CACxBnC,eAAgBA,GAIpB,CAFE,MAAOhH,GACPC,QAAQD,MAAMA,EAChB,GD0CEqM,GxBjDFrF,EAAiB,CwBkDK,EAGhBoE,EAAwB5J,IAC5B,MAAM8K,EAAU3E,SAASG,cAAc,YArBrCH,SAAS+C,iBAAgC,qBAC/BpI,SAASiK,IACfA,EAAW5I,QAAQC,aACrB0G,EAAuBlH,EAAsB,GAC7CoI,GAAiB,CACfpI,sBACAqI,iBAAkB,iBAClBd,WAAY4B,EAAW3B,aAAe,YACtCc,cAAe,iBACfxC,QAAQjI,EAAAA,EAAAA,GAAU,YAEtB,IAYEO,EAAEwJ,cAAcwB,QAAQ,cAC1BJ,KAGFD,IAEsD,UAA1C,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAA+BnC,MAAMc,WACvCqB,EAA8BnC,MAAMc,QAAU,QACjD,EAGF,OACE,UAAC,GAAa,YACZ,SAAC,GAAO,CAACtI,iBAAkBA,IAC1BuJ,IACEb,IAA0BjI,GACzB,SAAC,GAAU,CAACgI,qBAAsBA,KAElC,SAAC,GAAU,CAACA,qBAAsBA,OAExB,EEjFdqB,GAAgBlO,EAAAA,GAAAA,OAAe;;;;;;;;;EAU/BkE,GAAgBlE,EAAAA,GAAAA,OAAe;;;;;;;;;EC0DrC,GApD4B,IAAa,IAAZ,KAACqE,GAAK,EAEjC,MAAOQ,EAAqBkH,IAA0BvH,EAAAA,EAAAA,UAAiB,GACjEyG,GAAUhB,EAAAA,EAAAA,QAAgC,OACzC0D,EAA0BQ,IAC/B3J,EAAAA,EAAAA,WAAkB,GAEdJ,EAAmB,KACvB+J,GAA0B,EAAK,EAoBjC,OAbA3H,EAAAA,EAAAA,YAAU,KACR,MAAM4H,EAAqBC,IACzBA,EAAM5K,iBACN4K,EAAMC,YAAc,kdAA2F,EAKjH,OAFAC,OAAOC,iBAAiB,eAAgBJ,GAEjC,KACLG,OAAOE,oBAAoB,eAAgBL,EAAkB,CAC9D,GACA,KAGD,SAAC,IAAU,WACT,SAACM,EAAA,EAAS,WACR,SAACR,GAAa,CAACjN,IAAKgK,EAAQ,UAC1B,UAAC,EAAO,CAACrI,MAAO,CAACiC,EAAqBkH,GAAwB,WAC5D,SAAC,EAAS,CAACd,QAASA,KACpB,UAAC,GAAa,YACZ,SAAC,EAAsB,CAAC5G,KAAMA,KAC9B,SAAC,EAAK,QAER,SAAC,EAAkB,CAACA,KAAMA,KAC1B,SAAC,EAAO,CAACD,iBAAkBA,EAAkBC,KAAMA,KACnD,SAAC,GAAW,CACVD,iBAAkBA,EAClBuJ,yBAA0BA,EAC1BC,iBAhCa,KACvBO,GAA0B,EAAM,YAoCnB,C,kCChEV,MAAMQ,E,QAAa3O,GAAAA,IAAY","sources":["UI/LinkBtn/LinkBtn.Styled.ts","UI/LinkBtn/LinkBtn.tsx","api/getTotalQuestionsNumb.ts","components/Container/Container.styled.ts","components/Container/Container.tsx","config/firebase/firebaseConfig.js","helpers/getIdUser.ts","modules/Answers/components/Answer/Answer.Styled.ts","modules/Answers/components/Answer/Answer.tsx","components/Context.tsx","modules/Answers/helpers/removeAllAttributes.ts","modules/Answers/Answers/Answers.Styled.ts","modules/Answers/index.ts","modules/Answers/Answers/Answers.tsx","modules/Answers/api/getAnswersDb.ts","modules/NameQuestionAndImg/api/getSrcImg.ts","modules/NameQuestionAndImg/api/getNameQuestion.ts","modules/NameQuestionAndImg/NameQuestionAndImg/NameQuestionAndImg.Styled.ts","modules/NameQuestionAndImg/index.ts","modules/NameQuestionAndImg/NameQuestionAndImg/NameQuestionAndImg.tsx","modules/QuantityThemeQuestions/api/getThemeQuestion.ts","modules/QuantityThemeQuestions/QuantityThemeQuestions/QuantityThemeQuestions.Styled.ts","modules/QuantityThemeQuestions/index.ts","modules/QuantityThemeQuestions/QuantityThemeQuestions/QuantityThemeQuestions.tsx","helpers/incrementQuantityPause.ts","UI/Button/Button.Styled.js","UI/Modal/Modal.Styled.ts","UI/Modal/Modal.tsx","modules/Timer/helpers/getFullNumb.ts","components/Portal/Portal.tsx","modules/Timer/Timer/Timer.Styled.ts","modules/Timer/index.ts","modules/Timer/Timer/Timer.tsx","modules/Timer/api/sendDbTimeLeft.ts","modules/ScrollBar/ScrollBar/SrollBar.Styled.ts","modules/ScrollBar/index.ts","modules/ScrollBar/ScrollBar/ScrollBar.tsx","modules/ScrollBar/helpers/setWidthScrollBar.ts","modules/ButtonsQuiz/helpers/highlightPreviousAnswer.ts","modules/ButtonsQuiz/UI/BtnBack/BtnBack.Styled.ts","modules/ButtonsQuiz/UI/BtnBack/BtnBack.tsx","modules/ButtonsQuiz/UI/ButtonQuiz/ButtonQuiz.Styled.ts","modules/ButtonsQuiz/UI/ButtonQuiz/ButtonQuiz.tsx","modules/ButtonsQuiz/UI/ButtonLink/ButtonLink.tsx","modules/ButtonsQuiz/api/sendUserAnswerDB.ts","modules/ButtonsQuiz/api/getRightAnswerDB.ts","modules/ButtonsQuiz/ButtonsQuiz/ButtonsQuiz.Styled.ts","modules/ButtonsQuiz/index.ts","modules/ButtonsQuiz/ButtonsQuiz/ButtonsQuiz.tsx","modules/ButtonsQuiz/api/setQuantityPause.ts","pages/Quiz/Quiz.Styled.ts","pages/Quiz/Quiz.tsx","styles/Main.Styled.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 8px 33px;\r\n  background-color: var(--color-button);\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  &:disabled {\r\n    filter: grayscale(0.7);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 80px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonQuiz = styled(StyledButton)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nconst StyledButtonBack = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 5px;\r\n  border: none;\r\n  background-color: transparent;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-top: 32px;\r\n  max-width: 540px;\r\n  padding: 5px;\r\n\r\n  @media screen and (min-width: 768.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-button);\r\n  color: var(--color-back-btn);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport {\r\n  StyledButton,\r\n  StyledArticle,\r\n  StyledButtonBack,\r\n  StyledImg,\r\n  StyledSpan,\r\n  StyledButtonQuiz,\r\n};\r\n","import { FC } from 'react';\r\nimport './link.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { MouseEvent } from 'react';\r\n\r\nimport { StyledButton } from './LinkBtn.Styled';\r\n\r\ninterface LinkInt {\r\n  text: string;\r\n  id?: string;\r\n  pageTo: string;\r\n  onClick?: (e: MouseEvent) => void;\r\n  isDisabledBtn?: boolean;\r\n}\r\nconst LinkBtn: FC<LinkInt> = ({\r\n  text,\r\n  pageTo,\r\n  onClick,\r\n  id,\r\n  isDisabledBtn = false,\r\n}) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Link className='btn__link' to={pageTo} onClick={onClick} id={id}>\r\n      <StyledButton disabled={isDisabledBtn}>{t(text)}</StyledButton>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkBtn;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../config/firebase/firebaseConfig';\r\n\r\n// Fix: 11 строку вынести в отдельную строку\r\nconst getTotalQuestionsNumb = async () => {\r\n  try {\r\n    return await new Promise<number>(function (resolve, reject) {\r\n      onValue(ref(db, 'questions'), (snapshot) => {\r\n        const totalQuestionsNumb: number = Object.entries(\r\n          snapshot.val(),\r\n        ).length;\r\n        resolve(totalQuestionsNumb);\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { getTotalQuestionsNumb };\r\n","import styled from 'styled-components';\r\n\r\nconst ContainerStyled = styled.div`\r\nmax-width: 85%;\r\nmin-width: 287px;\r\nmargin: 0 auto;\r\npadding: 0 5px;\r\n@media screen and (min-width: 1299.8px) {\r\n  max-width: 1190px;\r\n}\r\n`;\r\n\r\nexport { ContainerStyled };\r\n","import React, { FC } from 'react';\r\n\r\nimport { ContainerStyled } from './Container.styled';\r\n\r\ninterface IContainer {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Container: FC<IContainer> = ({ children }) => {\r\n  return <ContainerStyled>{children}</ContainerStyled>;\r\n};\r\n\r\nexport default Container;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","const getIdUser = <T extends string>(key: T): string => {\r\n  const value = localStorage.getItem(key);\r\n  if (value === null || value === undefined) {\r\n    throw new Error(`Value not found for key '${key}'`);\r\n  }\r\n  try {\r\n    return `${value}`;\r\n  } catch (e: unknown) {\r\n    if (e instanceof Error) {\r\n      throw new Error(`Invalid JSON data for key '${key}': ${e.message}`);\r\n    } else {\r\n      throw new Error(`Unknown error caught: ${e}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport { getIdUser };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledLi = styled.li`\r\n  word-wrap: break-word;\r\n  box-sizing: border-box;\r\n  flex-basis: 100%;\r\n  list-style-type: none;\r\n  border: 1px solid var(--color-border-answer);\r\n  padding: 7px;\r\n  font: var(--font-little-text-bold);\r\n  cursor: pointer;\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-bold);\r\n    padding: 15px 20px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1123.8px) {\r\n    font: var(--font-text-bold);\r\n  }\r\n`;\r\n\r\nexport { StyledLi };\r\n","import { FC, ReactNode, KeyboardEventHandler } from 'react';\r\n\r\nimport { StyledLi } from './Answer.Styled';\r\n\r\ninterface IAnswer {\r\n  children: ReactNode;\r\n  setRef: (elem: any) => void;\r\n  onFocusUserAnswer: (id: number) => void;\r\n  index: number;\r\n}\r\n\r\nconst Answer: FC<IAnswer> = ({\r\n  children,\r\n  index,\r\n  setRef,\r\n  onFocusUserAnswer,\r\n}) => {\r\n  const handleKeyboardClick: KeyboardEventHandler<HTMLLIElement> = (e) => {\r\n    if (e.key === 'Enter' || e.key === ' ') {\r\n      e.preventDefault();\r\n      onFocusUserAnswer(index);\r\n    }\r\n  };\r\n  return (\r\n    <StyledLi\r\n      ref={setRef}\r\n      tabIndex={0}\r\n      onClick={() => onFocusUserAnswer(index)}\r\n      onKeyDown={handleKeyboardClick}\r\n    >\r\n      {children}\r\n    </StyledLi>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import { FC, createContext } from 'react';\r\nexport const ContextQuestionNumb = createContext<IContext['value'] | null>(\r\n  null,\r\n);\r\n\r\ninterface IContext {\r\n  children: React.ReactNode;\r\n  value: [number, (numb: number) => void];\r\n}\r\n\r\nconst Context: FC<IContext> = ({ children, value }) => {\r\n  return (\r\n    <ContextQuestionNumb.Provider value={value}>\r\n      {children}\r\n    </ContextQuestionNumb.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n","const removeAllAttributes = (refs: HTMLLIElement[]) => {\r\n  refs.forEach((answer: HTMLLIElement) => {\r\n    answer.removeAttribute('style');\r\n    answer.removeAttribute('data-useranswer');\r\n  });\r\n};\r\n\r\nexport { removeAllAttributes };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    gap: 20px;\r\n  }\r\n\r\n  @media screen and (min-width: 1123.8px) {\r\n    gap: 40px;\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  @media screen and (min-width: 767.8px) {\r\n    flex-basis: auto;\r\n  }\r\n`;\r\n\r\nexport { StyledArticle, StyledUl };\r\n","import Answers from './Answers/Answers';\r\n\r\nexport default Answers;\r\n","import { useEffect, useState, useContext, FC } from 'react';\r\n\r\nimport { getAnswersDb } from '../api/getAnswersDb';\r\nimport Answer from '../components/Answer/Answer';\r\nimport { ContextQuestionNumb } from '../../../components/Context';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { removeAllAttributes } from '../helpers/removeAllAttributes';\r\n\r\nimport { StyledArticle, StyledUl } from './Answers.Styled';\r\n\r\ntype TState = {\r\n  loading: boolean;\r\n  answers: string[];\r\n  error: boolean;\r\n};\r\n\r\ntype AnswersProps = {\r\n  showButtonAccept: () => void;\r\n  lang: string,\r\n};\r\n\r\nconst Answers: FC<AnswersProps> = ({ showButtonAccept, lang }) => {\r\n  const [state, setState] = useState<TState>({\r\n    answers: [],\r\n    loading: true,\r\n    error: false,\r\n  });\r\n  const contextValue = useContext(ContextQuestionNumb);\r\n  const currentQuestionNumb = contextValue ? contextValue[0] : 1;\r\n  const refAnswers: HTMLLIElement[] = [];\r\n  const setRefAnswer = (elem: HTMLLIElement) => {\r\n    refAnswers.push(elem as HTMLLIElement);\r\n  };\r\n\r\n  const onFocusUserAnswer = (id: number) => {\r\n    const styleBorder = 'border: 2px solid rgb(103, 104, 215)';\r\n    const currentAnswer: HTMLLIElement[] = refAnswers.filter(\r\n      (answerItem) => answerItem.dataset.useranswer,\r\n    );\r\n    const isCurrentAnswer: boolean = currentAnswer.length ? true : false;\r\n    if (!isCurrentAnswer) {\r\n      showButtonAccept();\r\n    }\r\n\r\n    removeAllAttributes(refAnswers);\r\n    refAnswers[id].setAttribute('style', styleBorder);\r\n    refAnswers[id].setAttribute('data-useranswer', 'true');\r\n    refAnswers[id].focus();\r\n  };\r\n\r\n  const answersHasLoaded = (response) => {\r\n    const answers = Object.entries(response).map((item) => item.join('. '));\r\n    if (Array.isArray(answers)) {\r\n      setState((state) => ({\r\n        ...state,\r\n        answers: answers as string[],\r\n        loading: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const answersItems = state.answers.map((answer, index) => (\r\n    <Answer\r\n      index={index}\r\n      setRef={setRefAnswer}\r\n      onFocusUserAnswer={onFocusUserAnswer}\r\n      key={index + 1}\r\n    >\r\n      {answer}\r\n    </Answer>\r\n  ));\r\n\r\n  const spinner = state.loading ? (\r\n    <Spinner width={50} height={50} color='#1f2ce0' margin='' />\r\n  ) : null;\r\n  const errorMessage = 'ERROR!';\r\n  const error = state.error ? errorMessage : null;\r\n\r\n  const content = !(state.loading || state.error) ? (\r\n    <StyledArticle id='answersAll'>\r\n      <StyledUl>{answersItems}</StyledUl>\r\n    </StyledArticle>\r\n  ) : null;\r\n\r\n  const onErrorHandler = () => {\r\n    setState((state) => ({ ...state, error: true, loading: false }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    removeAllAttributes(refAnswers);\r\n    if (currentQuestionNumb) {\r\n      getAnswersDb(currentQuestionNumb, lang)\r\n        .then(answersHasLoaded)\r\n        .catch(onErrorHandler);\r\n    }\r\n  }, [currentQuestionNumb, lang]);\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      {spinner} {content} {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Answers;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getAnswersDb = async (currentQuestionNumb: number, lang: string) => {\r\n\r\n  return await new Promise(function (resolve, reject) {\r\n    onValue(\r\n      ref(db, `answers/answers${currentQuestionNumb}/${lang}`),\r\n      (snapshot) => {\r\n        if (snapshot.val()) {\r\n          resolve(snapshot.val());\r\n        } else {\r\n          reject();\r\n        }\r\n      },\r\n    );\r\n  });\r\n};\r\n\r\nexport { getAnswersDb };\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getSrcImg = async (currentQuestionNumb: number, lang: string) => {\r\n  return await new Promise<string>(function (resolve, reject) {\r\n    onValue(\r\n      ref(db, `questions/question${currentQuestionNumb}/${lang}/img`),\r\n      (snapshot) => {\r\n        const srcImg = snapshot.val();\r\n        resolve(srcImg);\r\n      },\r\n    );\r\n  });\r\n};\r\n\r\nexport { getSrcImg };\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getNameQuestion = async (currentQuestionNumb: number, lang: string) => {\r\n  return await new Promise<string>(function (resolve, reject) {\r\n    onValue(\r\n      ref(db, `questions/question${currentQuestionNumb}/${lang}/name`),\r\n      (snapshot) => {\r\n        const nameQuestion = snapshot.val();\r\n        resolve(nameQuestion);\r\n      },\r\n    );\r\n  });\r\n};\r\n\r\nexport { getNameQuestion };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticleQuestion = styled.article`\r\n  padding-bottom: 14px;\r\n`;\r\n\r\nconst StyledH2 = styled.h2`\r\n  font: var(--font-title4);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 20px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title4);\r\n  }\r\n`;\r\n\r\nconst StyledPicture = styled.picture`\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-basis: 55%;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 1123.8px) {\r\n    flex-basis: 48%;\r\n  }\r\n`;\r\n\r\ninterface Img {\r\n  currentQuestionNumb?: number;\r\n}\r\n\r\nconst StyledImg = styled.img<Img>`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  ${function ({ currentQuestionNumb }) {\r\n    if (currentQuestionNumb !== 16) {\r\n      return `\r\n      @media screen and (min-width: 667.8px) {\r\n        width: 85%;\r\n      }\r\n  \r\n      @media screen and (min-width: 923.8px) {\r\n        width: 78%;\r\n      }\r\n            `;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport { StyledH2, StyledArticleQuestion, StyledPicture, StyledImg };\r\n","import NameQuestionAndImg from './NameQuestionAndImg/NameQuestionAndImg';\r\n\r\nexport default NameQuestionAndImg;\r\n","import { useEffect, useContext, FC, useState } from 'react';\r\n\r\nimport { ContextQuestionNumb } from '../../../components/Context';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { getSrcImg } from '../api/getSrcImg';\r\nimport { getNameQuestion } from '../api/getNameQuestion';\r\n\r\nimport {\r\n  StyledH2,\r\n  StyledArticleQuestion,\r\n  StyledPicture,\r\n  StyledImg,\r\n} from './NameQuestionAndImg.Styled';\r\n\r\ntype IState = {\r\n  question: string;\r\n  loading?: boolean;\r\n  srcImg?: string | undefined;\r\n  error: boolean;\r\n};\r\n\r\ntype NameQuestionAndImgProps = {\r\n  lang: string\r\n}\r\n\r\nconst NameQuestionAndImg: FC<NameQuestionAndImgProps> = ({lang}) => {\r\n  const contextValue = useContext(ContextQuestionNumb);\r\n  const currentQuestionNumb = contextValue ? contextValue[0] : 1;\r\n  const [state, setState] = useState<IState>({\r\n    question: '',\r\n    loading: true,\r\n    srcImg: '',\r\n    error: false,\r\n  });\r\n  const errorMessage = 'ERROR!!';\r\n  const error = state.error ? errorMessage : null;\r\n  const spinner = state.loading ? (\r\n    <Spinner width={50} height={50} color='#1f2ce0' margin='0' />\r\n  ) : null;\r\n\r\n  const view = () => {\r\n    if (!state.srcImg) {\r\n      return (\r\n        <StyledArticleQuestion>\r\n          <StyledH2 id='questionTitle' tabIndex={0}>\r\n            {state.question}\r\n          </StyledH2>\r\n        </StyledArticleQuestion>\r\n      );\r\n    }\r\n    return (\r\n      <StyledArticleQuestion>\r\n        <StyledH2 id='questionTitle' tabIndex={0}>\r\n          {state.question}\r\n        </StyledH2>\r\n        <StyledPicture>\r\n          <source\r\n            type='image/png'\r\n            media='(min-width: 320px)'\r\n            srcSet={state.srcImg}\r\n            width='120'\r\n            height='auto'\r\n          ></source>\r\n          <source\r\n            type='image/png'\r\n            media='(min-width: 487px)'\r\n            srcSet={state.srcImg}\r\n            width='768'\r\n            height='auto'\r\n          ></source>\r\n          <source\r\n            type='image/png'\r\n            media='(min-width: 769px)'\r\n            srcSet={state.srcImg}\r\n            width='1024'\r\n            height='auto'\r\n          ></source>\r\n          <StyledImg\r\n            src={state.srcImg}\r\n            width='1024'\r\n            height='auto'\r\n            alt='Код на JS'\r\n          />\r\n        </StyledPicture>\r\n      </StyledArticleQuestion>\r\n    );\r\n  };\r\n\r\n  const content = !(state.loading || state.error) ? view() : null;\r\n\r\n  const dataLoaded = (result) => {\r\n    type TDataInfo = {\r\n      [key: string]: string;\r\n    };\r\n    const dataInfo: TDataInfo = { src: '', question: '' };\r\n    result.forEach((item) => {\r\n      if (item.value.startsWith('http')) {\r\n        dataInfo.src = item.value;\r\n      }\r\n      if (item.value === 'No') {\r\n        dataInfo.src = '';\r\n      }\r\n      if (typeof item.value === 'string') {\r\n        dataInfo.question = item.value;\r\n      }\r\n    });\r\n\r\n    setState((state) => ({\r\n      ...state,\r\n      loading: false,\r\n      question: dataInfo.question,\r\n      srcImg: dataInfo.src,\r\n    }));\r\n  };\r\n\r\n  const onErrorHandler = (error): never => {\r\n    setState((state) => ({ ...state, loading: false, error: true }));\r\n    throw new Error(error);\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    Promise.allSettled([\r\n      getSrcImg(currentQuestionNumb, lang),\r\n      getNameQuestion(currentQuestionNumb, lang),\r\n    ])\r\n      .then(dataLoaded)\r\n      .catch(onErrorHandler);\r\n  }, [currentQuestionNumb, lang]);\r\n\r\n  return (\r\n    <>\r\n      {spinner} {content} {error}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NameQuestionAndImg;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getThemeQuestion = async (currentQuestionNumb: number, lang: string) => {\r\n  try {\r\n    return await new Promise(function (resolve, reject) {\r\n      onValue(\r\n        ref(db, `questions/question${currentQuestionNumb}/${lang}/theme`),\r\n        (snapshot) => {\r\n          const themQuestion = snapshot.val();\r\n          resolve(themQuestion);\r\n        },\r\n      );\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { getThemeQuestion };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledH1 = styled.h1`\r\n  font: var(--font-title4);\r\n  color: black;\r\n  padding: 0;\r\n  margin: 20px 0;\r\n  position: relative;\r\n  flex: 0 1 85%;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    font: var(--font-title4);\r\n  }\r\n`;\r\n\r\nconst StyledSpanQuestionQuantity = styled.span`\r\n  font: var(--font-text-regular);\r\n  color: var(--color-quantity-questions);\r\n  padding: 0 0 0 5px;\r\n`;\r\n\r\nconst StyledSpanThemeQuestion = styled(StyledSpanQuestionQuantity)`\r\n  display: block;\r\n  padding: 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    display: inline;\r\n    padding: 0 0 0 10px;\r\n  }\r\n`;\r\n\r\nexport { StyledH1, StyledSpanThemeQuestion, StyledSpanQuestionQuantity };\r\n","import QuantityThemeQuestions from './QuantityThemeQuestions/QuantityThemeQuestions';\r\n\r\nexport default QuantityThemeQuestions;\r\n","import { useEffect, useContext, FC, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { ContextQuestionNumb } from '../../../components/Context';\r\nimport Spinner from '../../../UI/Spinner/Spinner';\r\nimport { getThemeQuestion } from '../api/getThemeQuestion';\r\nimport { getTotalQuestionsNumb } from '../../../api/getTotalQuestionsNumb';\r\n\r\nimport {\r\n  StyledH1,\r\n  StyledSpanThemeQuestion,\r\n  StyledSpanQuestionQuantity,\r\n} from './QuantityThemeQuestions.Styled';\r\n\r\ntype TState = {\r\n  loading: boolean;\r\n  questionTheme: string | null;\r\n  totalQuestionNumber: number | null;\r\n};\r\n\r\ntype QuantityThemeQuestionsProps = {\r\n  lang: string\r\n};\r\n\r\nconst QuantityThemeQuestions: FC<QuantityThemeQuestionsProps> = ({lang}) => {\r\n  const { t } = useTranslation();\r\n  const contextValue: [number, (numb: number) => void] | null =\r\n    useContext(ContextQuestionNumb);\r\n  const currentQuestionNumb = contextValue ? contextValue[0] : 1;\r\n\r\n  const [state, setState] = useState<TState>({\r\n    loading: true,\r\n    questionTheme: null,\r\n    totalQuestionNumber: 0,\r\n  });\r\n\r\n  const view = () => {\r\n    return (\r\n      <StyledH1 id='questionName'>\r\n        {t('Вопрос')} {currentQuestionNumb}\r\n        <StyledSpanQuestionQuantity id='totalQuestionQuantity' tabIndex={0}>\r\n          {`/ ${state.totalQuestionNumber}`}\r\n        </StyledSpanQuestionQuantity>\r\n        <StyledSpanThemeQuestion id='themeQuestion'>\r\n          {state.questionTheme}\r\n        </StyledSpanThemeQuestion>\r\n      </StyledH1>\r\n    );\r\n  };\r\n  const spinner = state.loading ? (\r\n    <Spinner width={50} height={50} color='#1f2ce0' margin='' />\r\n  ) : null;\r\n  const content = !state.loading ? view() : null;\r\n\r\n  const dataLoaded = (res) => {\r\n    type TArrayItems = {\r\n      theme: null | string;\r\n      totalQuestionNumber: number | null;\r\n    };\r\n\r\n    const items: TArrayItems = {\r\n      theme: null,\r\n      totalQuestionNumber: null,\r\n    };\r\n\r\n    res.forEach((result) => {\r\n      if (typeof result.value === 'number') {\r\n        items.totalQuestionNumber = result.value;\r\n      } else if (typeof result.value === 'string') {\r\n        items.theme = result.value;\r\n      }\r\n    });\r\n\r\n    setState({\r\n      loading: false,\r\n      questionTheme: `${items.theme}`,\r\n      totalQuestionNumber: items.totalQuestionNumber,\r\n    });\r\n\r\n    for (const key in items) {\r\n      if (!items[key]) {\r\n        throw new Error(`Value of ${key} is ${items[key]} in object \"items\"`);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.allSettled([\r\n      getThemeQuestion(currentQuestionNumb, lang),\r\n      getTotalQuestionsNumb(),\r\n    ]).then(dataLoaded);\r\n  }, [currentQuestionNumb, lang]);\r\n\r\n  return (\r\n    <>\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuantityThemeQuestions;\r\n","let quiantityPause = 0;\r\n\r\nexport function incrementQuantityPause() {\r\n  quiantityPause++;\r\n}\r\n\r\nexport function resetQuantityPause() {\r\n  quiantityPause = 0;\r\n}\r\n\r\nexport { quiantityPause };\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 8px 33px;\r\n  background-color: var(--color-button);\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 80px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyledButton};\r\n","import styled from 'styled-components';\r\n\r\nimport { StyledButton } from '../Button/Button.Styled';\r\n\r\nconst StyleDivModal = styled.div`\r\n  position: fixed;\r\n  z-index: 2;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst StyledButtonModal = styled(StyledButton)`\r\n  margin: 20px 0 0 0;\r\n  display: block;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 30px;\r\n  }\r\n`;\r\n\r\nconst StyledDivWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  padding: 15px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  margin: 0 auto;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  height: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst StyledH1 = styled.h1`\r\n  margin-top: 0;\r\n  font: 800 24px/36px Inter, Arial, sans-serif;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: 400 16px/24px Inter, Arial, sans-serif;\r\n`;\r\n\r\nconst StyledSpanClose = styled.span`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 20px;\r\n`;\r\n\r\nexport {\r\n  StyleDivModal,\r\n  StyledDivWrapper,\r\n  StyledH1,\r\n  StyledSpan,\r\n  StyledSpanClose,\r\n  StyledButtonModal,\r\n};\r\n","import { FC } from 'react';\r\n\r\nimport {\r\n  StyleDivModal,\r\n  StyledDivWrapper,\r\n  StyledH1,\r\n  StyledSpan,\r\n  StyledSpanClose,\r\n  StyledButtonModal,\r\n} from './Modal.Styled';\r\n\r\ninterface IModalProps {\r\n  title: string;\r\n  subTitle: string;\r\n  onClickHandler?: () => void;\r\n}\r\nconst Modal: FC<IModalProps> = ({ title, subTitle, onClickHandler }) => {\r\n  return (\r\n    <StyleDivModal id='notification'>\r\n      <StyledDivWrapper>\r\n        <StyledH1 className='notification__title'>{title}</StyledH1>\r\n        <StyledSpanClose\r\n          className='notification__close'\r\n          onClick={onClickHandler}\r\n        >\r\n          ✖\r\n        </StyledSpanClose>\r\n        <StyledSpan className='notification__text'>{subTitle}</StyledSpan>\r\n        <StyledButtonModal onClick={onClickHandler}>\r\n          Продолжить\r\n        </StyledButtonModal>\r\n      </StyledDivWrapper>\r\n    </StyleDivModal>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","const getFullNumb = (numb: number): string => {\r\n  return `${numb}`.length === 1 ? `0${numb}` : `${numb}`;\r\n};\r\n\r\nexport default getFullNumb;\r\n","import React, { ReactNode, FC, useEffect } from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\ntype PortalProps = {\r\n  children: ReactNode;\r\n};\r\nconst Portal: FC<PortalProps> = ({ children }) => {\r\n  const container = document.createElement('article');\r\n  const root = document.querySelector('#root');\r\n  root?.append(container);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      container.remove();\r\n    };\r\n  });\r\n\r\n  return ReactDOM.createPortal(children, container);\r\n};\r\n\r\nexport default Portal;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledDivTimer = styled.div`\r\n  font: var(--font-little-text-regular);\r\n  text-align: center;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    display: block;\r\n  }\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nconst StyledButtonPause = styled.button`\r\n  color: black;\r\n  font: var(--font-little-text-regular);\r\n  background-color: transparent;\r\n  border: 1px solid var(--color-border-answer);\r\n  cursor: pointer;\r\n  margin: 0 0 0 5px;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 0 0 0 10px;\r\n  }\r\n\r\n  &:hover {\r\n    border: 1px solid #6768d7;\r\n    transition: all ease 0.3s;\r\n  }\r\n`;\r\n\r\nexport { StyledDivTimer, StyledButtonPause };\r\n","import  deadline  from './Timer/Timer';\r\nimport Timer from './Timer/Timer';\r\n\r\nexport { deadline };\r\nexport default Timer;\r\n","import { useState, useEffect, FC, useRef } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { sendDbTimeLeft } from '../api/sendDbTimeLeft';\r\nimport { incrementQuantityPause } from '../../../helpers/incrementQuantityPause';\r\nimport Modal from '../../../UI/Modal/Modal';\r\nimport getFullNumb from '../helpers/getFullNumb';\r\nimport Portal from '../../../components/Portal/Portal';\r\n\r\nimport { StyledDivTimer, StyledButtonPause } from './Timer.Styled';\r\n\r\ntype TState = {\r\n  isModal: boolean;\r\n  isCounting: boolean;\r\n  timeLeft: number;\r\n};\r\n\r\nconst Timer: FC = () => {\r\n  const { t } = useTranslation();\r\n  const [{ isCounting, isModal, timeLeft }, setState] =\r\n    useState<TState>({\r\n      isModal: false,\r\n      isCounting: true,\r\n      timeLeft: 0,\r\n    });\r\n  const timerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const hours: string = getFullNumb(Math.floor(timeLeft / 3600) % 60);\r\n  const minutes: string = getFullNumb(Math.floor(timeLeft / 60) % 60);\r\n  const seconds: string = getFullNumb(Math.floor(timeLeft % 60));\r\n  const timer: string[] = [`${hours}:`, `${minutes}:`, seconds];\r\n  const elementNumbersTimer = timer.map((time, index) => (\r\n    <span key={index + 1}>{time}</span>\r\n  ));\r\n  const titleModal = t('Заголовок1_пауза');\r\n  const subtitleModal = t('Заголовок2_пауза');\r\n\r\n  const stopTimer = () => {\r\n    setState((state) => ({ ...state, isCounting: false, isModal: true }));\r\n  };\r\n\r\n  const restoreTimer = () => {\r\n    setState((state) => ({ ...state, isCounting: true, isModal: false }));\r\n  };\r\n\r\n   const onClickButtonHandler = () => {\r\n    stopTimer();\r\n    incrementQuantityPause();\r\n  };\r\n\r\n  useEffect(() => {\r\n      const startTimer = () => {\r\n      isCounting && setState((state) => ({ ...state, timeLeft: timeLeft + 1 }));\r\n    };\r\n\r\n    const timerId = setTimeout(() => {\r\n      startTimer();\r\n    }, 1000);\r\n\r\n    return () => {\r\n      /* If I copy 'timerRef.current' to a variable inside the useEffect,\r\n       the cleanup function doesn't run, when Timer unmountes */\r\n      // eslint-disable-next-line\r\n      sendDbTimeLeft(timeLeft);\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [timeLeft, isCounting]);\r\n\r\n \r\n\r\n  return (\r\n    <StyledDivTimer ref={timerRef}>\r\n      <span>{elementNumbersTimer}</span>\r\n      {isModal && (\r\n        <Portal>\r\n          <Modal\r\n            title={titleModal}\r\n            subTitle={subtitleModal}\r\n            onClickHandler={restoreTimer}\r\n          />\r\n        </Portal>\r\n      )}\r\n      <StyledButtonPause onClick={onClickButtonHandler}>\r\n        {t('Пауза')}\r\n      </StyledButtonPause>\r\n    </StyledDivTimer>\r\n  );\r\n};\r\n\r\n\r\nexport default Timer;\r\n","import { ref, update } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst sendDbTimeLeft = (time: number) => {\r\n  try {\r\n    const idUser = localStorage.getItem('idUser');\r\n    const referenceUserAnswers = ref(db, `users/user${idUser}/userInfo`);\r\n    update(referenceUserAnswers, {\r\n      time,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { sendDbTimeLeft };\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDivScrollBar = styled.div`\r\n  box-sizing: border-box;\r\n  height: 6px;\r\n  background-color: var(--color-scroll-bar);\r\n  border-radius: 2px 4px 4px 0;\r\n  width: 370px;\r\n`;\r\n","import ScrollBar from './ScrollBar/ScrollBar';\r\n\r\nexport default ScrollBar;\r\n","import { useEffect, useContext, FC, useRef, RefObject } from 'react';\r\n\r\nimport { setWidthScrollBar } from '../helpers/setWidthScrollBar';\r\nimport { ContextQuestionNumb } from '../../../components/Context';\r\n\r\nimport { StyledDivScrollBar } from './SrollBar.Styled';\r\ninterface IScrollBar {\r\n  quizRef: RefObject<HTMLTableSectionElement>;\r\n}\r\nconst ScrollBar: FC<IScrollBar> = ({ quizRef }) => {\r\n  const contextValue: [number, (numb: number) => void] | null =\r\n    useContext(ContextQuestionNumb);\r\n  const currentQuestionNumb = contextValue ? contextValue[0] : 1;\r\n  const scrollBarElementRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    setWidthScrollBar({ currentQuestionNumb, quizRef, scrollBarElementRef });\r\n  });\r\n\r\n  return <StyledDivScrollBar ref={scrollBarElementRef}></StyledDivScrollBar>;\r\n};\r\n\r\nexport default ScrollBar;\r\n","import { RefObject } from 'react';\r\n\r\nimport { getTotalQuestionsNumb } from '../../../api/getTotalQuestionsNumb';\r\n\r\ninterface IWidthScrollBar {\r\n  currentQuestionNumb: number;\r\n  quizRef: RefObject<HTMLTableSectionElement>;\r\n  scrollBarElementRef: RefObject<HTMLDivElement>;\r\n}\r\nasync function setWidthScrollBar({\r\n  currentQuestionNumb,\r\n  quizRef,\r\n  scrollBarElementRef,\r\n}: IWidthScrollBar) {\r\n  try {\r\n    const totalQuestionsNumb: number | undefined =\r\n      await getTotalQuestionsNumb();\r\n\r\n    const quizElement = quizRef.current;\r\n    const scrollBarElement = scrollBarElementRef.current;\r\n    if (quizElement && totalQuestionsNumb && scrollBarElement) {\r\n      const widthContainer =\r\n        quizElement.clientWidth -\r\n        parseInt(getComputedStyle(quizElement).paddingRight) -\r\n        parseInt(getComputedStyle(quizElement).paddingLeft);\r\n      const valueWidthScroll = widthContainer / totalQuestionsNumb;\r\n      scrollBarElement.style.width = `${\r\n        currentQuestionNumb * valueWidthScroll\r\n      }px`;\r\n    }\r\n  } catch (error: unknown) {\r\n    if (error instanceof Error) {\r\n      throw new Error(`${error.message}`);\r\n    } else {\r\n      throw new Error(`Unknown error caught: ${error}`);\r\n    }\r\n  }\r\n}\r\n\r\nexport { setWidthScrollBar };\r\n","import { ref, onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\ninterface IPreviousAnswer {\r\n  idUser: string;\r\n  currentQuestionNumb: number;\r\n  selectorAnswers: string;\r\n}\r\nconst highlightPreviousAnswer = ({\r\n  idUser,\r\n  currentQuestionNumb,\r\n  selectorAnswers,\r\n}: IPreviousAnswer) => {\r\n  const refer = `users/user${idUser}/answers/answer${currentQuestionNumb}`;\r\n  let userAnswerDb = '';\r\n  try {\r\n    onValue(\r\n      ref(db, refer),\r\n      (snapshot) => {\r\n        setTimeout(() => {\r\n          document\r\n            .querySelectorAll<HTMLLIElement>(selectorAnswers)\r\n            .forEach((answerItem) => {\r\n              userAnswerDb = snapshot.val().userAnswer;\r\n              if (answerItem.textContent === userAnswerDb) {\r\n                answerItem.style.border = '2px solid rgb(103, 104, 215)';\r\n                answerItem.setAttribute('data-useranswer', 'true');\r\n              }\r\n            });\r\n        }, 1);\r\n      },\r\n      {\r\n        onlyOnce: true,\r\n      },\r\n    );\r\n  } catch (error) {\r\n    if (!userAnswerDb) {\r\n      throw new Error(\r\n        `The value of variable 'userAnswerDb' is ${userAnswerDb}. ${error}`,\r\n      );\r\n    }\r\n    throw new Error(`Unknown mistake: ${error}`);\r\n  }\r\n};\r\n\r\nexport { highlightPreviousAnswer };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButtonBack = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 5px;\r\n  border: none;\r\n  background-color: transparent;\r\n  gap: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledArticle = styled.article`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-top: 32px;\r\n  max-width: 540px;\r\n  padding: 5px;\r\n\r\n  @media screen and (min-width: 768.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  font: var(--font-button);\r\n  color: var(--color-back-btn);\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport { StyledArticle, StyledButtonBack, StyledImg, StyledSpan };\r\n","import { useContext, MouseEvent, FC } from 'react';\r\n\r\nimport { ContextQuestionNumb } from '../../../../components/Context';\r\nimport { getIdUser } from '../../../../helpers/getIdUser';\r\nimport { highlightPreviousAnswer } from '../../helpers/highlightPreviousAnswer';\r\n\r\nimport { StyledButtonBack, StyledImg, StyledSpan } from './BtnBack.Styled';\r\n\r\ntype TBtnBack = {\r\n  showButtonAccept: () => void;\r\n};\r\nconst BtnBack: FC<TBtnBack> = ({ showButtonAccept }) => {\r\n  let [currentQuestionNumb, setCurrentQuestionNumb] = useContext(\r\n    ContextQuestionNumb,\r\n    //eslint-disable-next-line\r\n  ) || [1, () => {}];\r\n  const onClickBackBtn = (e: MouseEvent<HTMLButtonElement>) => {\r\n    setCurrentQuestionNumb(--currentQuestionNumb);\r\n    showButtonAccept();\r\n    highlightPreviousAnswer({\r\n      idUser: getIdUser('idUser'),\r\n      currentQuestionNumb,\r\n      selectorAnswers: '#answersAll ul li',\r\n    });\r\n    e.currentTarget.style.display = 'none';\r\n  };\r\n  return (\r\n    <>\r\n      {!(currentQuestionNumb === 1) && (\r\n        <StyledButtonBack id='btnBack' onClick={onClickBackBtn}>\r\n          <StyledImg\r\n            src={require('../../icons/arrowleft.png')}\r\n            alt='Кнопка назад'\r\n          />\r\n          <StyledSpan>Назад</StyledSpan>\r\n        </StyledButtonBack>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtnBack;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledButton = styled.button`\r\n  padding: 8px 33px;\r\n  background-color: var(--color-button);\r\n  border: none;\r\n  font: var(--font-button);\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-decoration: none;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    padding: 12px 80px;\r\n  }\r\n`;\r\n\r\nconst StyledButtonQuiz = styled(StyledButton)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n`;\r\n\r\nexport { StyledButtonQuiz };\r\n","import { useContext, FC, MouseEvent } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { ref, onValue } from 'firebase/database';\r\n\r\nimport LinkBtn from '../../../../UI/LinkBtn/LinkBtn';\r\nimport { ContextQuestionNumb } from '../../../../components/Context';\r\nimport db from '../../../../config/firebase/firebaseConfig';\r\n\r\nimport { StyledButtonQuiz } from './ButtonQuiz.Styled';\r\n\r\ntype TButtonsQuiz = {\r\n  onClickButtonHandler: (e: MouseEvent) => void;\r\n};\r\n\r\nconst ButtonQuiz: FC<TButtonsQuiz> = ({ onClickButtonHandler }) => {\r\n  const { t } = useTranslation();\r\n  \r\n  const [currentQuestionNumb, setCurrentQuestionNumb] = useContext(\r\n    ContextQuestionNumb,\r\n    //eslint-disable-next-line\r\n  ) || [1, () => {}];\r\n  let totalQuestionsNumbers;\r\n  onValue(ref(db, 'questions'), (snapshot) => {\r\n    totalQuestionsNumbers = Object.entries(snapshot.val()).length;\r\n  });\r\n  const isLastQuestion = totalQuestionsNumbers === currentQuestionNumb;\r\n\r\n  return (\r\n    <>\r\n      {isLastQuestion ? (\r\n        <LinkBtn text='Закончить тест' pageTo='/contact' />\r\n      ) : (\r\n        <StyledButtonQuiz onClick={onClickButtonHandler}>\r\n          {t('Принять')}\r\n        </StyledButtonQuiz>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonQuiz;\r\n","import { FC, MouseEvent } from 'react';\r\n\r\nimport LinkBtn from '../../../../UI/LinkBtn/LinkBtn';\r\n\r\ntype TButtonsLink = {\r\n  onClickButtonHandler: (e: MouseEvent) => void;\r\n};\r\n\r\nconst ButtonLink: FC<TButtonsLink> = ({ onClickButtonHandler }) => {\r\n  return (\r\n    <LinkBtn\r\n      text='Закончить тест'\r\n      pageTo='/contact'\r\n      onClick={onClickButtonHandler}\r\n      id='btnFinish'\r\n    />\r\n  );\r\n};\r\n\r\nexport default ButtonLink;\r\n","import { ref, set } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\nimport { quiantityPause } from '../../../helpers/incrementQuantityPause';\r\n\r\nimport { getRightAnswerDB } from './getRightAnswerDB';\r\n\r\ninterface IUserAnswer {\r\n  currentQuestionNumb: number;\r\n  selectorQuestion: '#questionTitle';\r\n  userAnswer: string;\r\n  selectorTheme: '#themeQuestion';\r\n  idUser: string;\r\n}\r\n\r\nconst sendUserAnswerDB = async ({\r\n  currentQuestionNumb,\r\n  selectorQuestion,\r\n  userAnswer,\r\n  selectorTheme,\r\n  idUser,\r\n}: IUserAnswer) => {\r\n  const theme =\r\n    document.querySelector<HTMLSpanElement>(selectorTheme)?.textContent;\r\n  const question =\r\n    document.querySelector<HTMLHeadingElement>(selectorQuestion)?.textContent;\r\n  const rightAnswer = await getRightAnswerDB(currentQuestionNumb);\r\n\r\n  try {\r\n    const referenceUserAnswers = ref(\r\n      db,\r\n      `users/user${idUser}/answers/answer${currentQuestionNumb}`,\r\n    );\r\n    set(referenceUserAnswers, {\r\n      question: question,\r\n      userAnswer: userAnswer,\r\n      theme: theme,\r\n      point: rightAnswer === userAnswer ? 1 : 0,\r\n      quantityPause: quiantityPause,\r\n    });\r\n  } catch (error) {\r\n    if (!theme) {\r\n      throw new Error(`The value of variable 'theme' is ${theme}. ${error}`);\r\n    } else if (!question) {\r\n      throw new Error(\r\n        `The value of variable 'question' is ${question}. ${error}`,\r\n      );\r\n    } else {\r\n      throw new Error(`Unknown mistake: ${error}`);\r\n    }\r\n  }\r\n};\r\n\r\nexport { sendUserAnswerDB };\r\n","import { ref, onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getRightAnswerDB = async (currentQuestionNumb: number) => {\r\n  try {\r\n    const lang = document.querySelector('html')?.getAttribute('lang');\r\n\r\n    const rightAnswer = await new Promise(function (resolve, reject) {\r\n      onValue(\r\n        ref(db, `questions/question${currentQuestionNumb}/${lang}/rightAnswer`),\r\n        (snapshot) => {\r\n          const rightAnswerDb = snapshot.val();\r\n          resolve(rightAnswerDb);\r\n        },\r\n      );\r\n    });\r\n\r\n    return rightAnswer;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { getRightAnswerDB };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledArticle = styled.article`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 40px;\r\n  margin-top: 32px;\r\n  max-width: 100%;\r\n  padding: 5px;\r\n`;\r\n\r\nexport { StyledArticle };\r\n","import ButtonsQuiz from './ButtonsQuiz/ButtonsQuiz';\r\n\r\nexport default ButtonsQuiz;\r\n","import { useContext, FC, MouseEvent } from 'react';\r\nimport { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport BtnBack from '../UI/BtnBack/BtnBack';\r\nimport ButtonQuiz from '../UI/ButtonQuiz/ButtonQuiz';\r\nimport ButtonLink from '../UI/ButtonLink/ButtonLink';\r\nimport db from '../../../config/firebase/firebaseConfig';\r\nimport { ContextQuestionNumb } from '../../../components/Context';\r\nimport { sendUserAnswerDB } from '../api/sendUserAnswerDB';\r\nimport { getIdUser } from '../../../helpers/getIdUser';\r\nimport { setQunatityPause } from '../api/setQuantityPause';\r\nimport { resetQuantityPause } from '../../../helpers/incrementQuantityPause';\r\n\r\nimport { StyledArticle } from './ButtonsQuiz.Styled';\r\n\r\ntype TButtonsQuiz = {\r\n  isButtonAcceptVisibility: boolean;\r\n  showButtonAccept: () => void;\r\n  hideButtonAccept: () => void;\r\n};\r\n\r\nconst ButtonsQuiz: FC<TButtonsQuiz> = ({\r\n  isButtonAcceptVisibility,\r\n  showButtonAccept,\r\n  hideButtonAccept,\r\n}) => {\r\n \r\n  const [currentQuestionNumb, setCurrentQuestionNumb] = useContext(\r\n    ContextQuestionNumb,\r\n     //eslint-disable-next-line\r\n  ) || [0, () => {}];\r\n\r\n  let totalQuestionsNumbers = 0;\r\n  onValue(ref(db, 'questions'), (snapshot) => {\r\n    totalQuestionsNumbers = Object.entries(snapshot.val()).length;\r\n  });\r\n\r\n  const sendAnswersToDb = () => {\r\n    const answersItem =\r\n      document.querySelectorAll<HTMLLIElement>('#answersAll ul li');\r\n    answersItem.forEach((asnwerItem) => {\r\n      if (asnwerItem.dataset.useranswer) {\r\n        setCurrentQuestionNumb(currentQuestionNumb + 1);\r\n        sendUserAnswerDB({\r\n          currentQuestionNumb,\r\n          selectorQuestion: '#questionTitle',\r\n          userAnswer: asnwerItem.textContent || 'No anwser',\r\n          selectorTheme: '#themeQuestion',\r\n          idUser: getIdUser('idUser'),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickTheLastQuestion = () => {\r\n    setQunatityPause();\r\n    resetQuantityPause();\r\n  };\r\n\r\n  const onClickButtonHandler = (e: MouseEvent) => {\r\n    const btnBack = document.querySelector('#btnBack');\r\n    sendAnswersToDb();\r\n    if (e.currentTarget.closest('#btnFinish')) {\r\n      onClickTheLastQuestion();\r\n      return;\r\n    }\r\n    hideButtonAccept();\r\n\r\n    if ((btnBack as HTMLButtonElement)?.style.display === 'none') {\r\n      (btnBack as HTMLButtonElement).style.display = 'flex';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledArticle>\r\n      <BtnBack showButtonAccept={showButtonAccept} />\r\n      {isButtonAcceptVisibility &&\r\n        (totalQuestionsNumbers === currentQuestionNumb ? (\r\n          <ButtonLink onClickButtonHandler={onClickButtonHandler} />\r\n        ) : (\r\n          <ButtonQuiz onClickButtonHandler={onClickButtonHandler} />\r\n        ))}\r\n    </StyledArticle>\r\n  );\r\n};\r\n\r\nexport default ButtonsQuiz;\r\n","import { ref, set } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\nimport { quiantityPause } from '../../../helpers/incrementQuantityPause';\r\n\r\nconst setQunatityPause = () => {\r\n  try {\r\n    const idUser = localStorage.getItem('idUser');\r\n    const referenceUserAnswers = ref(db, `users/user${idUser}/userInfo`);\r\n    set(referenceUserAnswers, {\r\n      quiantityPause: quiantityPause,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport { setQunatityPause };\r\n","import styled from 'styled-components';\r\n\r\nconst StyledSection = styled.section`\r\n  background-color: #fff;\r\n  padding: 0 8px 47px 8px;\r\n  margin: 0 0 15px 0;\r\n\r\n  @media screen and (min-width: 1123.8px) {\r\n    padding: 0 40px 47px 40px;\r\n    margin: 0 0 72px 0;\r\n  }\r\n`;\r\nconst StyledArticle = styled.article`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 540px;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nexport { StyledSection, StyledArticle };\r\n","import { useState, useRef, useEffect, FC } from 'react';\r\n\r\nimport Container from '../../components/Container/Container';\r\nimport Answers from '../../modules/Answers/index';\r\nimport NameQuestionAndImg from '../../modules/NameQuestionAndImg/index';\r\nimport QuantityThemeQuestions from '../../modules/QuantityThemeQuestions/index';\r\nimport Timer from '../../modules/Timer/index';\r\nimport ScrollBar from '../../modules/ScrollBar/index';\r\nimport { StyledMain } from '../../styles/Main.Styled';\r\nimport Context from '../../components/Context';\r\nimport ButtonsQuiz from '../../modules/ButtonsQuiz/index';\r\n\r\nimport { StyledSection, StyledArticle } from './Quiz.Styled';\r\n\r\ntype QuizProps = {\r\n  lang: string\r\n};\r\n\r\nconst Quiz: FC<QuizProps> = ({lang}) => {\r\n\r\n  const [currentQuestionNumb, setCurrentQuestionNumb] = useState<number>(1);\r\n  const quizRef = useRef<HTMLTableSectionElement>(null);\r\n  const [isButtonAcceptVisibility, setButtonAcceptVisibility] =\r\n    useState<boolean>(false);\r\n\r\n  const showButtonAccept = () => {\r\n    setButtonAcceptVisibility(true);\r\n  };\r\n\r\n  const hideButtonAccept = () => {\r\n    setButtonAcceptVisibility(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const showWarningWindow = (event: BeforeUnloadEvent) => {\r\n      event.preventDefault();\r\n      event.returnValue = 'Вы уверены, что хотите покинуть эту страницу? Все несохраненные изменения будут потеряны.';\r\n    };\r\n   \r\n    window.addEventListener(\"beforeunload\", showWarningWindow)\r\n    \r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", showWarningWindow)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <StyledMain>\r\n      <Container>\r\n        <StyledSection ref={quizRef}>\r\n          <Context value={[currentQuestionNumb, setCurrentQuestionNumb]}>\r\n            <ScrollBar quizRef={quizRef} />\r\n            <StyledArticle>\r\n              <QuantityThemeQuestions lang={lang}/>\r\n              <Timer />\r\n            </StyledArticle>\r\n            <NameQuestionAndImg lang={lang}/>\r\n            <Answers showButtonAccept={showButtonAccept} lang={lang}/>\r\n            <ButtonsQuiz\r\n              showButtonAccept={showButtonAccept}\r\n              isButtonAcceptVisibility={isButtonAcceptVisibility}\r\n              hideButtonAccept={hideButtonAccept}\r\n            />\r\n          </Context>\r\n        </StyledSection>\r\n      </Container>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMain = styled.main`\r\n  flex: 1 1 auto;\r\n`;\r\n"],"names":["StyledButton","styled","text","pageTo","onClick","id","isDisabledBtn","t","useTranslation","className","to","disabled","getTotalQuestionsNumb","async","Promise","resolve","reject","onValue","ref","db","snapshot","totalQuestionsNumb","Object","entries","val","length","error","console","ContainerStyled","children","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","getIdUser","key","value","localStorage","getItem","undefined","Error","e","message","StyledLi","index","setRef","onFocusUserAnswer","tabIndex","onKeyDown","preventDefault","ContextQuestionNumb","createContext","Provider","removeAllAttributes","refs","forEach","answer","removeAttribute","StyledArticle","StyledUl","showButtonAccept","lang","state","setState","useState","answers","loading","contextValue","useContext","currentQuestionNumb","refAnswers","setRefAnswer","elem","push","filter","answerItem","dataset","useranswer","setAttribute","focus","answersHasLoaded","response","map","item","join","Array","isArray","answersItems","spinner","Spinner","width","height","color","margin","content","onErrorHandler","useEffect","getAnswersDb","then","catch","getSrcImg","srcImg","getNameQuestion","nameQuestion","StyledArticleQuestion","StyledH2","StyledPicture","StyledImg","question","type","media","srcSet","src","alt","dataLoaded","result","dataInfo","startsWith","allSettled","getThemeQuestion","themQuestion","StyledH1","StyledSpanQuestionQuantity","StyledSpanThemeQuestion","questionTheme","totalQuestionNumber","res","items","theme","quiantityPause","StyleDivModal","StyledButtonModal","StyledDivWrapper","StyledSpan","StyledSpanClose","title","subTitle","onClickHandler","numb","container","document","createElement","root","querySelector","append","remove","ReactDOM","StyledDivTimer","StyledButtonPause","isCounting","isModal","timeLeft","timerRef","useRef","elementNumbersTimer","getFullNumb","Math","floor","time","titleModal","subtitleModal","timerId","setTimeout","idUser","referenceUserAnswers","update","sendDbTimeLeft","clearTimeout","StyledDivScrollBar","quizRef","scrollBarElementRef","quizElement","current","scrollBarElement","valueWidthScroll","clientWidth","parseInt","getComputedStyle","paddingRight","paddingLeft","style","setWidthScrollBar","StyledButtonBack","setCurrentQuestionNumb","selectorAnswers","refer","userAnswerDb","querySelectorAll","userAnswer","textContent","border","onlyOnce","highlightPreviousAnswer","currentTarget","display","require","StyledButtonQuiz","onClickButtonHandler","totalQuestionsNumbers","isLastQuestion","LinkBtn","sendUserAnswerDB","selectorQuestion","selectorTheme","rightAnswer","getAttribute","rightAnswerDb","getRightAnswerDB","set","point","quantityPause","isButtonAcceptVisibility","hideButtonAccept","onClickTheLastQuestion","setQunatityPause","btnBack","asnwerItem","closest","StyledSection","setButtonAcceptVisibility","showWarningWindow","event","returnValue","window","addEventListener","removeEventListener","Container","StyledMain"],"sourceRoot":""}