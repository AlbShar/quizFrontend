{"version":3,"file":"static/js/555.817c8455.chunk.js","mappings":"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","sources":["components/Container/Container.styled.ts","components/Container/Container.tsx","components/Header/Header.Styled.ts","components/Header/Header.tsx","components/Logo/Logo.Styled.ts","components/Logo/Logo.tsx","config/firebase/firebaseConfig.js","modules/HeaderHome/components/TotalTested/TotalTested.styled.ts","modules/HeaderHome/components/TotalTested/TotalTested.tsx","modules/HeaderHome/api/getAllTestedUsers.ts","UI/Dropdown/Dropdown.Styled.ts","UI/Dropdown/Dropdown.tsx","modules/HeaderHome/components/DropdownLanguages/DropdownLanguages.tsx","modules/HeaderHome/index.ts","modules/HeaderHome/HeaderHome/HeaderHome.tsx","styles/FlexWrapper.Styled.ts"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nconst ContainerStyled = styled.div`\r\n  min-width: 287px;\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 5px;\r\n`;\r\n\r\nexport { ContainerStyled };\r\n","import React, { FC } from 'react';\r\n\r\nimport { ContainerStyled } from './Container.styled';\r\n\r\ninterface IContainer {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Container: FC<IContainer> = ({ children }) => {\r\n  return <ContainerStyled>{children}</ContainerStyled>;\r\n};\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\ninterface IHeader {\r\n  height?: number;\r\n}\r\nexport const HeaderStyled = styled.header<IHeader>`\r\n  background-color: #252b58;\r\n  width: 100%;\r\n  margin: 0 0 34px 0;\r\n\r\n  @media screen and (min-width: 459.8px) {\r\n    margin: 0 0 40px 0;\r\n  }\r\n\r\n  ${function ({ height }) {\r\n    if (height) {\r\n      return `\r\n      @media screen and (min-width: ${1023.8}px) {\r\n        height: ${height}px;\r\n      }\r\n            `;\r\n    }\r\n  }}}\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { HeaderStyled } from './Header.Styled';\r\n\r\ninterface IHeader {\r\n  children: React.ReactNode;\r\n  height?: number;\r\n}\r\nconst Header: FC<IHeader> = ({ children, height }) => {\r\n  return <HeaderStyled height={height}>{children}</HeaderStyled>;\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\ninterface LogoImg {\r\n  location: string;\r\n}\r\n\r\nexport const StyledImg = styled.img<LogoImg>`\r\n  width: 86px;\r\n  height: 42px;\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    width: ${({ location }) => (location === 'header' ? '140px' : '113px')};\r\n    height: ${({ location }) => (location === 'header' ? '68px' : '55px')};\r\n  }\r\n`;\r\n","import { FC } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { StyledImg } from './Logo.Styled';\r\n\r\ninterface ILogo {\r\n  location: string;\r\n  style?: React.CSSProperties;\r\n}\r\nconst Logo: FC<ILogo> = ({ location, style }) => {\r\n  return (\r\n    <Link to=\"/\">\r\n      <StyledImg\r\n        src={require('../../assets/images/logoQuiz.png')}\r\n        alt='logo'\r\n        location={location}\r\n        style={style}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: \"quizfrontend-ac9ee.firebaseapp.com\",\r\n    databaseURL:\r\n      \"https://quizfrontend-ac9ee-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"quizfrontend-ac9ee\",\r\n    storageBucket: \"quizfrontend-ac9ee.appspot.com\",\r\n    messagingSenderId: \"598479422146\",\r\n    appId: \"1:598479422146:web:812463d02e2684ad0bf15b\",\r\n  };\r\n  \r\n  const app = initializeApp(firebaseConfig);\r\n  const db = getDatabase(app);\r\n\r\n  export default db;","import styled from 'styled-components';\r\n\r\nconst StyledSpanText = styled.span`\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: #ffffffcc;\r\n`;\r\nconst StyledSpanNumber = styled.span`\r\n  font-family: Inter;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 24px;\r\n  letter-spacing: 0em;\r\n  text-align: left;\r\n  color: #0cd3ff;\r\n`;\r\n\r\nconst StyledDivWrapper = styled.div`\r\n  box-sizing: border-box;\r\n  border-radius: 2px;\r\n  padding: 4px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n  gap: 8px;\r\n`;\r\n\r\nexport { StyledSpanText, StyledSpanNumber, StyledDivWrapper };\r\n","import { FC, useRef, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Spinner from '../../../../UI/Spinner/Spinner';\r\nimport { getAllTestedUsers } from '../../api/getAllTestedUsers';\r\n\r\nimport {\r\n  StyledSpanText,\r\n  StyledSpanNumber,\r\n  StyledDivWrapper,\r\n} from './TotalTested.styled';\r\n\r\nconst TotalTested: FC = () => {\r\n  const { t } = useTranslation();\r\n  const totalUsersRef = useRef<HTMLSpanElement>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [allTestedUsers, SetAllTestedUsers] = useState<number>(0);\r\n  const loadingIsOver = () => {\r\n    setLoading(false);\r\n  };\r\n\r\n  const setTestedUsers = (num: number) => {\r\n    SetAllTestedUsers(num);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllTestedUsers().then((allTestedUsers) => {\r\n      loadingIsOver();\r\n      setTestedUsers(allTestedUsers);\r\n    });\r\n  }, [loading]);\r\n\r\n  if (loading) {\r\n    return <Spinner width={50} height={50} color='#fcfdff' margin='auto' />;\r\n  }\r\n\r\n  return (\r\n    <StyledDivWrapper>\r\n      <StyledSpanText>{t('Протестировано')}</StyledSpanText>\r\n      <StyledSpanNumber ref={totalUsersRef}>{allTestedUsers}</StyledSpanNumber>\r\n    </StyledDivWrapper>\r\n  );\r\n};\r\n\r\nexport default TotalTested;\r\n","import { ref } from 'firebase/database';\r\nimport { onValue } from 'firebase/database';\r\n\r\nimport db from '../../../config/firebase/firebaseConfig';\r\n\r\nconst getAllTestedUsers = () => {\r\n  return new Promise<number>(function (resolve, reject) {\r\n    onValue(ref(db, 'users'), (snapshot) => {\r\n      const AllTestedUsers = Object.entries(snapshot.val()).length;\r\n      resolve(AllTestedUsers);\r\n    });\r\n  });\r\n};\r\n\r\nexport { getAllTestedUsers };\r\n","import styled from 'styled-components';\r\n\r\nconst StyleArticleDropdown = styled.article`\r\n  cursor: pointer;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: white;\r\n  cursor: pointer;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  color: black;\r\n  font: var(--font-little-text-regular);\r\n\r\n  @media screen and (min-width: 767.8px) {\r\n    font: var(--font-text-regular);\r\n  }\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  z-index: 2;\r\n  left: 0px;\r\n  top: 30px;\r\n  background-color: white;\r\n  position: absolute;\r\n  list-style-type: none;\r\n  font: var(--font-text-bold);\r\n  margin: 0;\r\n  padding: 5px 10px;\r\n  border-radius: 10px 0 0 10px;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n  // filter: invert(100);\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst StyledLi = styled.li`\r\n  font: var(--font-text-regular);\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledImg,\r\n  StyledSpan,\r\n};\r\n","import {\r\n  FC,\r\n  CSSProperties,\r\n  useEffect,\r\n  RefObject,\r\n  forwardRef,\r\n  Ref,\r\n  useState\r\n} from 'react';\r\n\r\nimport {\r\n  StyleArticleDropdown,\r\n  StyledButton,\r\n  StyledUl,\r\n  StyledLi,\r\n  StyledImg,\r\n  StyledSpan,\r\n} from './Dropdown.Styled';\r\n\r\nrequire('../../assets/images/chevrondown.png');\r\n\r\ntype DropdownProps = {\r\n  style?: CSSProperties;\r\n  selected: string;\r\n  data: string[];\r\n  onClickElement?: (item: string) => void;\r\n  ref: RefObject<HTMLDivElement>;\r\n};\r\n\r\nconst Dropdown = forwardRef(\r\n  (\r\n    {\r\n      data,\r\n      selected,\r\n      style,\r\n      onClickElement,\r\n    }: DropdownProps,\r\n    ref: Ref<HTMLDivElement>,\r\n  ) => {\r\n    const [isActive, setActive] = useState<boolean>(false);\r\n\r\n    const toggleList = () => {\r\n      setActive((isActive) => !isActive);\r\n    };\r\n  \r\n    const hideList = () => {\r\n      setActive(false);\r\n    };\r\n\r\n\r\n    const dropdownElements = data.map((item: string, index: number) => {\r\n      return (\r\n        <StyledLi\r\n          key={index + 1}\r\n          tabIndex={0}\r\n          onClick={() => {\r\n            onClickElement && onClickElement(item);\r\n            toggleList();\r\n          }}\r\n        >\r\n          {item}\r\n        </StyledLi>\r\n      );\r\n    });\r\n\r\n    useEffect(() => {\r\n      const handleClickOutside = (e: MouseEvent) => {\r\n        const target = e.target as HTMLElement;\r\n\r\n        if (!target.closest('#wrapper')) {\r\n          hideList();\r\n        }\r\n      };\r\n\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n\r\n    return (\r\n      <StyleArticleDropdown ref={ref} style={style} id='wrapper'>\r\n        <StyledButton onClick={toggleList}>\r\n          <StyledSpan className='dropdown-btn-text'>\r\n            {selected || data[0]}\r\n          </StyledSpan>\r\n          <StyledImg\r\n            src={require('../../assets/images/chevrondown.png')}\r\n            alt='Кнопка вниз'\r\n          />\r\n        </StyledButton>\r\n        {isActive && <StyledUl>{dropdownElements}</StyledUl>}\r\n      </StyleArticleDropdown>\r\n    );\r\n  },\r\n);\r\n\r\nDropdown.displayName = 'Dropdown';\r\n\r\nexport default Dropdown as FC<\r\n  DropdownProps & { ref?: RefObject<HTMLDivElement> }\r\n>;\r\n","import { useState, useRef } from 'react';\r\nimport i18next from 'i18next';\r\n\r\nimport Dropdown from '../../../../UI/Dropdown/Dropdown';\r\n\r\nconst DropdownLanguages = () => {\r\n  const data: string[] = ['Русский', 'English'];\r\n  const language: string = localStorage.getItem('language') || 'Русский';\r\n  const [selected, setSelected] = useState<string>(language);\r\n  const refWrapperLanguage = useRef<HTMLDivElement>(null);\r\n  const lang = document.querySelector('html')?.getAttribute('lang');\r\n\r\n\r\n  type IMapLanguage = Record<(typeof data)[number], string>;\r\n\r\n  const mapLanguage: IMapLanguage = {\r\n    Русский: 'ru',\r\n    English: 'en',\r\n  };\r\n\r\n  const onClickElement = (item: string) => {\r\n    const lang = mapLanguage[item as keyof IMapLanguage];\r\n    setSelected(item);\r\n    i18next.changeLanguage(lang);\r\n    localStorage.setItem('language', item);\r\n    (document.querySelector('html') as HTMLHtmlElement).setAttribute(\r\n      'lang', lang\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <Dropdown\r\n      data={data}\r\n      selected={selected}\r\n      onClickElement={(item: string) => onClickElement(item)}\r\n      ref={refWrapperLanguage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DropdownLanguages;\r\n","import HeaderHome from './HeaderHome/HeaderHome';\r\n\r\nexport default HeaderHome;\r\n","import { FC } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport Container from '../../../components/Container/Container';\r\nimport Logo from '../../../components/Logo/Logo';\r\nimport { StyledFlexWrapper } from '../../../styles/FlexWrapper.Styled';\r\nimport TotalTested from '../components/TotalTested/TotalTested';\r\nimport Header from '../../../components/Header/Header';\r\nimport DropdownLanguages from '../components/DropdownLanguages/DropdownLanguages';\r\n\r\nconst HeaderHome: FC = () => {\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Container>\r\n          <StyledFlexWrapper>\r\n            <Logo location='header' />\r\n            <DropdownLanguages />\r\n          </StyledFlexWrapper>\r\n          <TotalTested />\r\n        </Container>\r\n      </Header>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\nexport default HeaderHome;\r\n","import styled from 'styled-components';\r\n\r\ninterface IFlexWrapper {\r\n  gap?: number;\r\n  widthFlexStart?: number;\r\n  jc?:\r\n    | 'start'\r\n    | 'center'\r\n    | 'space-between'\r\n    | 'space-around'\r\n    | 'space-evenly'\r\n    | 'flex-start'\r\n    | 'flex-end';\r\n}\r\n\r\nconst StyledFlexWrapper = styled.div<IFlexWrapper>`\r\n  gap: ${({ gap }) => (gap ? gap + 'px' : '')};\r\n  ${function ({ widthFlexStart, jc = 'space-between' }) {\r\n    if (!widthFlexStart) {\r\n      return `\r\n            display: flex;\r\n            justify-content: ${jc};\r\n            align-items: center;\r\n            `;\r\n    } else {\r\n      return `\r\n      position: relative;\r\n      @media screen and (min-width: ${widthFlexStart}px) {\r\n        display: flex;\r\n        justify-content: ${jc};\r\n        align-items: center;\r\n        width: 100%;\r\n      }\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n\r\nexport { StyledFlexWrapper };\r\n"],"names":["ContainerStyled","styled","children","HeaderStyled","height","StyledImg","location","style","to","src","require","alt","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","app","initializeApp","getDatabase","StyledSpanText","StyledSpanNumber","StyledDivWrapper","t","useTranslation","totalUsersRef","useRef","loading","setLoading","useState","allTestedUsers","SetAllTestedUsers","useEffect","Promise","resolve","reject","onValue","ref","db","snapshot","AllTestedUsers","Object","entries","val","length","then","Spinner","width","color","margin","StyleArticleDropdown","StyledButton","StyledSpan","StyledUl","StyledLi","Dropdown","forwardRef","data","selected","onClickElement","isActive","setActive","toggleList","dropdownElements","map","item","index","tabIndex","onClick","handleClickOutside","e","target","closest","document","addEventListener","removeEventListener","id","className","displayName","language","localStorage","getItem","setSelected","refWrapperLanguage","mapLanguage","querySelector","getAttribute","Русский","English","lang","i18next","setItem","setAttribute","Header","Container","Logo","StyledFlexWrapper","gap","widthFlexStart","jc"],"sourceRoot":""}